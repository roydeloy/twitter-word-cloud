



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>d3-cloud/d3.js at master Â· jasondavies/d3-cloud</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="jasondavies/d3-cloud" name="twitter:title" /><meta content="d3-cloud - Create word clouds in JavaScript." name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/31223?v=3&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/31223?v=3&amp;s=400" property="og:image" /><meta content="jasondavies/d3-cloud" property="og:title" /><meta content="https://github.com/jasondavies/d3-cloud" property="og:url" /><meta content="d3-cloud - Create word clouds in JavaScript." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="5FD0F8DF:2D77:518F28:54B510AF" name="octolytics-dimension-request_id" /><meta content="5827188" name="octolytics-actor-id" /><meta content="roydeloy" name="octolytics-actor-login" /><meta content="130fa8a2a23833a07bd30ab676203dd2d09a11a037544c270f8189e05bfdda9e" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="CE4iiPX0mDwle8y5Z/+O2d/TUAbm5QQ2Jb0dA3d3KYrSHszpNFOriZlIY1OfNgtvnpidSHKADZhn7mVcEJ0fng==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-1e9b75e41346c98d95c9040e46472201ca0921fa529b8f6461a07eea77ba7921.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-400d44bfa61f24ddc10d478b3315a61877a6382668dd6f1c09190ca374a608ff.css" media="all" rel="stylesheet" type="text/css" />
    
    


    <meta http-equiv="x-pjax-version" content="3b7e406172341de396944e6cf02861e6">

      
  <meta name="description" content="d3-cloud - Create word clouds in JavaScript.">
  <meta name="go-import" content="github.com/jasondavies/d3-cloud git https://github.com/jasondavies/d3-cloud.git">

  <meta content="31223" name="octolytics-dimension-user_id" /><meta content="jasondavies" name="octolytics-dimension-user_login" /><meta content="3390543" name="octolytics-dimension-repository_id" /><meta content="jasondavies/d3-cloud" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="3390543" name="octolytics-dimension-repository_network_root_id" /><meta content="jasondavies/d3-cloud" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/jasondavies/d3-cloud/commits/master.atom" rel="alternate" title="Recent Commits to d3-cloud:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/jasondavies/d3-cloud/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/jasondavies/d3-cloud/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/roydeloy" data-ga-click="Header, go to profile, text:username">
      <img alt="roydeloy" class="avatar" data-user="5827188" height="20" src="https://avatars1.githubusercontent.com/u/5827188?v=3&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">roydeloy</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new" data-ga-click="Header, create new repository, icon:repo"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new" data-ga-click="Header, create new organization, icon:organization"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="jasondavies/d3-cloud">This repository</span>
    </li>
      <li>
        <a href="/jasondavies/d3-cloud/issues/new" data-ga-click="Header, create new issue, icon:issue"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status all-read"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="7JjMS4FHw/LQx9XYu5hZIEbiSuftYYnH8PjUzgTSO2JSvbvGOUjYmgFuwv/0RCcnJxvqPkt8dYpvLke9FOHa/g==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        
<div class="flash-global js-notice flash-warn">
<div class="container">
    <h2>
      You don't have any verified emails.  We recommend <a href="https://github.com/settings/emails">verifying</a> at least one email.
    </h2>
    <p>
Email verification helps our support team verify ownership if you lose account access and allows you to receive all the notifications you ask for.
    </p>


















</div>
</div>


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="dpZbZYQTwRRtLhTkcnwQFHBWAf8hLKRA7hm8nEiIfqfsvQHXg+Q90K9G9ENXugeAYfiKaDfS4oKWSNzGLa765w==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="3390543" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/jasondavies/d3-cloud/watchers">
        85
      </a>
      <a href="/jasondavies/d3-cloud/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/jasondavies/d3-cloud/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="prDwIwC97AvfIbCjrYtUgDBCvBNbiDXbOUxDo5rPsYIj3fVPDIAM4yS4hw7AnPsmzvE4ezLKOyXM6kkikdDXKA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar jasondavies/d3-cloud">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/jasondavies/d3-cloud/stargazers">
          970
        </a>
</form>
    <form accept-charset="UTF-8" action="/jasondavies/d3-cloud/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="8qsdKDt6mwrB3O1ARoZcYJeg0P1fO6UknVoY/+3Nyluhqi8ht3d3K2AurvAydoiR9VFF0FtRmtseko5+2Nrv1w==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star jasondavies/d3-cloud">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/jasondavies/d3-cloud/stargazers">
          970
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/jasondavies/d3-cloud/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of jasondavies/d3-cloud to your account" aria-label="Fork your own copy of jasondavies/d3-cloud to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/jasondavies/d3-cloud/network" class="social-count">374</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/jasondavies" class="url fn" itemprop="url" rel="author"><span itemprop="title">jasondavies</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/jasondavies/d3-cloud" class="js-current-repository" data-pjax="#js-repo-pjax-container">d3-cloud</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/jasondavies/d3-cloud/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/jasondavies/d3-cloud" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /jasondavies/d3-cloud">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/jasondavies/d3-cloud/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /jasondavies/d3-cloud/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/jasondavies/d3-cloud/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /jasondavies/d3-cloud/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>


  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/jasondavies/d3-cloud/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /jasondavies/d3-cloud/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/jasondavies/d3-cloud/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /jasondavies/d3-cloud/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/jasondavies/d3-cloud.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="git@github.com:jasondavies/d3-cloud.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/jasondavies/d3-cloud" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<p class="clone-options">You can clone with
  <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>, <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>, or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/jasondavies/d3-cloud" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save jasondavies/d3-cloud to your computer and use it in GitHub Desktop." aria-label="Save jasondavies/d3-cloud to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/jasondavies/d3-cloud/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of jasondavies/d3-cloud as a zip file"
                   title="Download the contents of jasondavies/d3-cloud as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/jasondavies/d3-cloud/blob/a81e468c685f7f32fbd55b578e3ae88b6a0611b6/lib/d3/d3.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:dca9ae9ca3cdcc5302744e55f8375fca -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/blob/master/lib/d3/d3.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/tree/v1.0.5/lib/d3/d3.js"
                 data-name="v1.0.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.5">v1.0.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/tree/v1.0.4/lib/d3/d3.js"
                 data-name="v1.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.4">v1.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/tree/v1.0.3/lib/d3/d3.js"
                 data-name="v1.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.3">v1.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/tree/v1.0.2/lib/d3/d3.js"
                 data-name="v1.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.2">v1.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/tree/v1.0.1/lib/d3/d3.js"
                 data-name="v1.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.1">v1.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jasondavies/d3-cloud/tree/v1.0.0/lib/d3/d3.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/jasondavies/d3-cloud/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jasondavies/d3-cloud" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">d3-cloud</span></a></span></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jasondavies/d3-cloud/tree/master/lib" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jasondavies/d3-cloud/tree/master/lib/d3" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">d3</span></a></span><span class="separator">/</span><strong class="final-path">d3.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Jason Davies" class="avatar" data-user="31223" height="24" src="https://avatars3.githubusercontent.com/u/31223?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/jasondavies" rel="author">jasondavies</a></span>
        <time datetime="2012-02-08T22:34:43Z" is="relative-time">Feb 8, 2012</time>
        <div class="commit-title">
            <a href="/jasondavies/d3-cloud/commit/52c0b1ade665321e4f84df2f4065746a347bc51c" class="message" data-pjax="true" title="Initial import.">Initial import.</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Jason Davies" data-user="31223" height="24" src="https://avatars3.githubusercontent.com/u/31223?v=3&amp;s=48" width="24" />
            <a href="/jasondavies">jasondavies</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>4763 lines (4182 sloc)</span>
          <span class="meta-divider"></span>
        <span>131.433 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/jasondavies/d3-cloud/raw/master/lib/d3/d3.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/jasondavies/d3-cloud/blame/master/lib/d3/d3.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/jasondavies/d3-cloud/commits/master/lib/d3/d3.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/jasondavies/d3-cloud?branch=master&amp;filepath=lib%2Fd3%2Fd3.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/jasondavies/d3-cloud/edit/master/lib/d3/d3.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/jasondavies/d3-cloud/delete/master/lib/d3/d3.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    

  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-s3">Date</span>.now) <span class="pl-s3">Date</span>.<span class="pl-en">now</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">+</span><span class="pl-k">new</span> <span class="pl-en">Date</span>;</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line">  <span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>.setProperty(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line">} <span class="pl-k">catch</span> (error) {</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line">  <span class="pl-s">var</span> d3_style_prototype <span class="pl-k">=</span> CSSStyleDeclaration.<span class="pl-sc">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line">      d3_style_setProperty <span class="pl-k">=</span> d3_style_prototype.setProperty;</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line">  <span class="pl-s3">d3_style_prototype</span>.<span class="pl-en">setProperty</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line">    d3_style_setProperty.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, name, value <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, priority);</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line">d3 <span class="pl-k">=</span> {version<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>2.7.4<span class="pl-pds">&quot;</span></span>}; <span class="pl-c">// semver</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="pl-s">var</span> d3_array <span class="pl-k">=</span> d3_arraySlice; <span class="pl-c">// conversion for NodeLists</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_arrayCopy</span>(<span class="pl-vpf">pseudoarray</span>) {</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> pseudoarray.<span class="pl-sc">length</span>, array <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) array.<span class="pl-s3">push</span>(pseudoarray[i]);</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line">  <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_arraySlice</span>(<span class="pl-vpf">pseudoarray</span>) {</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(pseudoarray);</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line"><span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line">  d3_array(<span class="pl-s3">document</span>.<span class="pl-sc">documentElement</span>.<span class="pl-sc">childNodes</span>)[<span class="pl-c1">0</span>].<span class="pl-sc">nodeType</span>;</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line">} <span class="pl-k">catch</span>(e) {</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line">  d3_array <span class="pl-k">=</span> d3_arrayCopy;</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line"><span class="pl-s">var</span> d3_arraySubclass <span class="pl-k">=</span> [].__proto__<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line"><span class="pl-c">// Until ECMAScript supports array subclassing, prototype injection works well.</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">prototype</span>) {</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line">  array.__proto__ <span class="pl-k">=</span> prototype;</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line">}<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line"><span class="pl-c">// And if your browser doesn&#39;t support __proto__, we&#39;ll use direct extension.</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">prototype</span>) {</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> property <span class="pl-k">in</span> prototype) array[property] <span class="pl-k">=</span> prototype[property];</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_this</span>() {</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">functor</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">typeof</span> v <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-en">v</span> : <span class="pl-st">function</span>() { <span class="pl-k">return</span> v; };</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line"><span class="pl-c">// Copies a variable number of methods from source to target.</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">rebind</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">target</span>, <span class="pl-vpf">source</span>) {</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>, n <span class="pl-k">=</span> arguments.<span class="pl-sc">length</span>, method;</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) target[method <span class="pl-k">=</span> arguments[i]] <span class="pl-k">=</span> d3_rebind(target, source, source[method]);</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line">  <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line"><span class="pl-c">// Method is assumed to be a standard D3 getter-setter:</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line"><span class="pl-c">// If passed with no arguments, gets the value.</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line"><span class="pl-c">// If passed with arguments, sets the value and returns the target.</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_rebind</span>(<span class="pl-vpf">target</span>, <span class="pl-vpf">source</span>, <span class="pl-vpf">method</span>) {</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line">    <span class="pl-s">var</span> value <span class="pl-k">=</span> method.<span class="pl-s3">apply</span>(source, arguments);</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line">    <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">?</span> target <span class="pl-k">:</span> value;</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">ascending</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line">  <span class="pl-k">return</span> a <span class="pl-k">&lt;</span> b <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> a <span class="pl-k">&gt;</span> b <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> a <span class="pl-k">&gt;=</span> b <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">descending</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line">  <span class="pl-k">return</span> b <span class="pl-k">&lt;</span> a <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> b <span class="pl-k">&gt;</span> a <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> b <span class="pl-k">&gt;=</span> a <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">mean</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line">  <span class="pl-s">var</span> n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line">      a,</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line">      m <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line">      j <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_number(a <span class="pl-k">=</span> array[i])) m <span class="pl-k">+=</span> (a <span class="pl-k">-</span> m) / <span class="pl-k">++</span>j;</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_number(a <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i))) m <span class="pl-k">+=</span> (a <span class="pl-k">-</span> m) / <span class="pl-k">++</span>j;</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line">  <span class="pl-k">return</span> j <span class="pl-k">?</span> m <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">median</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) array <span class="pl-k">=</span> array.map(f);</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line">  array <span class="pl-k">=</span> array.filter(d3_number);</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line">  <span class="pl-k">return</span> array.<span class="pl-sc">length</span> <span class="pl-k">?</span> d3.quantile(array.<span class="pl-s3">sort</span>(d3.ascending), .<span class="pl-c1">5</span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">min</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line">      a,</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code js-file-line">      b;</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n <span class="pl-k">&amp;&amp;</span> ((a <span class="pl-k">=</span> array[i]) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> a <span class="pl-k">!=</span> a)) a <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n <span class="pl-k">&amp;&amp;</span> ((a <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i)) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> a <span class="pl-k">!=</span> a)) a <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code js-file-line">  <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">max</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code js-file-line">      a,</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code js-file-line">      b;</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n <span class="pl-k">&amp;&amp;</span> ((a <span class="pl-k">=</span> array[i]) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> a <span class="pl-k">!=</span> a)) a <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;</span> a) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n <span class="pl-k">&amp;&amp;</span> ((a <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i)) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> a <span class="pl-k">!=</span> a)) a <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;</span> a) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code js-file-line">  <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code js-file-line">      a,</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code js-file-line">      b,</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code js-file-line">      c;</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n <span class="pl-k">&amp;&amp;</span> ((a <span class="pl-k">=</span> c <span class="pl-k">=</span> array[i]) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> a <span class="pl-k">!=</span> a)) a <span class="pl-k">=</span> c <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code js-file-line">      <span class="pl-k">if</span> (a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code js-file-line">      <span class="pl-k">if</span> (c <span class="pl-k">&lt;</span> b) c <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n <span class="pl-k">&amp;&amp;</span> ((a <span class="pl-k">=</span> c <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i)) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> a <span class="pl-k">!=</span> a)) a <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code js-file-line">      <span class="pl-k">if</span> (a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code js-file-line">      <span class="pl-k">if</span> (c <span class="pl-k">&lt;</span> b) c <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code js-file-line">  <span class="pl-k">return</span> [a, c];</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code js-file-line">d3.random <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code js-file-line">  <span class="pl-en">normal</span>: <span class="pl-st">function</span>(<span class="pl-vpf">mean</span>, <span class="pl-vpf">deviation</span>) {</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) deviation <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) mean <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code js-file-line">      <span class="pl-s">var</span> x, y, r;</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code js-file-line">      <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code js-file-line">        x <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">random</span>() <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code js-file-line">        y <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">random</span>() <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code js-file-line">        r <span class="pl-k">=</span> x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y;</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code js-file-line">      } <span class="pl-k">while</span> (<span class="pl-k">!</span>r <span class="pl-k">||</span> r <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code js-file-line">      <span class="pl-k">return</span> mean <span class="pl-k">+</span> deviation <span class="pl-k">*</span> x <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-s3">Math</span><span class="pl-s3">.log</span>(r) / r);</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_number</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code js-file-line">  <span class="pl-k">return</span> x <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-s3">isNaN</span>(x);</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">sum</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code js-file-line">  <span class="pl-s">var</span> s <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code js-file-line">      a,</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(a <span class="pl-k">=</span> <span class="pl-k">+</span>array[i])) s <span class="pl-k">+=</span> a;</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(a <span class="pl-k">=</span> <span class="pl-k">+</span>f.<span class="pl-s3">call</span>(array, array[i], i))) s <span class="pl-k">+=</span> a;</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code js-file-line">  <span class="pl-k">return</span> s;</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code js-file-line"><span class="pl-c">// R-7 per &lt;http://en.wikipedia.org/wiki/Quantile&gt;</span></td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">quantile</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">values</span>, <span class="pl-vpf">p</span>) {</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code js-file-line">  <span class="pl-s">var</span> H <span class="pl-k">=</span> (values.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> p <span class="pl-k">+</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code js-file-line">      h <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(H),</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code js-file-line">      v <span class="pl-k">=</span> values[h <span class="pl-k">-</span> <span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code js-file-line">      e <span class="pl-k">=</span> H <span class="pl-k">-</span> h;</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code js-file-line">  <span class="pl-k">return</span> e <span class="pl-k">?</span> v <span class="pl-k">+</span> e <span class="pl-k">*</span> (values[h] <span class="pl-k">-</span> v) <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">transpose</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">matrix</span>) {</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.zip.<span class="pl-s3">apply</span>(d3, matrix);</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">zip</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>(n <span class="pl-k">=</span> arguments.<span class="pl-sc">length</span>)) <span class="pl-k">return</span> [];</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> d3.<span class="pl-s3">min</span>(arguments, d3_zipLength), zips <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(m); <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n, zip <span class="pl-k">=</span> zips[i] <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n); <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code js-file-line">      zip[j] <span class="pl-k">=</span> arguments[j][i];</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code js-file-line">  <span class="pl-k">return</span> zips;</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_zipLength</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code js-file-line">  <span class="pl-k">return</span> d.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code js-file-line"><span class="pl-c">// Locate the insertion point for x in a to maintain sorted order. The</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code js-file-line"><span class="pl-c">// arguments lo and hi may be used to specify a subset of the array which should</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code js-file-line"><span class="pl-c">// be considered; by default the entire array is used. If x is already present</span></td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code js-file-line"><span class="pl-c">// in a, the insertion point will be before (to the left of) any existing</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code js-file-line"><span class="pl-c">// entries. The return value is suitable for use as the first argument to</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code js-file-line"><span class="pl-c">// `array.splice` assuming that a is already sorted.</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code js-file-line"><span class="pl-c">// The returned insertion point i partitions the array a into two halves so that</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code js-file-line"><span class="pl-c">// all v &lt; x for v in a[lo:i] for the left side and all v &gt;= x for v in a[i:hi]</span></td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code js-file-line"><span class="pl-c">// for the right side.</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">bisectLeft</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">lo</span>, <span class="pl-vpf">hi</span>) {</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) lo <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) hi <span class="pl-k">=</span> a.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code js-file-line">  <span class="pl-k">while</span> (lo <span class="pl-k">&lt;</span> hi) {</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code js-file-line">    <span class="pl-s">var</span> mid <span class="pl-k">=</span> (lo <span class="pl-k">+</span> hi) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code js-file-line">    <span class="pl-k">if</span> (a[mid] <span class="pl-k">&lt;</span> x) lo <span class="pl-k">=</span> mid <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code js-file-line">    <span class="pl-k">else</span> hi <span class="pl-k">=</span> mid;</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code js-file-line">  <span class="pl-k">return</span> lo;</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code js-file-line"><span class="pl-c">// Similar to bisectLeft, but returns an insertion point which comes after (to</span></td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code js-file-line"><span class="pl-c">// the right of) any existing entries of x in a.</span></td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code js-file-line"><span class="pl-c">// The returned insertion point i partitions the array into two halves so that</span></td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code js-file-line"><span class="pl-c">// all v &lt;= x for v in a[lo:i] for the left side and all v &gt; x for v in a[i:hi]</span></td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code js-file-line"><span class="pl-c">// for the right side.</span></td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code js-file-line">d3.bisect <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">bisectRight</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">lo</span>, <span class="pl-vpf">hi</span>) {</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) lo <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) hi <span class="pl-k">=</span> a.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code js-file-line">  <span class="pl-k">while</span> (lo <span class="pl-k">&lt;</span> hi) {</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code js-file-line">    <span class="pl-s">var</span> mid <span class="pl-k">=</span> (lo <span class="pl-k">+</span> hi) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&lt;</span> a[mid]) hi <span class="pl-k">=</span> mid;</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code js-file-line">    <span class="pl-k">else</span> lo <span class="pl-k">=</span> mid <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code js-file-line">  <span class="pl-k">return</span> lo;</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">first</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code js-file-line">      a <span class="pl-k">=</span> array[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code js-file-line">      b;</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) f <span class="pl-k">=</span> d3.ascending;</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code js-file-line">    <span class="pl-k">if</span> (f.<span class="pl-s3">call</span>(array, a, b <span class="pl-k">=</span> array[i]) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code js-file-line">      a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code js-file-line">  <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">last</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code js-file-line">      a <span class="pl-k">=</span> array[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code js-file-line">      b;</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) f <span class="pl-k">=</span> d3.ascending;</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code js-file-line">    <span class="pl-k">if</span> (f.<span class="pl-s3">call</span>(array, a, b <span class="pl-k">=</span> array[i]) <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code js-file-line">      a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code js-file-line">  <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">nest</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code js-file-line">  <span class="pl-s">var</span> nest <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code js-file-line">      keys <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code js-file-line">      sortKeys <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code js-file-line">      sortValues,</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code js-file-line">      rollup;</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">map</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">depth</span>) {</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code js-file-line">    <span class="pl-k">if</span> (depth <span class="pl-k">&gt;=</span> keys.<span class="pl-sc">length</span>) <span class="pl-k">return</span> rollup</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code js-file-line">        <span class="pl-k">?</span> rollup.<span class="pl-s3">call</span>(nest, array) <span class="pl-k">:</span> (sortValues</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code js-file-line">        <span class="pl-k">?</span> array.<span class="pl-s3">sort</span>(sortValues)</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code js-file-line">        <span class="pl-k">:</span> array);</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code js-file-line">    <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code js-file-line">        n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code js-file-line">        key <span class="pl-k">=</span> keys[depth<span class="pl-k">++</span>],</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code js-file-line">        keyValue,</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code js-file-line">        object,</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code js-file-line">        o <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code js-file-line">      <span class="pl-k">if</span> ((keyValue <span class="pl-k">=</span> key(object <span class="pl-k">=</span> array[i])) <span class="pl-k">in</span> o) {</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code js-file-line">        o[keyValue].<span class="pl-s3">push</span>(object);</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code js-file-line">        o[keyValue] <span class="pl-k">=</span> [object];</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code js-file-line">    <span class="pl-k">for</span> (keyValue <span class="pl-k">in</span> o) {</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code js-file-line">      o[keyValue] <span class="pl-k">=</span> map(o[keyValue], depth);</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code js-file-line">    <span class="pl-k">return</span> o;</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">entries</span>(<span class="pl-vpf">map</span>, <span class="pl-vpf">depth</span>) {</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code js-file-line">    <span class="pl-k">if</span> (depth <span class="pl-k">&gt;=</span> keys.<span class="pl-sc">length</span>) <span class="pl-k">return</span> map;</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code js-file-line">    <span class="pl-s">var</span> a <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code js-file-line">        sortKey <span class="pl-k">=</span> sortKeys[depth<span class="pl-k">++</span>],</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code js-file-line">        key;</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code js-file-line">    <span class="pl-k">for</span> (key <span class="pl-k">in</span> map) {</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code js-file-line">      a.<span class="pl-s3">push</span>({key<span class="pl-k">:</span> key, values<span class="pl-k">:</span> entries(map[key], depth)});</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code js-file-line">    <span class="pl-k">if</span> (sortKey) a.<span class="pl-s3">sort</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code js-file-line">      <span class="pl-k">return</span> sortKey(a.key, b.key);</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code js-file-line">    <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code js-file-line">  <span class="pl-s3">nest</span>.<span class="pl-en">map</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>) {</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code js-file-line">    <span class="pl-k">return</span> map(array, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code js-file-line">  <span class="pl-s3">nest</span>.<span class="pl-en">entries</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>) {</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code js-file-line">    <span class="pl-k">return</span> entries(map(array, <span class="pl-c1">0</span>), <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code js-file-line">  <span class="pl-s3">nest</span>.<span class="pl-en">key</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code js-file-line">    keys.<span class="pl-s3">push</span>(d);</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code js-file-line">    <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code js-file-line">  <span class="pl-c">// Specifies the order for the most-recently specified key.</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code js-file-line">  <span class="pl-c">// Note: only applies to entries. Map keys are unordered!</span></td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code js-file-line">  <span class="pl-s3">nest</span>.<span class="pl-en">sortKeys</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">order</span>) {</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code js-file-line">    sortKeys[keys.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> order;</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code js-file-line">    <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code js-file-line">  <span class="pl-c">// Specifies the order for leaf values.</span></td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code js-file-line">  <span class="pl-c">// Applies to both maps and entries array.</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code js-file-line">  <span class="pl-s3">nest</span>.<span class="pl-en">sortValues</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">order</span>) {</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code js-file-line">    sortValues <span class="pl-k">=</span> order;</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code js-file-line">    <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code js-file-line">  <span class="pl-s3">nest</span>.<span class="pl-en">rollup</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code js-file-line">    rollup <span class="pl-k">=</span> f;</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code js-file-line">    <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code js-file-line">  <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">keys</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">map</span>) {</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code js-file-line">  <span class="pl-s">var</span> keys <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> key <span class="pl-k">in</span> map) keys.<span class="pl-s3">push</span>(key);</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code js-file-line">  <span class="pl-k">return</span> keys;</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">values</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">map</span>) {</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code js-file-line">  <span class="pl-s">var</span> values <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> key <span class="pl-k">in</span> map) values.<span class="pl-s3">push</span>(map[key]);</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code js-file-line">  <span class="pl-k">return</span> values;</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">entries</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">map</span>) {</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code js-file-line">  <span class="pl-s">var</span> entries <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> key <span class="pl-k">in</span> map) entries.<span class="pl-s3">push</span>({key<span class="pl-k">:</span> key, value<span class="pl-k">:</span> map[key]});</td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code js-file-line">  <span class="pl-k">return</span> entries;</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">permute</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">indexes</span>) {</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code js-file-line">  <span class="pl-s">var</span> permutes <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code js-file-line">      n <span class="pl-k">=</span> indexes.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) permutes[i] <span class="pl-k">=</span> array[indexes[i]];</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code js-file-line">  <span class="pl-k">return</span> permutes;</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">merge</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">arrays</span>) {</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.concat.<span class="pl-s3">apply</span>([], arrays);</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">split</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">array</span>, <span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code js-file-line">  <span class="pl-s">var</span> arrays <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code js-file-line">      values <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code js-file-line">      value,</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) f <span class="pl-k">=</span> d3_splitter;</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code js-file-line">    <span class="pl-k">if</span> (f.<span class="pl-s3">call</span>(values, value <span class="pl-k">=</span> array[i], i)) {</td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code js-file-line">      values <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>values.<span class="pl-sc">length</span>) arrays.<span class="pl-s3">push</span>(values);</td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code js-file-line">      values.<span class="pl-s3">push</span>(value);</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code js-file-line">  <span class="pl-k">return</span> arrays;</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_splitter</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code js-file-line">  <span class="pl-k">return</span> d <span class="pl-k">==</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_collapse</span>(<span class="pl-vpf">s</span>) {</td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code js-file-line">  <span class="pl-k">return</span> s.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span>)<span class="pl-k">|</span>(<span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span>)<span class="pl-pds">/</span>g</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code js-file-line"><span class="pl-c"> * @param {number} start</span></td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code js-file-line"><span class="pl-c"> * @param {number=} stop</span></td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code js-file-line"><span class="pl-c"> * @param {number=} step</span></td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">start</span>, <span class="pl-vpf">stop</span>, <span class="pl-vpf">step</span>) {</td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code js-file-line">    step <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code js-file-line">      stop <span class="pl-k">=</span> start;</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code js-file-line">      start <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code js-file-line">  <span class="pl-k">if</span> ((stop <span class="pl-k">-</span> start) / step <span class="pl-k">==</span> <span class="pl-c1">Infinity</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>infinite range<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code js-file-line">  <span class="pl-s">var</span> range <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code js-file-line">       i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code js-file-line">       j;</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code js-file-line">  <span class="pl-k">if</span> (step <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">while</span> ((j <span class="pl-k">=</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> <span class="pl-k">++</span>i) <span class="pl-k">&gt;</span> stop) range.<span class="pl-s3">push</span>(j);</td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code js-file-line">  <span class="pl-k">else</span> <span class="pl-k">while</span> ((j <span class="pl-k">=</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> <span class="pl-k">++</span>i) <span class="pl-k">&lt;</span> stop) range.<span class="pl-s3">push</span>(j);</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code js-file-line">  <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">requote</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">s</span>) {</td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code js-file-line">  <span class="pl-k">return</span> s.<span class="pl-s3">replace</span>(d3_requote_re, <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$&amp;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code js-file-line"><span class="pl-s">var</span> d3_requote_re <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\\\^\$\*\+\?\|\[\]\(\)\.\{\}</span>]</span><span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">round</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">n</span>) {</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code js-file-line">  <span class="pl-k">return</span> n</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(x <span class="pl-k">*</span> (n <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, n))) / n</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(x);</td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">xhr</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">url</span>, <span class="pl-vpf">mime</span>, <span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code js-file-line">  <span class="pl-s">var</span> req <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;</td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) callback <span class="pl-k">=</span> mime, mime <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code js-file-line">  <span class="pl-k">else</span> <span class="pl-k">if</span> (mime <span class="pl-k">&amp;&amp;</span> req.overrideMimeType) req.overrideMimeType(mime);</td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code js-file-line">  req.<span class="pl-s3">open</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>, url, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code js-file-line">  <span class="pl-k">if</span> (mime) req.<span class="pl-s3">setRequestHeader</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Accept<span class="pl-pds">&quot;</span></span>, mime);</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code js-file-line">  <span class="pl-s3">req</span>.<span class="pl-en">onreadystatechange</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code js-file-line">    <span class="pl-k">if</span> (req.<span class="pl-sc">readyState</span> <span class="pl-k">===</span> <span class="pl-c1">4</span>) callback(req.<span class="pl-sc">status</span> <span class="pl-k">&lt;</span> <span class="pl-c1">300</span> <span class="pl-k">?</span> req <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code js-file-line">  req.<span class="pl-s3">send</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">text</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">url</span>, <span class="pl-vpf">mime</span>, <span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">ready</span>(<span class="pl-vpf">req</span>) {</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code js-file-line">    callback(req <span class="pl-k">&amp;&amp;</span> req.<span class="pl-sc">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code js-file-line">    callback <span class="pl-k">=</span> mime;</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code js-file-line">    mime <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code js-file-line">  d3.xhr(url, mime, ready);</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">json</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">url</span>, <span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code js-file-line">  d3.<span class="pl-sc">text</span>(url, <span class="pl-s1"><span class="pl-pds">&quot;</span>application/json<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">text</span>) {</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code js-file-line">    callback(text <span class="pl-k">?</span> JSON.<span class="pl-s3">parse</span>(text) <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">html</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">url</span>, <span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code js-file-line">  d3.<span class="pl-sc">text</span>(url, <span class="pl-s1"><span class="pl-pds">&quot;</span>text/html<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">text</span>) {</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code js-file-line">    <span class="pl-k">if</span> (text <span class="pl-k">!=</span> <span class="pl-c1">null</span>) { <span class="pl-c">// Treat empty string as valid HTML.</span></td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code js-file-line">      <span class="pl-s">var</span> range <span class="pl-k">=</span> <span class="pl-s3">document</span>.createRange();</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code js-file-line">      range.selectNode(<span class="pl-s3">document</span>.<span class="pl-sc">body</span>);</td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code js-file-line">      text <span class="pl-k">=</span> range.createContextualFragment(text);</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code js-file-line">    callback(text);</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">xml</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">url</span>, <span class="pl-vpf">mime</span>, <span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">ready</span>(<span class="pl-vpf">req</span>) {</td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code js-file-line">    callback(req <span class="pl-k">&amp;&amp;</span> req.<span class="pl-sc">responseXML</span>);</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code js-file-line">    callback <span class="pl-k">=</span> mime;</td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code js-file-line">    mime <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code js-file-line">  d3.xhr(url, mime, ready);</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code js-file-line"><span class="pl-s">var</span> d3_nsPrefix <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code js-file-line">  svg<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code js-file-line">  xhtml<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code js-file-line">  xlink<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xlink<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code js-file-line">  xml<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/XML/1998/namespace<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code js-file-line">  xmlns<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/xmlns/<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code js-file-line">d3.ns <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code js-file-line">  prefix<span class="pl-k">:</span> d3_nsPrefix,</td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code js-file-line">  <span class="pl-en">qualify</span>: <span class="pl-st">function</span>(<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code js-file-line">    <span class="pl-s">var</span> i <span class="pl-k">=</span> name.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code js-file-line">    <span class="pl-k">return</span> i <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> (name <span class="pl-k">in</span> d3_nsPrefix</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code js-file-line">      <span class="pl-k">?</span> {space<span class="pl-k">:</span> d3_nsPrefix[name], local<span class="pl-k">:</span> name} <span class="pl-k">:</span> name)</td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code js-file-line">      <span class="pl-k">:</span> {space<span class="pl-k">:</span> d3_nsPrefix[name.<span class="pl-s3">substring</span>(<span class="pl-c1">0</span>, i)], local<span class="pl-k">:</span> name.<span class="pl-s3">substring</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>)};</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">dispatch</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code js-file-line">  <span class="pl-s">var</span> dispatch <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_dispatch</span>(),</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code js-file-line">      n <span class="pl-k">=</span> arguments.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) dispatch[arguments[i]] <span class="pl-k">=</span> d3_dispatch_event(dispatch);</td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code js-file-line">  <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_dispatch</span>() {}</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code js-file-line"><span class="pl-s3">d3_dispatch</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">on</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">type</span>, <span class="pl-vpf">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> type.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code js-file-line">      name <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code js-file-line">  <span class="pl-c">// Extract optional namespace, e.g., &quot;click.foo&quot;</span></td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code js-file-line">  <span class="pl-k">if</span> (i <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code js-file-line">    name <span class="pl-k">=</span> type.<span class="pl-s3">substring</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code js-file-line">    type <span class="pl-k">=</span> type.<span class="pl-s3">substring</span>(<span class="pl-c1">0</span>, i);</td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code js-file-line">  <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-v">this</span>[type].on(name)</td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-v">this</span>[type].on(name, listener);</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_dispatch_event</span>(<span class="pl-vpf">dispatch</span>) {</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code js-file-line">  <span class="pl-s">var</span> listeners <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code js-file-line">      listenerByName <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">event</span>() {</td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code js-file-line">    <span class="pl-s">var</span> z <span class="pl-k">=</span> listeners, <span class="pl-c">// defensive reference</span></td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code js-file-line">        i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code js-file-line">        n <span class="pl-k">=</span> z.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code js-file-line">        l;</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (l <span class="pl-k">=</span> z[i].on) l.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code js-file-line">    <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code js-file-line">  <span class="pl-s3">event</span>.<span class="pl-en">on</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code js-file-line">    <span class="pl-s">var</span> l, i;</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code js-file-line">    <span class="pl-c">// return the current listener, if any</span></td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> (l <span class="pl-k">=</span> listenerByName[name]) <span class="pl-k">&amp;&amp;</span> l.on;</td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code js-file-line">    <span class="pl-c">// remove the old listener, if any (with copy-on-write)</span></td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code js-file-line">    <span class="pl-k">if</span> (l <span class="pl-k">=</span> listenerByName[name]) {</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code js-file-line">      l.on <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code js-file-line">      listeners <span class="pl-k">=</span> listeners.<span class="pl-s3">slice</span>(<span class="pl-c1">0</span>, i <span class="pl-k">=</span> listeners.<span class="pl-s3">indexOf</span>(l)).<span class="pl-s3">concat</span>(listeners.<span class="pl-s3">slice</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code js-file-line">      <span class="pl-k">delete</span> listenerByName[name];</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code js-file-line">    <span class="pl-c">// add the new listener, if any</span></td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code js-file-line">    <span class="pl-k">if</span> (listener) {</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code js-file-line">      listeners.<span class="pl-s3">push</span>(listenerByName[name] <span class="pl-k">=</span> {on<span class="pl-k">:</span> listener});</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code js-file-line">    <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">event</span>;</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code js-file-line"><span class="pl-c">// TODO align</span></td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">format</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">specifier</span>) {</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code js-file-line">  <span class="pl-s">var</span> match <span class="pl-k">=</span> d3_format_re.<span class="pl-s3">exec</span>(specifier),</td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code js-file-line">      fill <span class="pl-k">=</span> match[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code js-file-line">      sign <span class="pl-k">=</span> match[<span class="pl-c1">3</span>] <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code js-file-line">      zfill <span class="pl-k">=</span> match[<span class="pl-c1">5</span>],</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code js-file-line">      width <span class="pl-k">=</span> <span class="pl-k">+</span>match[<span class="pl-c1">6</span>],</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code js-file-line">      comma <span class="pl-k">=</span> match[<span class="pl-c1">7</span>],</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code js-file-line">      precision <span class="pl-k">=</span> match[<span class="pl-c1">8</span>],</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code js-file-line">      type <span class="pl-k">=</span> match[<span class="pl-c1">9</span>],</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code js-file-line">      scale <span class="pl-k">=</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code js-file-line">      suffix <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code js-file-line">      integer <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code js-file-line">  <span class="pl-k">if</span> (precision) precision <span class="pl-k">=</span> <span class="pl-k">+</span>precision.<span class="pl-s3">substring</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code js-file-line">  <span class="pl-k">if</span> (zfill) {</td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code js-file-line">    fill <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>; <span class="pl-c">// TODO align = &quot;=&quot;;</span></td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code js-file-line">    <span class="pl-k">if</span> (comma) width <span class="pl-k">-=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((width <span class="pl-k">-</span> <span class="pl-c1">1</span>) / <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code js-file-line">  <span class="pl-k">switch</span> (type) {</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> comma <span class="pl-k">=</span> <span class="pl-c1">true</span>; type <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>; <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> scale <span class="pl-k">=</span> <span class="pl-c1">100</span>; suffix <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>; type <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>; <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> scale <span class="pl-k">=</span> <span class="pl-c1">100</span>; suffix <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>; type <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>; <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> integer <span class="pl-k">=</span> <span class="pl-c1">true</span>; precision <span class="pl-k">=</span> <span class="pl-c1">0</span>; <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> scale <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; type <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>; <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code js-file-line">  <span class="pl-c">// If no precision is specified for r, fallback to general notation.</span></td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code js-file-line">  <span class="pl-k">if</span> (type <span class="pl-k">==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>precision) type <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code js-file-line">  type <span class="pl-k">=</span> d3_format_types[type] <span class="pl-k">||</span> d3_format_typeDefault;</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code js-file-line">    <span class="pl-c">// Return the empty string for floats formatted as ints.</span></td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code js-file-line">    <span class="pl-k">if</span> (integer <span class="pl-k">&amp;&amp;</span> (value <span class="pl-k">%</span> <span class="pl-c1">1</span>)) <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code js-file-line">    <span class="pl-c">// Convert negative to positive, and record the sign prefix.</span></td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code js-file-line">    <span class="pl-s">var</span> negative <span class="pl-k">=</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">&amp;&amp;</span> (value <span class="pl-k">=</span> <span class="pl-k">-</span>value) <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\u</span>2212<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> sign;</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code js-file-line">    <span class="pl-c">// Apply the scale, computing it from the value&#39;s exponent for si format.</span></td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code js-file-line">    <span class="pl-k">if</span> (scale <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code js-file-line">      <span class="pl-s">var</span> prefix <span class="pl-k">=</span> d3.formatPrefix(value, precision);</td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code js-file-line">      value <span class="pl-k">*=</span> prefix.scale;</td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code js-file-line">      suffix <span class="pl-k">=</span> prefix.symbol;</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code js-file-line">      value <span class="pl-k">*=</span> scale;</td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code js-file-line">    <span class="pl-c">// Convert to the desired precision.</span></td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code js-file-line">    value <span class="pl-k">=</span> type(value, precision);</td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code js-file-line">    <span class="pl-c">// If the fill character is 0, the sign and group is applied after the fill.</span></td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code js-file-line">    <span class="pl-k">if</span> (zfill) {</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code js-file-line">      <span class="pl-s">var</span> length <span class="pl-k">=</span> value.<span class="pl-sc">length</span> <span class="pl-k">+</span> negative.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code js-file-line">      <span class="pl-k">if</span> (length <span class="pl-k">&lt;</span> width) value <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(width <span class="pl-k">-</span> length <span class="pl-k">+</span> <span class="pl-c1">1</span>).<span class="pl-s3">join</span>(fill) <span class="pl-k">+</span> value;</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code js-file-line">      <span class="pl-k">if</span> (comma) value <span class="pl-k">=</span> d3_format_group(value);</td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code js-file-line">      value <span class="pl-k">=</span> negative <span class="pl-k">+</span> value;</td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code js-file-line">    <span class="pl-c">// Otherwise (e.g., space-filling), the sign and group is applied before.</span></td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code js-file-line">    <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code js-file-line">      <span class="pl-k">if</span> (comma) value <span class="pl-k">=</span> d3_format_group(value);</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code js-file-line">      value <span class="pl-k">=</span> negative <span class="pl-k">+</span> value;</td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code js-file-line">      <span class="pl-s">var</span> length <span class="pl-k">=</span> value.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code js-file-line">      <span class="pl-k">if</span> (length <span class="pl-k">&lt;</span> width) value <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(width <span class="pl-k">-</span> length <span class="pl-k">+</span> <span class="pl-c1">1</span>).<span class="pl-s3">join</span>(fill) <span class="pl-k">+</span> value;</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">+</span> suffix;</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code js-file-line"><span class="pl-c">// [[fill]align][sign][#][0][width][,][.precision][type]</span></td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code js-file-line"><span class="pl-s">var</span> d3_format_re <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>(?:(<span class="pl-c1">[<span class="pl-k">^</span>{]</span>)<span class="pl-k">?</span>(<span class="pl-c1">[&lt;&gt;=^]</span>))<span class="pl-k">?</span>(<span class="pl-c1">[+<span class="pl-c1">\- </span>]</span>)<span class="pl-k">?</span>(#)<span class="pl-k">?</span>(0)<span class="pl-k">?</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(,)<span class="pl-k">?</span>(<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(<span class="pl-c1">[<span class="pl-c1">a-zA-Z</span>%]</span>)<span class="pl-k">?</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code js-file-line"><span class="pl-s">var</span> d3_format_types <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code js-file-line">  <span class="pl-en">g</span>: <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">p</span>) { <span class="pl-k">return</span> x.toPrecision(p); },</td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code js-file-line">  <span class="pl-en">e</span>: <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">p</span>) { <span class="pl-k">return</span> x.toExponential(p); },</td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code js-file-line">  <span class="pl-en">f</span>: <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">p</span>) { <span class="pl-k">return</span> x.toFixed(p); },</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code js-file-line">  <span class="pl-en">r</span>: <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">p</span>) { <span class="pl-k">return</span> d3.<span class="pl-s3">round</span>(x, p <span class="pl-k">=</span> d3_format_precision(x, p)).toFixed(<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">20</span>, p))); }</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_format_precision</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">p</span>) {</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code js-file-line">  <span class="pl-k">return</span> p <span class="pl-k">-</span> (x <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(x <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(x) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>) <span class="pl-k">-</span> p)) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>) <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_format_typeDefault</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code js-file-line">  <span class="pl-k">return</span> x <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code js-file-line"><span class="pl-c">// Apply comma grouping for thousands.</span></td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_format_group</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> value.<span class="pl-s3">lastIndexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code js-file-line">      f <span class="pl-k">=</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> value.<span class="pl-s3">substring</span>(i) <span class="pl-k">:</span> (i <span class="pl-k">=</span> value.<span class="pl-sc">length</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code js-file-line">      t <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code js-file-line">  <span class="pl-k">while</span> (i <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) t.<span class="pl-s3">push</span>(value.<span class="pl-s3">substring</span>(i <span class="pl-k">-=</span> <span class="pl-c1">3</span>, i <span class="pl-k">+</span> <span class="pl-c1">3</span>));</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code js-file-line">  <span class="pl-k">return</span> t.<span class="pl-s3">reverse</span>().<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> f;</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code js-file-line"><span class="pl-s">var</span> d3_formatPrefixes <span class="pl-k">=</span> [<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>Î¼<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>k<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>G<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>T<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>P<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>E<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>].map(d3_formatPrefix);</td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">formatPrefix</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>, <span class="pl-vpf">precision</span>) {</td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code js-file-line">  <span class="pl-k">if</span> (value) {</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) value <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code js-file-line">    <span class="pl-k">if</span> (precision) value <span class="pl-k">=</span> d3.<span class="pl-s3">round</span>(value, d3_format_precision(value, precision));</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code js-file-line">    i <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-c1">1e-12</span> <span class="pl-k">+</span> <span class="pl-s3">Math</span><span class="pl-s3">.log</span>(value) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>);</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code js-file-line">    i <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-k">-</span><span class="pl-c1">24</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">24</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((i <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> i <span class="pl-k">-</span> <span class="pl-c1">1</span>) / <span class="pl-c1">3</span>) <span class="pl-k">*</span> <span class="pl-c1">3</span>));</td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_formatPrefixes[<span class="pl-c1">8</span> <span class="pl-k">+</span> i / <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_formatPrefix</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code js-file-line">    scale<span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, (<span class="pl-c1">8</span> <span class="pl-k">-</span> i) <span class="pl-k">*</span> <span class="pl-c1">3</span>),</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code js-file-line">    symbol<span class="pl-k">:</span> d</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code js-file-line"><span class="pl-c"> * TERMS OF USE - EASING EQUATIONS</span></td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code js-file-line"><span class="pl-c"> * Open source under the BSD License.</span></td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code js-file-line"><span class="pl-c"> * Copyright 2001 Robert Penner</span></td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code js-file-line"><span class="pl-c"> * All rights reserved.</span></td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code js-file-line"><span class="pl-c"> * Redistribution and use in source and binary forms, with or without</span></td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code js-file-line"><span class="pl-c"> * modification, are permitted provided that the following conditions are met:</span></td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code js-file-line"><span class="pl-c"> * - Redistributions of source code must retain the above copyright notice, this</span></td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code js-file-line"><span class="pl-c"> *   list of conditions and the following disclaimer.</span></td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code js-file-line"><span class="pl-c"> * - Redistributions in binary form must reproduce the above copyright notice,</span></td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code js-file-line"><span class="pl-c"> *   this list of conditions and the following disclaimer in the documentation</span></td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code js-file-line"><span class="pl-c"> *   and/or other materials provided with the distribution.</span></td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code js-file-line"><span class="pl-c"> * - Neither the name of the author nor the names of contributors may be used to</span></td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code js-file-line"><span class="pl-c"> *   endorse or promote products derived from this software without specific</span></td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code js-file-line"><span class="pl-c"> *   prior written permission.</span></td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code js-file-line"><span class="pl-c"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;</span></td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code js-file-line"><span class="pl-c"> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span></td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code js-file-line"><span class="pl-c"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span></td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code js-file-line"><span class="pl-c"> * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</span></td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code js-file-line"><span class="pl-c"> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</span></td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code js-file-line"><span class="pl-c"> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</span></td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code js-file-line"><span class="pl-c"> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</span></td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code js-file-line"><span class="pl-c"> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</span></td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code js-file-line"><span class="pl-c"> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</span></td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code js-file-line"><span class="pl-c"> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code js-file-line"><span class="pl-c"> * POSSIBILITY OF SUCH DAMAGE.</span></td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code js-file-line"><span class="pl-s">var</span> d3_ease_quad <span class="pl-k">=</span> d3_ease_poly(<span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code js-file-line">    d3_ease_cubic <span class="pl-k">=</span> d3_ease_poly(<span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code js-file-line"><span class="pl-s">var</span> d3_ease <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code js-file-line">  <span class="pl-en">linear</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_linear; },</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code js-file-line">  poly<span class="pl-k">:</span> d3_ease_poly,</td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code js-file-line">  <span class="pl-en">quad</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_quad; },</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code js-file-line">  <span class="pl-en">cubic</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_cubic; },</td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code js-file-line">  <span class="pl-en">sin</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_sin; },</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code js-file-line">  <span class="pl-en">exp</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_exp; },</td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code js-file-line">  <span class="pl-en">circle</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_circle; },</td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code js-file-line">  elastic<span class="pl-k">:</span> d3_ease_elastic,</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code js-file-line">  back<span class="pl-k">:</span> d3_ease_back,</td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code js-file-line">  <span class="pl-en">bounce</span>: <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_ease_bounce; }</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code js-file-line"><span class="pl-s">var</span> d3_ease_mode <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">in</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">f</span>) { <span class="pl-k">return</span> f; },</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>out<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_ease_reverse,</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>in-out<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_ease_reflect,</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">out-in</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">f</span>) { <span class="pl-k">return</span> d3_ease_reflect(d3_ease_reverse(f)); }</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">ease</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> name.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code js-file-line">      t <span class="pl-k">=</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> name.<span class="pl-s3">substring</span>(<span class="pl-c1">0</span>, i) <span class="pl-k">:</span> name,</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code js-file-line">      m <span class="pl-k">=</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> name.<span class="pl-s3">substring</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_ease_clamp(d3_ease_mode[m](d3_ease[t].<span class="pl-s3">apply</span>(<span class="pl-c1">null</span>, <span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(arguments, <span class="pl-c1">1</span>))));</td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_clamp</span>(<span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code js-file-line">    <span class="pl-k">return</span> t <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> t <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> f(t);</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_reverse</span>(<span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> f(<span class="pl-c1">1</span> <span class="pl-k">-</span> t);</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_reflect</span>(<span class="pl-vpf">f</span>) {</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code js-file-line">    <span class="pl-k">return</span> .<span class="pl-c1">5</span> <span class="pl-k">*</span> (t <span class="pl-k">&lt;</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> f(<span class="pl-c1">2</span> <span class="pl-k">*</span> t) <span class="pl-k">:</span> (<span class="pl-c1">2</span> <span class="pl-k">-</span> f(<span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> t)));</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_linear</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code js-file-line">  <span class="pl-k">return</span> t;</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_poly</span>(<span class="pl-vpf">e</span>) {</td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(t, e);</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_sin</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(t <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span> / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_exp</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (t <span class="pl-k">-</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_circle</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> t <span class="pl-k">*</span> t);</td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_elastic</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">p</span>) {</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code js-file-line">  <span class="pl-s">var</span> s;</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) p <span class="pl-k">=</span> <span class="pl-c1">0.45</span>;</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) { a <span class="pl-k">=</span> <span class="pl-c1">1</span>; s <span class="pl-k">=</span> p / <span class="pl-c1">4</span>; }</td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code js-file-line">  <span class="pl-k">else</span> s <span class="pl-k">=</span> p / (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>) <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">asin</span>(<span class="pl-c1">1</span> / a);</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> a <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> <span class="pl-k">-</span>t) <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>((t <span class="pl-k">-</span> s) <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span> / p);</td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_back</span>(<span class="pl-vpf">s</span>) {</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>s) s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code js-file-line">    <span class="pl-k">return</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> ((s <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">-</span> s);</td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_ease_bounce</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code js-file-line">  <span class="pl-k">return</span> t <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> / <span class="pl-c1">2.75</span> <span class="pl-k">?</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code js-file-line">      <span class="pl-k">:</span> t <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> / <span class="pl-c1">2.75</span> <span class="pl-k">?</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">1.5</span> / <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> .<span class="pl-c1">75</span></td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code js-file-line">      <span class="pl-k">:</span> t <span class="pl-k">&lt;</span> <span class="pl-c1">2.5</span> / <span class="pl-c1">2.75</span> <span class="pl-k">?</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">2.25</span> / <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> .<span class="pl-c1">9375</span></td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">2.625</span> / <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> .<span class="pl-c1">984375</span>;</td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code js-file-line">d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_eventCancel</span>() {</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code js-file-line">  d3.<span class="pl-s3">event</span>.stopPropagation();</td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code js-file-line">  d3.<span class="pl-s3">event</span>.preventDefault();</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> d3.interpolators.<span class="pl-sc">length</span>, f;</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">--</span>i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(f <span class="pl-k">=</span> d3.interpolators[i](a, b)));</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code js-file-line">  <span class="pl-k">return</span> f;</td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateNumber</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code js-file-line">  b <span class="pl-k">-=</span> a;</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) { <span class="pl-k">return</span> a <span class="pl-k">+</span> b <span class="pl-k">*</span> t; };</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateRound</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code js-file-line">  b <span class="pl-k">-=</span> a;</td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) { <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(a <span class="pl-k">+</span> b <span class="pl-k">*</span> t); };</td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateString</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code js-file-line">  <span class="pl-s">var</span> m, <span class="pl-c">// current match</span></td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code js-file-line">      i, <span class="pl-c">// current index</span></td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code js-file-line">      j, <span class="pl-c">// current index (for coallescing)</span></td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code js-file-line">      s0 <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// start index of current string prefix</span></td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code js-file-line">      s1 <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// end index of current string prefix</span></td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code js-file-line">      s <span class="pl-k">=</span> [], <span class="pl-c">// string constants and placeholders</span></td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code js-file-line">      q <span class="pl-k">=</span> [], <span class="pl-c">// number interpolators</span></td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code js-file-line">      n, <span class="pl-c">// q.length</span></td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code js-file-line">      o;</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code js-file-line">  <span class="pl-c">// Reset our regular expression!</span></td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code js-file-line">  d3_interpolate_number.<span class="pl-sc">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code js-file-line">  <span class="pl-c">// Find all numbers in b.</span></td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code js-file-line">  <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; m <span class="pl-k">=</span> d3_interpolate_number.<span class="pl-s3">exec</span>(b); <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code js-file-line">    <span class="pl-k">if</span> (m.<span class="pl-sc">index</span>) s.<span class="pl-s3">push</span>(b.<span class="pl-s3">substring</span>(s0, s1 <span class="pl-k">=</span> m.<span class="pl-sc">index</span>));</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code js-file-line">    q.<span class="pl-s3">push</span>({i<span class="pl-k">:</span> s.<span class="pl-sc">length</span>, x<span class="pl-k">:</span> m[<span class="pl-c1">0</span>]});</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code js-file-line">    s0 <span class="pl-k">=</span> d3_interpolate_number.<span class="pl-sc">lastIndex</span>;</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code js-file-line">  <span class="pl-k">if</span> (s0 <span class="pl-k">&lt;</span> b.<span class="pl-sc">length</span>) s.<span class="pl-s3">push</span>(b.<span class="pl-s3">substring</span>(s0));</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code js-file-line">  <span class="pl-c">// Find all numbers in a.</span></td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code js-file-line">  <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> q.<span class="pl-sc">length</span>; (m <span class="pl-k">=</span> d3_interpolate_number.<span class="pl-s3">exec</span>(a)) <span class="pl-k">&amp;&amp;</span> i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code js-file-line">    o <span class="pl-k">=</span> q[i];</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code js-file-line">    <span class="pl-k">if</span> (o.<span class="pl-sc">x</span> <span class="pl-k">==</span> m[<span class="pl-c1">0</span>]) { <span class="pl-c">// The numbers match, so coallesce.</span></td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code js-file-line">      <span class="pl-k">if</span> (o.i) {</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code js-file-line">        <span class="pl-k">if</span> (s[o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">null</span>) { <span class="pl-c">// This match is followed by another number.</span></td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code js-file-line">          s[o.i <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> o.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code js-file-line">          s.<span class="pl-s3">splice</span>(o.i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code js-file-line">          <span class="pl-k">for</span> (j <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span>; j <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>j) q[j].i<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code js-file-line">        } <span class="pl-k">else</span> { <span class="pl-c">// This match is followed by a string, so coallesce twice.</span></td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code js-file-line">          s[o.i <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> o.<span class="pl-sc">x</span> <span class="pl-k">+</span> s[o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code js-file-line">          s.<span class="pl-s3">splice</span>(o.i, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code js-file-line">          <span class="pl-k">for</span> (j <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span>; j <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>j) q[j].i <span class="pl-k">-=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code js-file-line">          <span class="pl-k">if</span> (s[o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">null</span>) { <span class="pl-c">// This match is followed by another number.</span></td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code js-file-line">          s[o.i] <span class="pl-k">=</span> o.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code js-file-line">        } <span class="pl-k">else</span> { <span class="pl-c">// This match is followed by a string, so coallesce twice.</span></td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code js-file-line">          s[o.i] <span class="pl-k">=</span> o.<span class="pl-sc">x</span> <span class="pl-k">+</span> s[o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code js-file-line">          s.<span class="pl-s3">splice</span>(o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code js-file-line">          <span class="pl-k">for</span> (j <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span>; j <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>j) q[j].i<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code js-file-line">      q.<span class="pl-s3">splice</span>(i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code js-file-line">      n<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code js-file-line">      i<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code js-file-line">      o.<span class="pl-sc">x</span> <span class="pl-k">=</span> d3.interpolateNumber(<span class="pl-s3">parseFloat</span>(m[<span class="pl-c1">0</span>]), <span class="pl-s3">parseFloat</span>(o.<span class="pl-sc">x</span>));</td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code js-file-line">  <span class="pl-c">// Remove any numbers in b not found in a.</span></td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code js-file-line">  <span class="pl-k">while</span> (i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code js-file-line">    o <span class="pl-k">=</span> q.<span class="pl-s3">pop</span>();</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code js-file-line">    <span class="pl-k">if</span> (s[o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">null</span>) { <span class="pl-c">// This match is followed by another number.</span></td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code js-file-line">      s[o.i] <span class="pl-k">=</span> o.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code js-file-line">    } <span class="pl-k">else</span> { <span class="pl-c">// This match is followed by a string, so coallesce twice.</span></td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code js-file-line">      s[o.i] <span class="pl-k">=</span> o.<span class="pl-sc">x</span> <span class="pl-k">+</span> s[o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code js-file-line">      s.<span class="pl-s3">splice</span>(o.i <span class="pl-k">+</span> <span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code js-file-line">    n<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code js-file-line">  <span class="pl-c">// Special optimization for only a single match.</span></td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code js-file-line">  <span class="pl-k">if</span> (s.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code js-file-line">    <span class="pl-k">return</span> s[<span class="pl-c1">0</span>] <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> q[<span class="pl-c1">0</span>].<span class="pl-en">x</span> : <span class="pl-st">function</span>() { <span class="pl-k">return</span> b; };</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code js-file-line">  <span class="pl-c">// Otherwise, interpolate each of the numbers and rejoin the string.</span></td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) s[(o <span class="pl-k">=</span> q[i]).i] <span class="pl-k">=</span> o.<span class="pl-sc">x</span>(t);</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code js-file-line">    <span class="pl-k">return</span> s.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateTransform</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code js-file-line">  <span class="pl-s">var</span> s <span class="pl-k">=</span> [], <span class="pl-c">// string constants and placeholders</span></td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code js-file-line">      q <span class="pl-k">=</span> [], <span class="pl-c">// number interpolators</span></td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code js-file-line">      n,</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code js-file-line">      A <span class="pl-k">=</span> d3.transform(a),</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code js-file-line">      B <span class="pl-k">=</span> d3.transform(b),</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code js-file-line">      ta <span class="pl-k">=</span> A.translate,</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code js-file-line">      tb <span class="pl-k">=</span> B.translate,</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code js-file-line">      ra <span class="pl-k">=</span> A.rotate,</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code js-file-line">      rb <span class="pl-k">=</span> B.rotate,</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code js-file-line">      wa <span class="pl-k">=</span> A.skew,</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code js-file-line">      wb <span class="pl-k">=</span> B.skew,</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code js-file-line">      ka <span class="pl-k">=</span> A.scale,</td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code js-file-line">      kb <span class="pl-k">=</span> B.scale;</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code js-file-line">  <span class="pl-k">if</span> (ta[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> tb[<span class="pl-c1">0</span>] <span class="pl-k">||</span> ta[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> tb[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code js-file-line">    q.<span class="pl-s3">push</span>({i<span class="pl-k">:</span> <span class="pl-c1">1</span>, x<span class="pl-k">:</span> d3.interpolateNumber(ta[<span class="pl-c1">0</span>], tb[<span class="pl-c1">0</span>])}, {i<span class="pl-k">:</span> <span class="pl-c1">3</span>, x<span class="pl-k">:</span> d3.interpolateNumber(ta[<span class="pl-c1">1</span>], tb[<span class="pl-c1">1</span>])});</td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (tb[<span class="pl-c1">0</span>] <span class="pl-k">||</span> tb[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tb <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code js-file-line">  <span class="pl-k">if</span> (ra <span class="pl-k">!=</span> rb) {</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code js-file-line">    q.<span class="pl-s3">push</span>({i<span class="pl-k">:</span> s.<span class="pl-s3">push</span>(s.<span class="pl-s3">pop</span>() <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>) <span class="pl-k">-</span> <span class="pl-c1">2</span>, x<span class="pl-k">:</span> d3.interpolateNumber(ra, rb)});</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (rb) {</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(s.<span class="pl-s3">pop</span>() <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rb <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code js-file-line">  <span class="pl-k">if</span> (wa <span class="pl-k">!=</span> wb) {</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code js-file-line">    q.<span class="pl-s3">push</span>({i<span class="pl-k">:</span> s.<span class="pl-s3">push</span>(s.<span class="pl-s3">pop</span>() <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>skewX(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>) <span class="pl-k">-</span> <span class="pl-c1">2</span>, x<span class="pl-k">:</span> d3.interpolateNumber(wa, wb)});</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (wb) {</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(s.<span class="pl-s3">pop</span>() <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>skewX(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> wb <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code js-file-line">  <span class="pl-k">if</span> (ka[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> kb[<span class="pl-c1">0</span>] <span class="pl-k">||</span> ka[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> kb[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code js-file-line">    n <span class="pl-k">=</span> s.<span class="pl-s3">push</span>(s.<span class="pl-s3">pop</span>() <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code js-file-line">    q.<span class="pl-s3">push</span>({i<span class="pl-k">:</span> n <span class="pl-k">-</span> <span class="pl-c1">4</span>, x<span class="pl-k">:</span> d3.interpolateNumber(ka[<span class="pl-c1">0</span>], kb[<span class="pl-c1">0</span>])}, {i<span class="pl-k">:</span> n <span class="pl-k">-</span> <span class="pl-c1">2</span>, x<span class="pl-k">:</span> d3.interpolateNumber(ka[<span class="pl-c1">1</span>], kb[<span class="pl-c1">1</span>])});</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (kb[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> <span class="pl-c1">1</span> <span class="pl-k">||</span> kb[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code js-file-line">    s.<span class="pl-s3">push</span>(s.<span class="pl-s3">pop</span>() <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> kb <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code js-file-line">  n <span class="pl-k">=</span> q.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code js-file-line">    <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, o;</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) s[(o <span class="pl-k">=</span> q[i]).i] <span class="pl-k">=</span> o.<span class="pl-sc">x</span>(t);</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code js-file-line">    <span class="pl-k">return</span> s.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateRgb</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code js-file-line">  a <span class="pl-k">=</span> d3.rgb(a);</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code js-file-line">  b <span class="pl-k">=</span> d3.rgb(b);</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code js-file-line">  <span class="pl-s">var</span> ar <span class="pl-k">=</span> a.r,</td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code js-file-line">      ag <span class="pl-k">=</span> a.g,</td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code js-file-line">      ab <span class="pl-k">=</span> a.b,</td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code js-file-line">      br <span class="pl-k">=</span> b.r <span class="pl-k">-</span> ar,</td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code js-file-line">      bg <span class="pl-k">=</span> b.g <span class="pl-k">-</span> ag,</td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code js-file-line">      bb <span class="pl-k">=</span> b.b <span class="pl-k">-</span> ab;</td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code js-file-line">        <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(ar <span class="pl-k">+</span> br <span class="pl-k">*</span> t))</td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code js-file-line">        <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(ag <span class="pl-k">+</span> bg <span class="pl-k">*</span> t))</td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code js-file-line">        <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(ab <span class="pl-k">+</span> bb <span class="pl-k">*</span> t));</td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code js-file-line"><span class="pl-c">// interpolates HSL space, but outputs RGB string (for compatibility)</span></td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateHsl</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code js-file-line">  a <span class="pl-k">=</span> d3.hsl(a);</td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code js-file-line">  b <span class="pl-k">=</span> d3.hsl(b);</td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code js-file-line">  <span class="pl-s">var</span> h0 <span class="pl-k">=</span> a.h,</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code js-file-line">      s0 <span class="pl-k">=</span> a.s,</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code js-file-line">      l0 <span class="pl-k">=</span> a.l,</td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code js-file-line">      h1 <span class="pl-k">=</span> b.h <span class="pl-k">-</span> h0,</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code js-file-line">      s1 <span class="pl-k">=</span> b.s <span class="pl-k">-</span> s0,</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code js-file-line">      l1 <span class="pl-k">=</span> b.l <span class="pl-k">-</span> l0;</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_hsl_rgb(h0 <span class="pl-k">+</span> h1 <span class="pl-k">*</span> t, s0 <span class="pl-k">+</span> s1 <span class="pl-k">*</span> t, l0 <span class="pl-k">+</span> l1 <span class="pl-k">*</span> t).<span class="pl-s3">toString</span>();</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateArray</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code js-file-line">  <span class="pl-s">var</span> x <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code js-file-line">      c <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code js-file-line">      na <span class="pl-k">=</span> a.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code js-file-line">      nb <span class="pl-k">=</span> b.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code js-file-line">      n0 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(a.<span class="pl-sc">length</span>, b.<span class="pl-sc">length</span>),</td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code js-file-line">      i;</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code js-file-line">  <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n0; <span class="pl-k">++</span>i) x.<span class="pl-s3">push</span>(d3.interpolate(a[i], b[i]));</td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code js-file-line">  <span class="pl-k">for</span> (; i <span class="pl-k">&lt;</span> na; <span class="pl-k">++</span>i) c[i] <span class="pl-k">=</span> a[i];</td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code js-file-line">  <span class="pl-k">for</span> (; i <span class="pl-k">&lt;</span> nb; <span class="pl-k">++</span>i) c[i] <span class="pl-k">=</span> b[i];</td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n0; <span class="pl-k">++</span>i) c[i] <span class="pl-k">=</span> x[i](t);</td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code js-file-line">    <span class="pl-k">return</span> c;</td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">interpolateObject</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code js-file-line">      c <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code js-file-line">      k;</td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code js-file-line">  <span class="pl-k">for</span> (k <span class="pl-k">in</span> a) {</td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code js-file-line">    <span class="pl-k">if</span> (k <span class="pl-k">in</span> b) {</td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code js-file-line">      i[k] <span class="pl-k">=</span> d3_interpolateByName(k)(a[k], b[k]);</td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code js-file-line">      c[k] <span class="pl-k">=</span> a[k];</td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code js-file-line">  <span class="pl-k">for</span> (k <span class="pl-k">in</span> b) {</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(k <span class="pl-k">in</span> a)) {</td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code js-file-line">      c[k] <span class="pl-k">=</span> b[k];</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) {</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code js-file-line">    <span class="pl-k">for</span> (k <span class="pl-k">in</span> i) c[k] <span class="pl-k">=</span> i[k](t);</td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code js-file-line">    <span class="pl-k">return</span> c;</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code js-file-line"><span class="pl-s">var</span> d3_interpolate_number <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[-+]</span><span class="pl-k">?</span>(?:<span class="pl-c1">\d</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)(?:<span class="pl-c1">[eE][-+]</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_interpolateByName</span>(<span class="pl-vpf">n</span>) {</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code js-file-line">  <span class="pl-k">return</span> n <span class="pl-k">==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code js-file-line">      <span class="pl-k">?</span> d3.interpolateTransform</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code js-file-line">      <span class="pl-k">:</span> d3.interpolate;</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code js-file-line">d3.interpolators <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code js-file-line">  d3.interpolateObject,</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code js-file-line">  <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) { <span class="pl-k">return</span> (b <span class="pl-k">instanceof</span> <span class="pl-s3">Array</span>) <span class="pl-k">&amp;&amp;</span> d3.interpolateArray(a, b); },</td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code js-file-line">  <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) { <span class="pl-k">return</span> (<span class="pl-k">typeof</span> a <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> <span class="pl-k">typeof</span> b <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&amp;&amp;</span> d3.interpolateString(a <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, b <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>); },</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code js-file-line">  <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) { <span class="pl-k">return</span> (<span class="pl-k">typeof</span> b <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> b <span class="pl-k">in</span> d3_rgb_names <span class="pl-k">||</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(#<span class="pl-k">|</span>rgb<span class="pl-cce">\(</span><span class="pl-k">|</span>hsl<span class="pl-cce">\(</span>)<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(b) <span class="pl-k">:</span> b <span class="pl-k">instanceof</span> d3_Rgb <span class="pl-k">||</span> b <span class="pl-k">instanceof</span> d3_Hsl) <span class="pl-k">&amp;&amp;</span> d3.interpolateRgb(a, b); },</td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code js-file-line">  <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) { <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-s3">isNaN</span>(a <span class="pl-k">=</span> <span class="pl-k">+</span>a) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-s3">isNaN</span>(b <span class="pl-k">=</span> <span class="pl-k">+</span>b) <span class="pl-k">&amp;&amp;</span> d3.interpolateNumber(a, b); }</td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code js-file-line">];</td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_uninterpolateNumber</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code js-file-line">  b <span class="pl-k">=</span> b <span class="pl-k">-</span> (a <span class="pl-k">=</span> <span class="pl-k">+</span>a) <span class="pl-k">?</span> <span class="pl-c1">1</span> / (b <span class="pl-k">-</span> a) <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) { <span class="pl-k">return</span> (x <span class="pl-k">-</span> a) <span class="pl-k">*</span> b; };</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_uninterpolateClamp</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code js-file-line">  b <span class="pl-k">=</span> b <span class="pl-k">-</span> (a <span class="pl-k">=</span> <span class="pl-k">+</span>a) <span class="pl-k">?</span> <span class="pl-c1">1</span> / (b <span class="pl-k">-</span> a) <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) { <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">1</span>, (x <span class="pl-k">-</span> a) <span class="pl-k">*</span> b)); };</td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">rgb</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">r</span>, <span class="pl-vpf">g</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code js-file-line">  <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code js-file-line">      <span class="pl-k">?</span> (r <span class="pl-k">instanceof</span> d3_Rgb <span class="pl-k">?</span> d3_rgb(r.r, r.g, r.b)</td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code js-file-line">      <span class="pl-k">:</span> d3_rgb_parse(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r, d3_rgb, d3_hsl_rgb))</td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code js-file-line">      <span class="pl-k">:</span> d3_rgb(<span class="pl-k">~~</span>r, <span class="pl-k">~~</span>g, <span class="pl-k">~~</span>b);</td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_rgb</span>(<span class="pl-vpf">r</span>, <span class="pl-vpf">g</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_Rgb</span>(r, g, b);</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_Rgb</span>(<span class="pl-vpf">r</span>, <span class="pl-vpf">g</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code js-file-line">  <span class="pl-v">this</span>.r <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code js-file-line">  <span class="pl-v">this</span>.g <span class="pl-k">=</span> g;</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code js-file-line">  <span class="pl-v">this</span>.b <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code js-file-line"><span class="pl-s3">d3_Rgb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">brighter</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code js-file-line">  k <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">0.7</span>, arguments.<span class="pl-sc">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code js-file-line">  <span class="pl-s">var</span> r <span class="pl-k">=</span> <span class="pl-v">this</span>.r,</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code js-file-line">      g <span class="pl-k">=</span> <span class="pl-v">this</span>.g,</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code js-file-line">      b <span class="pl-k">=</span> <span class="pl-v">this</span>.b,</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-c1">30</span>;</td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>r <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>g <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>b) <span class="pl-k">return</span> d3_rgb(i, i, i);</td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code js-file-line">  <span class="pl-k">if</span> (r <span class="pl-k">&amp;&amp;</span> r <span class="pl-k">&lt;</span> i) r <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code js-file-line">  <span class="pl-k">if</span> (g <span class="pl-k">&amp;&amp;</span> g <span class="pl-k">&lt;</span> i) g <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code js-file-line">  <span class="pl-k">if</span> (b <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&lt;</span> i) b <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_rgb(</td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code js-file-line">      <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">255</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(r / k)),</td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code js-file-line">      <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">255</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(g / k)),</td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code js-file-line">      <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">255</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(b / k)));</td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code js-file-line"><span class="pl-s3">d3_Rgb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">darker</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code js-file-line">  k <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">0.7</span>, arguments.<span class="pl-sc">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_rgb(</td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code js-file-line">      <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(k <span class="pl-k">*</span> <span class="pl-v">this</span>.r),</td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code js-file-line">      <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(k <span class="pl-k">*</span> <span class="pl-v">this</span>.g),</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code js-file-line">      <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(k <span class="pl-k">*</span> <span class="pl-v">this</span>.b));</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code js-file-line"><span class="pl-s3">d3_Rgb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">hsl</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_rgb_hsl(<span class="pl-v">this</span>.r, <span class="pl-v">this</span>.g, <span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code js-file-line"><span class="pl-s3">d3_Rgb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-v">this</span>.r) <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-v">this</span>.g) <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_rgb_hex</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code js-file-line">  <span class="pl-k">return</span> v <span class="pl-k">&lt;</span> <span class="pl-c1">0x10</span></td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>, v).<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">255</span>, v).<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>);</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_rgb_parse</span>(<span class="pl-vpf">format</span>, <span class="pl-vpf">rgb</span>, <span class="pl-vpf">hsl</span>) {</td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code js-file-line">  <span class="pl-s">var</span> r <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// red channel; int in [0, 255]</span></td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code js-file-line">      g <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// green channel; int in [0, 255]</span></td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code js-file-line">      b <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// blue channel; int in [0, 255]</span></td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code js-file-line">      m1, <span class="pl-c">// CSS color specification match</span></td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code js-file-line">      m2, <span class="pl-c">// CSS color specification type (e.g., rgb)</span></td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code js-file-line">      name;</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code js-file-line">  <span class="pl-c">/* Handle hsl, rgb. */</span></td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code js-file-line">  m1 <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\(</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span>i</span>.<span class="pl-s3">exec</span>(format);</td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code js-file-line">  <span class="pl-k">if</span> (m1) {</td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code js-file-line">    m2 <span class="pl-k">=</span> m1[<span class="pl-c1">2</span>].<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code js-file-line">    <span class="pl-k">switch</span> (m1[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>hsl<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code js-file-line">        <span class="pl-k">return</span> hsl(</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code js-file-line">          <span class="pl-s3">parseFloat</span>(m2[<span class="pl-c1">0</span>]), <span class="pl-c">// degrees</span></td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code js-file-line">          <span class="pl-s3">parseFloat</span>(m2[<span class="pl-c1">1</span>]) / <span class="pl-c1">100</span>, <span class="pl-c">// percentage</span></td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code js-file-line">          <span class="pl-s3">parseFloat</span>(m2[<span class="pl-c1">2</span>]) / <span class="pl-c1">100</span> <span class="pl-c">// percentage</span></td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code js-file-line">        <span class="pl-k">return</span> rgb(</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code js-file-line">          d3_rgb_parseNumber(m2[<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code js-file-line">          d3_rgb_parseNumber(m2[<span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code js-file-line">          d3_rgb_parseNumber(m2[<span class="pl-c1">2</span>])</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code js-file-line">  <span class="pl-c">/* Named colors. */</span></td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code js-file-line">  <span class="pl-k">if</span> (name <span class="pl-k">=</span> d3_rgb_names[format]) <span class="pl-k">return</span> rgb(name.r, name.g, name.b);</td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code js-file-line">  <span class="pl-c">/* Hexadecimal colors: #rgb and #rrggbb. */</span></td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code js-file-line">  <span class="pl-k">if</span> (format <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> format.<span class="pl-s3">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code js-file-line">    <span class="pl-k">if</span> (format.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code js-file-line">      r <span class="pl-k">=</span> format.<span class="pl-s3">charAt</span>(<span class="pl-c1">1</span>); r <span class="pl-k">+=</span> r;</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code js-file-line">      g <span class="pl-k">=</span> format.<span class="pl-s3">charAt</span>(<span class="pl-c1">2</span>); g <span class="pl-k">+=</span> g;</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code js-file-line">      b <span class="pl-k">=</span> format.<span class="pl-s3">charAt</span>(<span class="pl-c1">3</span>); b <span class="pl-k">+=</span> b;</td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (format.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">7</span>) {</td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code js-file-line">      r <span class="pl-k">=</span> format.<span class="pl-s3">substring</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code js-file-line">      g <span class="pl-k">=</span> format.<span class="pl-s3">substring</span>(<span class="pl-c1">3</span>, <span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code js-file-line">      b <span class="pl-k">=</span> format.<span class="pl-s3">substring</span>(<span class="pl-c1">5</span>, <span class="pl-c1">7</span>);</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code js-file-line">    r <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(r, <span class="pl-c1">16</span>);</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code js-file-line">    g <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(g, <span class="pl-c1">16</span>);</td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code js-file-line">    b <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(b, <span class="pl-c1">16</span>);</td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code js-file-line">  <span class="pl-k">return</span> rgb(r, g, b);</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_rgb_hsl</span>(<span class="pl-vpf">r</span>, <span class="pl-vpf">g</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code js-file-line">  <span class="pl-s">var</span> min <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(r <span class="pl-k">/=</span> <span class="pl-c1">255</span>, g <span class="pl-k">/=</span> <span class="pl-c1">255</span>, b <span class="pl-k">/=</span> <span class="pl-c1">255</span>),</td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code js-file-line">      max <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(r, g, b),</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code js-file-line">      d <span class="pl-k">=</span> max <span class="pl-k">-</span> min,</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code js-file-line">      h,</td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code js-file-line">      s,</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code js-file-line">      l <span class="pl-k">=</span> (max <span class="pl-k">+</span> min) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code js-file-line">  <span class="pl-k">if</span> (d) {</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code js-file-line">    s <span class="pl-k">=</span> l <span class="pl-k">&lt;</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> d / (max <span class="pl-k">+</span> min) <span class="pl-k">:</span> d / (<span class="pl-c1">2</span> <span class="pl-k">-</span> max <span class="pl-k">-</span> min);</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code js-file-line">    <span class="pl-k">if</span> (r <span class="pl-k">==</span> max) h <span class="pl-k">=</span> (g <span class="pl-k">-</span> b) / d <span class="pl-k">+</span> (g <span class="pl-k">&lt;</span> b <span class="pl-k">?</span> <span class="pl-c1">6</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (g <span class="pl-k">==</span> max) h <span class="pl-k">=</span> (b <span class="pl-k">-</span> r) / d <span class="pl-k">+</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code js-file-line">    <span class="pl-k">else</span> h <span class="pl-k">=</span> (r <span class="pl-k">-</span> g) / d <span class="pl-k">+</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code js-file-line">    h <span class="pl-k">*=</span> <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code js-file-line">    s <span class="pl-k">=</span> h <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_hsl(h, s, l);</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_rgb_parseNumber</span>(<span class="pl-vpf">c</span>) { <span class="pl-c">// either integer or percentage</span></td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code js-file-line">  <span class="pl-s">var</span> f <span class="pl-k">=</span> <span class="pl-s3">parseFloat</span>(c);</td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code js-file-line">  <span class="pl-k">return</span> c.<span class="pl-s3">charAt</span>(c.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(f <span class="pl-k">*</span> <span class="pl-c1">2.55</span>) <span class="pl-k">:</span> f;</td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code js-file-line"><span class="pl-s">var</span> d3_rgb_names <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code js-file-line">  aliceblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f0f8ff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code js-file-line">  antiquewhite<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#faebd7<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code js-file-line">  aqua<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00ffff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code js-file-line">  aquamarine<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#7fffd4<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code js-file-line">  azure<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f0ffff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code js-file-line">  beige<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f5f5dc<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code js-file-line">  bisque<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffe4c4<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code js-file-line">  black<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code js-file-line">  blanchedalmond<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffebcd<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code js-file-line">  blue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#0000ff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code js-file-line">  blueviolet<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#8a2be2<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code js-file-line">  brown<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#a52a2a<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code js-file-line">  burlywood<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#deb887<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code js-file-line">  cadetblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#5f9ea0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code js-file-line">  chartreuse<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#7fff00<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code js-file-line">  chocolate<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#d2691e<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code js-file-line">  coral<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff7f50<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code js-file-line">  cornflowerblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#6495ed<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code js-file-line">  cornsilk<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fff8dc<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code js-file-line">  crimson<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#dc143c<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code js-file-line">  cyan<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00ffff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code js-file-line">  darkblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00008b<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code js-file-line">  darkcyan<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#008b8b<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code js-file-line">  darkgoldenrod<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#b8860b<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code js-file-line">  darkgray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#a9a9a9<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code js-file-line">  darkgreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#006400<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code js-file-line">  darkgrey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#a9a9a9<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code js-file-line">  darkkhaki<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#bdb76b<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code js-file-line">  darkmagenta<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#8b008b<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code js-file-line">  darkolivegreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#556b2f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code js-file-line">  darkorange<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff8c00<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code js-file-line">  darkorchid<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#9932cc<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code js-file-line">  darkred<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#8b0000<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code js-file-line">  darksalmon<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#e9967a<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code js-file-line">  darkseagreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#8fbc8f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code js-file-line">  darkslateblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#483d8b<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code js-file-line">  darkslategray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#2f4f4f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code js-file-line">  darkslategrey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#2f4f4f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code js-file-line">  darkturquoise<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00ced1<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code js-file-line">  darkviolet<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#9400d3<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code js-file-line">  deeppink<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff1493<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code js-file-line">  deepskyblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00bfff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code js-file-line">  dimgray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#696969<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code js-file-line">  dimgrey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#696969<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code js-file-line">  dodgerblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#1e90ff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code js-file-line">  firebrick<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#b22222<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code js-file-line">  floralwhite<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fffaf0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code js-file-line">  forestgreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#228b22<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code js-file-line">  fuchsia<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff00ff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code js-file-line">  gainsboro<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#dcdcdc<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code js-file-line">  ghostwhite<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f8f8ff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code js-file-line">  gold<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffd700<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code js-file-line">  goldenrod<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#daa520<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code js-file-line">  gray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#808080<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code js-file-line">  green<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#008000<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code js-file-line">  greenyellow<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#adff2f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code js-file-line">  grey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#808080<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code js-file-line">  honeydew<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f0fff0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code js-file-line">  hotpink<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff69b4<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code js-file-line">  indianred<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#cd5c5c<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code js-file-line">  indigo<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#4b0082<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code js-file-line">  ivory<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fffff0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code js-file-line">  khaki<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f0e68c<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code js-file-line">  lavender<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#e6e6fa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code js-file-line">  lavenderblush<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fff0f5<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code js-file-line">  lawngreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#7cfc00<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code js-file-line">  lemonchiffon<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fffacd<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code js-file-line">  lightblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#add8e6<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code js-file-line">  lightcoral<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f08080<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code js-file-line">  lightcyan<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#e0ffff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code js-file-line">  lightgoldenrodyellow<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fafad2<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code js-file-line">  lightgray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#d3d3d3<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code js-file-line">  lightgreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#90ee90<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code js-file-line">  lightgrey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#d3d3d3<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code js-file-line">  lightpink<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffb6c1<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code js-file-line">  lightsalmon<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffa07a<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code js-file-line">  lightseagreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#20b2aa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code js-file-line">  lightskyblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#87cefa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code js-file-line">  lightslategray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#778899<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code js-file-line">  lightslategrey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#778899<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code js-file-line">  lightsteelblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#b0c4de<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code js-file-line">  lightyellow<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffffe0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code js-file-line">  lime<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00ff00<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code js-file-line">  limegreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#32cd32<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code js-file-line">  linen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#faf0e6<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code js-file-line">  magenta<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff00ff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code js-file-line">  maroon<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#800000<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code js-file-line">  mediumaquamarine<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#66cdaa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code js-file-line">  mediumblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#0000cd<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code js-file-line">  mediumorchid<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ba55d3<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code js-file-line">  mediumpurple<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#9370db<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code js-file-line">  mediumseagreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#3cb371<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code js-file-line">  mediumslateblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#7b68ee<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code js-file-line">  mediumspringgreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00fa9a<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code js-file-line">  mediumturquoise<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#48d1cc<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code js-file-line">  mediumvioletred<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#c71585<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code js-file-line">  midnightblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#191970<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code js-file-line">  mintcream<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f5fffa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code js-file-line">  mistyrose<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffe4e1<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code js-file-line">  moccasin<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffe4b5<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code js-file-line">  navajowhite<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffdead<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code js-file-line">  navy<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#000080<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code js-file-line">  oldlace<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fdf5e6<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code js-file-line">  olive<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#808000<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code js-file-line">  olivedrab<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#6b8e23<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code js-file-line">  orange<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffa500<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code js-file-line">  orangered<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff4500<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code js-file-line">  orchid<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#da70d6<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code js-file-line">  palegoldenrod<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#eee8aa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code js-file-line">  palegreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#98fb98<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code js-file-line">  paleturquoise<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#afeeee<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code js-file-line">  palevioletred<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#db7093<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code js-file-line">  papayawhip<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffefd5<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code js-file-line">  peachpuff<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffdab9<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code js-file-line">  peru<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#cd853f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code js-file-line">  pink<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffc0cb<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code js-file-line">  plum<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#dda0dd<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code js-file-line">  powderblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#b0e0e6<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code js-file-line">  purple<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#800080<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code js-file-line">  red<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff0000<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code js-file-line">  rosybrown<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#bc8f8f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code js-file-line">  royalblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#4169e1<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code js-file-line">  saddlebrown<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#8b4513<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code js-file-line">  salmon<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fa8072<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code js-file-line">  sandybrown<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f4a460<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code js-file-line">  seagreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#2e8b57<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code js-file-line">  seashell<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fff5ee<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code js-file-line">  sienna<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#a0522d<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code js-file-line">  silver<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#c0c0c0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code js-file-line">  skyblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#87ceeb<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code js-file-line">  slateblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#6a5acd<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code js-file-line">  slategray<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#708090<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code js-file-line">  slategrey<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#708090<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code js-file-line">  snow<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#fffafa<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code js-file-line">  springgreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#00ff7f<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code js-file-line">  steelblue<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#4682b4<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code js-file-line">  tan<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#d2b48c<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code js-file-line">  teal<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#008080<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code js-file-line">  thistle<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#d8bfd8<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code js-file-line">  tomato<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff6347<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code js-file-line">  turquoise<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#40e0d0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code js-file-line">  violet<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ee82ee<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code js-file-line">  wheat<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f5deb3<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code js-file-line">  white<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffffff<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code js-file-line">  whitesmoke<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#f5f5f5<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code js-file-line">  yellow<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffff00<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code js-file-line">  yellowgreen<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>#9acd32<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code js-file-line"><span class="pl-k">for</span> (<span class="pl-s">var</span> d3_rgb_name <span class="pl-k">in</span> d3_rgb_names) {</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code js-file-line">  d3_rgb_names[d3_rgb_name] <span class="pl-k">=</span> d3_rgb_parse(</td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code js-file-line">      d3_rgb_names[d3_rgb_name],</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code js-file-line">      d3_rgb,</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code js-file-line">      d3_hsl_rgb);</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">hsl</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">h</span>, <span class="pl-vpf">s</span>, <span class="pl-vpf">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code js-file-line">  <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code js-file-line">      <span class="pl-k">?</span> (h <span class="pl-k">instanceof</span> d3_Hsl <span class="pl-k">?</span> d3_hsl(h.h, h.s, h.l)</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code js-file-line">      <span class="pl-k">:</span> d3_rgb_parse(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> h, d3_rgb_hsl, d3_hsl))</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code js-file-line">      <span class="pl-k">:</span> d3_hsl(<span class="pl-k">+</span>h, <span class="pl-k">+</span>s, <span class="pl-k">+</span>l);</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_hsl</span>(<span class="pl-vpf">h</span>, <span class="pl-vpf">s</span>, <span class="pl-vpf">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_Hsl</span>(h, s, l);</td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_Hsl</span>(<span class="pl-vpf">h</span>, <span class="pl-vpf">s</span>, <span class="pl-vpf">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code js-file-line">  <span class="pl-v">this</span>.h <span class="pl-k">=</span> h;</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code js-file-line">  <span class="pl-v">this</span>.s <span class="pl-k">=</span> s;</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code js-file-line">  <span class="pl-v">this</span>.l <span class="pl-k">=</span> l;</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code js-file-line"><span class="pl-s3">d3_Hsl</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">brighter</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code js-file-line">  k <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">0.7</span>, arguments.<span class="pl-sc">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_hsl(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.s, <span class="pl-v">this</span>.l / k);</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code js-file-line"><span class="pl-s3">d3_Hsl</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">darker</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code js-file-line">  k <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">0.7</span>, arguments.<span class="pl-sc">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_hsl(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.s, k <span class="pl-k">*</span> <span class="pl-v">this</span>.l);</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code js-file-line"><span class="pl-s3">d3_Hsl</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">rgb</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_hsl_rgb(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.s, <span class="pl-v">this</span>.l);</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code js-file-line"><span class="pl-s3">d3_Hsl</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.rgb().<span class="pl-s3">toString</span>();</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_hsl_rgb</span>(<span class="pl-vpf">h</span>, <span class="pl-vpf">s</span>, <span class="pl-vpf">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code js-file-line">  <span class="pl-s">var</span> m1,</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code js-file-line">      m2;</td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code js-file-line">  <span class="pl-c">/* Some simple corrections for h, s and l. */</span></td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code js-file-line">  h <span class="pl-k">=</span> h <span class="pl-k">%</span> <span class="pl-c1">360</span>; <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) h <span class="pl-k">+=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code js-file-line">  s <span class="pl-k">=</span> s <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> s <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> s;</td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code js-file-line">  l <span class="pl-k">=</span> l <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> l <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> l;</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code js-file-line">  <span class="pl-c">/* From FvD 13.37, CSS Color Module Level 3 */</span></td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code js-file-line">  m2 <span class="pl-k">=</span> l <span class="pl-k">&lt;=</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> l <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> s) <span class="pl-k">:</span> l <span class="pl-k">+</span> s <span class="pl-k">-</span> l <span class="pl-k">*</span> s;</td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code js-file-line">  m1 <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> l <span class="pl-k">-</span> m2;</td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">v</span>(<span class="pl-vpf">h</span>) {</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code js-file-line">    <span class="pl-k">if</span> (h <span class="pl-k">&gt;</span> <span class="pl-c1">360</span>) h <span class="pl-k">-=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) h <span class="pl-k">+=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code js-file-line">    <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">60</span>) <span class="pl-k">return</span> m1 <span class="pl-k">+</span> (m2 <span class="pl-k">-</span> m1) <span class="pl-k">*</span> h / <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code js-file-line">    <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">180</span>) <span class="pl-k">return</span> m2;</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code js-file-line">    <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">240</span>) <span class="pl-k">return</span> m1 <span class="pl-k">+</span> (m2 <span class="pl-k">-</span> m1) <span class="pl-k">*</span> (<span class="pl-c1">240</span> <span class="pl-k">-</span> h) / <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code js-file-line">    <span class="pl-k">return</span> m1;</td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">vv</span>(<span class="pl-vpf">h</span>) {</td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(v(h) <span class="pl-k">*</span> <span class="pl-c1">255</span>);</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_rgb(vv(h <span class="pl-k">+</span> <span class="pl-c1">120</span>), vv(h), vv(h <span class="pl-k">-</span> <span class="pl-c1">120</span>));</td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection</span>(<span class="pl-vpf">groups</span>) {</td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code js-file-line">  d3_arraySubclass(groups, d3_selectionPrototype);</td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code js-file-line">  <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code js-file-line"><span class="pl-s">var</span> <span class="pl-en">d3_select</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">s</span>, <span class="pl-vpf">n</span>) { <span class="pl-k">return</span> n.querySelector(s); },</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code js-file-line">    <span class="pl-en">d3_selectAll</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">s</span>, <span class="pl-vpf">n</span>) { <span class="pl-k">return</span> n.querySelectorAll(s); },</td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code js-file-line">    d3_selectRoot <span class="pl-k">=</span> <span class="pl-s3">document</span>.<span class="pl-sc">documentElement</span>,</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code js-file-line">    d3_selectMatcher <span class="pl-k">=</span> d3_selectRoot.matchesSelector <span class="pl-k">||</span> d3_selectRoot.webkitMatchesSelector <span class="pl-k">||</span> d3_selectRoot.mozMatchesSelector <span class="pl-k">||</span> d3_selectRoot.msMatchesSelector <span class="pl-k">||</span> d3_selectRoot.oMatchesSelector,</td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code js-file-line">    <span class="pl-en">d3_selectMatches</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">n</span>, <span class="pl-vpf">s</span>) { <span class="pl-k">return</span> d3_selectMatcher.<span class="pl-s3">call</span>(n, s); };</td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code js-file-line"><span class="pl-c">// Prefer Sizzle, if available.</span></td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code js-file-line"><span class="pl-k">if</span> (<span class="pl-k">typeof</span> Sizzle <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code js-file-line">  <span class="pl-en">d3_select</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">s</span>, <span class="pl-vpf">n</span>) { <span class="pl-k">return</span> Sizzle(s, n)[<span class="pl-c1">0</span>]; };</td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code js-file-line">  <span class="pl-en">d3_selectAll</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">s</span>, <span class="pl-vpf">n</span>) { <span class="pl-k">return</span> Sizzle.uniqueSort(Sizzle(s, n)); };</td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code js-file-line">  d3_selectMatches <span class="pl-k">=</span> Sizzle.matchesSelector;</td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code js-file-line"><span class="pl-s">var</span> d3_selectionPrototype <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">selection</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_selectionRoot;</td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code js-file-line"><span class="pl-s3">d3.selection</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> d3_selectionPrototype;</td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code js-file-line">      subnode,</td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code js-file-line">      group,</td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> selector <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) selector <span class="pl-k">=</span> d3_selection_selector(selector);</td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code js-file-line">    subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code js-file-line">    subgroup.<span class="pl-sc">parentNode</span> <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[j]).<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code js-file-line">      <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>(subnode <span class="pl-k">=</span> selector.<span class="pl-s3">call</span>(node, node.__data__, i));</td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code js-file-line">        <span class="pl-k">if</span> (subnode <span class="pl-k">&amp;&amp;</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>__data__<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> node) subnode.__data__ <span class="pl-k">=</span> node.__data__;</td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_selector</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_select(selector, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">selectAll</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> selector <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) selector <span class="pl-k">=</span> d3_selection_selectorAll(selector);</td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code js-file-line">      <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code js-file-line">        subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> d3_array(selector.<span class="pl-s3">call</span>(node, node.__data__, i)));</td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code js-file-line">        subgroup.<span class="pl-sc">parentNode</span> <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_selectorAll</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_selectAll(selector, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">attr</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code js-file-line">  name <span class="pl-k">=</span> d3.ns.qualify(name);</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code js-file-line">  <span class="pl-c">// If no value is specified, return the first value.</span></td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code js-file-line">    <span class="pl-s">var</span> node <span class="pl-k">=</span> <span class="pl-v">this</span>.node();</td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code js-file-line">    <span class="pl-k">return</span> name.local</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code js-file-line">        <span class="pl-k">?</span> node.getAttributeNS(name.space, name.local)</td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code js-file-line">        <span class="pl-k">:</span> node.<span class="pl-s3">getAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrNull</span>() {</td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-s3">removeAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrNullNS</span>() {</td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code js-file-line">    <span class="pl-v">this</span>.removeAttributeNS(name.space, name.local);</td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-s3">setAttribute</span>(name, value);</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrConstantNS</span>() {</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code js-file-line">    <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, value);</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code js-file-line">    <span class="pl-s">var</span> x <span class="pl-k">=</span> value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-v">this</span>.<span class="pl-s3">removeAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-s3">setAttribute</span>(name, x);</td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrFunctionNS</span>() {</td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code js-file-line">    <span class="pl-s">var</span> x <span class="pl-k">=</span> value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-v">this</span>.removeAttributeNS(name.space, name.local);</td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, x);</td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(value <span class="pl-k">==</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code js-file-line">      <span class="pl-k">?</span> (name.local <span class="pl-k">?</span> attrNullNS <span class="pl-k">:</span> attrNull) <span class="pl-k">:</span> (<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code js-file-line">      <span class="pl-k">?</span> (name.local <span class="pl-k">?</span> attrFunctionNS <span class="pl-k">:</span> attrFunction)</td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code js-file-line">      <span class="pl-k">:</span> (name.local <span class="pl-k">?</span> attrConstantNS <span class="pl-k">:</span> attrConstant)));</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">classed</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code js-file-line">  <span class="pl-s">var</span> names <span class="pl-k">=</span> name.<span class="pl-s3">split</span>(d3_selection_classedWhitespace),</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code js-file-line">      n <span class="pl-k">=</span> names.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_selection_classed.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, names[i], value);</td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_selection_classed.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, names[i])) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code js-file-line"><span class="pl-s">var</span> d3_selection_classedWhitespace <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_classed</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code js-file-line">  <span class="pl-s">var</span> re <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>(^|<span class="pl-cce">\\</span>s+)<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3.requote(name) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>(<span class="pl-cce">\\</span>s+|$)<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code js-file-line">  <span class="pl-c">// If no value is specified, return the first value.</span></td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code js-file-line">    <span class="pl-s">var</span> node <span class="pl-k">=</span> <span class="pl-v">this</span>.node();</td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code js-file-line">    <span class="pl-k">if</span> (c <span class="pl-k">=</span> node.classList) <span class="pl-k">return</span> c.contains(name);</td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code js-file-line">    <span class="pl-s">var</span> c <span class="pl-k">=</span> node.<span class="pl-sc">className</span>;</td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code js-file-line">    re.<span class="pl-sc">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code js-file-line">    <span class="pl-k">return</span> re.<span class="pl-s3">test</span>(c.baseVal <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> c.baseVal <span class="pl-k">:</span> c);</td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">classedAdd</span>() {</td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code js-file-line">    <span class="pl-k">if</span> (c <span class="pl-k">=</span> <span class="pl-v">this</span>.classList) <span class="pl-k">return</span> c.<span class="pl-s3">add</span>(name);</td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code js-file-line">    <span class="pl-s">var</span> c <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">className</span>,</td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code js-file-line">        cb <span class="pl-k">=</span> c.baseVal <span class="pl-k">!=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code js-file-line">        cv <span class="pl-k">=</span> cb <span class="pl-k">?</span> c.baseVal <span class="pl-k">:</span> c;</td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code js-file-line">    re.<span class="pl-sc">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>re.<span class="pl-s3">test</span>(cv)) {</td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code js-file-line">      cv <span class="pl-k">=</span> d3_collapse(cv <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name);</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code js-file-line">      <span class="pl-k">if</span> (cb) c.baseVal <span class="pl-k">=</span> cv;</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code js-file-line">      <span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-sc">className</span> <span class="pl-k">=</span> cv;</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">classedRemove</span>() {</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code js-file-line">    <span class="pl-k">if</span> (c <span class="pl-k">=</span> <span class="pl-v">this</span>.classList) <span class="pl-k">return</span> c.<span class="pl-s3">remove</span>(name);</td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code js-file-line">    <span class="pl-s">var</span> c <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">className</span>,</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code js-file-line">        cb <span class="pl-k">=</span> c.baseVal <span class="pl-k">!=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code js-file-line">        cv <span class="pl-k">=</span> cb <span class="pl-k">?</span> c.baseVal <span class="pl-k">:</span> c;</td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code js-file-line">    cv <span class="pl-k">=</span> d3_collapse(cv.<span class="pl-s3">replace</span>(re, <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code js-file-line">    <span class="pl-k">if</span> (cb) c.baseVal <span class="pl-k">=</span> cv;</td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-sc">className</span> <span class="pl-k">=</span> cv;</td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">classedFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code js-file-line">    (value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments)</td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code js-file-line">        <span class="pl-k">?</span> classedAdd</td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code js-file-line">        <span class="pl-k">:</span> classedRemove).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code js-file-line">      <span class="pl-k">?</span> classedFunction <span class="pl-k">:</span> value</td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code js-file-line">      <span class="pl-k">?</span> classedAdd</td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code js-file-line">      <span class="pl-k">:</span> classedRemove);</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">style</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) priority <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code js-file-line">  <span class="pl-c">// If no value is specified, return the first value.</span></td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> <span class="pl-s3">window</span></td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code js-file-line">      .getComputedStyle(<span class="pl-v">this</span>.node(), <span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code js-file-line">      .getPropertyValue(name);</td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">styleNull</span>() {</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">style</span>.removeProperty(name);</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">styleConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">style</span>.setProperty(name, value, priority);</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">styleFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code js-file-line">    <span class="pl-s">var</span> x <span class="pl-k">=</span> value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-v">this</span>.<span class="pl-sc">style</span>.removeProperty(name);</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-sc">style</span>.setProperty(name, x, priority);</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(value <span class="pl-k">==</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code js-file-line">      <span class="pl-k">?</span> styleNull <span class="pl-k">:</span> (<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code js-file-line">      <span class="pl-k">?</span> styleFunction <span class="pl-k">:</span> styleConstant));</td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">property</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code js-file-line">  <span class="pl-c">// If no value is specified, return the first value.</span></td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> <span class="pl-v">this</span>.node()[name];</td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">propertyNull</span>() {</td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code js-file-line">    <span class="pl-k">delete</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">propertyConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code js-file-line">    <span class="pl-v">this</span>[name] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">propertyFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code js-file-line">    <span class="pl-s">var</span> x <span class="pl-k">=</span> value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">delete</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-v">this</span>[name] <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(value <span class="pl-k">==</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code js-file-line">      <span class="pl-k">?</span> propertyNull <span class="pl-k">:</span> (<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code js-file-line">      <span class="pl-k">?</span> propertyFunction <span class="pl-k">:</span> propertyConstant));</td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">text</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code js-file-line">  <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-v">this</span>.node().textContent <span class="pl-k">:</span> <span class="pl-v">this</span>.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-st">function</span>() { <span class="pl-s">var</span> v <span class="pl-k">=</span> value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments); <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> v <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> v; } <span class="pl-k">:</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-st">function</span>() { <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-st">function</span>() { <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> value; });</td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">html</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code js-file-line">  <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-v">this</span>.node().innerHTML <span class="pl-k">:</span> <span class="pl-v">this</span>.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-st">function</span>() { <span class="pl-s">var</span> v <span class="pl-k">=</span> value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments); <span class="pl-v">this</span>.innerHTML <span class="pl-k">=</span> v <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> v; } <span class="pl-k">:</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-st">function</span>() { <span class="pl-v">this</span>.innerHTML <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-st">function</span>() { <span class="pl-v">this</span>.innerHTML <span class="pl-k">=</span> value; });</td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code js-file-line"><span class="pl-c">// TODO append(node)?</span></td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code js-file-line"><span class="pl-c">// TODO append(function)?</span></td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">append</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code js-file-line">  name <span class="pl-k">=</span> d3.ns.qualify(name);</td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">append</span>() {</td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">appendChild</span>(<span class="pl-s3">document</span>.createElementNS(<span class="pl-v">this</span>.<span class="pl-sc">namespaceURI</span>, name));</td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">appendNS</span>() {</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">appendChild</span>(<span class="pl-s3">document</span>.createElementNS(name.space, name.local));</td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">select</span>(name.local <span class="pl-k">?</span> appendNS <span class="pl-k">:</span> append);</td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code js-file-line"><span class="pl-c">// TODO insert(node, function)?</span></td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code js-file-line"><span class="pl-c">// TODO insert(function, string)?</span></td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code js-file-line"><span class="pl-c">// TODO insert(function, function)?</span></td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">insert</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">before</span>) {</td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code js-file-line">  name <span class="pl-k">=</span> d3.ns.qualify(name);</td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">insert</span>() {</td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">insertBefore</span>(</td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code js-file-line">        <span class="pl-s3">document</span>.createElementNS(<span class="pl-v">this</span>.<span class="pl-sc">namespaceURI</span>, name),</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code js-file-line">        d3_select(before, <span class="pl-v">this</span>));</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">insertNS</span>() {</td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">insertBefore</span>(</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code js-file-line">        <span class="pl-s3">document</span>.createElementNS(name.space, name.local),</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code js-file-line">        d3_select(before, <span class="pl-v">this</span>));</td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">select</span>(name.local <span class="pl-k">?</span> insertNS <span class="pl-k">:</span> insert);</td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code js-file-line"><span class="pl-c">// TODO remove(selector)?</span></td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code js-file-line"><span class="pl-c">// TODO remove(node)?</span></td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code js-file-line"><span class="pl-c">// TODO remove(function)?</span></td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">remove</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(<span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code js-file-line">    <span class="pl-s">var</span> parent <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code js-file-line">    <span class="pl-k">if</span> (parent) parent.<span class="pl-s3">removeChild</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code js-file-line"><span class="pl-c">// TODO data(null) for clearing data?</span></td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">data</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">data</span>, <span class="pl-vpf">join</span>) {</td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code js-file-line">  <span class="pl-s">var</span> enter <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code js-file-line">      update <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code js-file-line">      exit <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">bind</span>(<span class="pl-vpf">group</span>, <span class="pl-vpf">groupData</span>) {</td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code js-file-line">    <span class="pl-s">var</span> i,</td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code js-file-line">        n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code js-file-line">        m <span class="pl-k">=</span> groupData.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code js-file-line">        n0 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(n, m),</td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code js-file-line">        n1 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(n, m),</td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code js-file-line">        updateNodes <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code js-file-line">        enterNodes <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code js-file-line">        exitNodes <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code js-file-line">        node,</td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code js-file-line">        nodeData;</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code js-file-line">    <span class="pl-k">if</span> (join) {</td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code js-file-line">      <span class="pl-s">var</span> nodeByKey <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code js-file-line">          keys <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code js-file-line">          key,</td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code js-file-line">          j <span class="pl-k">=</span> groupData.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code js-file-line">        key <span class="pl-k">=</span> join.<span class="pl-s3">call</span>(node <span class="pl-k">=</span> group[i], node.__data__, i);</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code js-file-line">        <span class="pl-k">if</span> (key <span class="pl-k">in</span> nodeByKey) {</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code js-file-line">          exitNodes[j<span class="pl-k">++</span>] <span class="pl-k">=</span> node; <span class="pl-c">// duplicate key</span></td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code js-file-line">          nodeByKey[key] <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code js-file-line">        keys.<span class="pl-s3">push</span>(key);</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code js-file-line">        node <span class="pl-k">=</span> nodeByKey[key <span class="pl-k">=</span> join.<span class="pl-s3">call</span>(groupData, nodeData <span class="pl-k">=</span> groupData[i], i)];</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code js-file-line">        <span class="pl-k">if</span> (node) {</td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code js-file-line">          node.__data__ <span class="pl-k">=</span> nodeData;</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code js-file-line">          updateNodes[i] <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code js-file-line">          enterNodes[i] <span class="pl-k">=</span> exitNodes[i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code js-file-line">          enterNodes[i] <span class="pl-k">=</span> d3_selection_dataNode(nodeData);</td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code js-file-line">          updateNodes[i] <span class="pl-k">=</span> exitNodes[i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code js-file-line">        <span class="pl-k">delete</span> nodeByKey[key];</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code js-file-line">        <span class="pl-k">if</span> (keys[i] <span class="pl-k">in</span> nodeByKey) {</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code js-file-line">          exitNodes[i] <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n0;) {</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code js-file-line">        node <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code js-file-line">        nodeData <span class="pl-k">=</span> groupData[i];</td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code js-file-line">        <span class="pl-k">if</span> (node) {</td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code js-file-line">          node.__data__ <span class="pl-k">=</span> nodeData;</td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code js-file-line">          updateNodes[i] <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code js-file-line">          enterNodes[i] <span class="pl-k">=</span> exitNodes[i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code js-file-line">          enterNodes[i] <span class="pl-k">=</span> d3_selection_dataNode(nodeData);</td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code js-file-line">          updateNodes[i] <span class="pl-k">=</span> exitNodes[i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code js-file-line">      <span class="pl-k">for</span> (; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code js-file-line">        enterNodes[i] <span class="pl-k">=</span> d3_selection_dataNode(groupData[i]);</td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code js-file-line">        updateNodes[i] <span class="pl-k">=</span> exitNodes[i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code js-file-line">      <span class="pl-k">for</span> (; i <span class="pl-k">&lt;</span> n1; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code js-file-line">        exitNodes[i] <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code js-file-line">        enterNodes[i] <span class="pl-k">=</span> updateNodes[i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code js-file-line">    enterNodes.update</td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code js-file-line">        <span class="pl-k">=</span> updateNodes;</td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code js-file-line">    enterNodes.<span class="pl-sc">parentNode</span></td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code js-file-line">        <span class="pl-k">=</span> updateNodes.<span class="pl-sc">parentNode</span></td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code js-file-line">        <span class="pl-k">=</span> exitNodes.<span class="pl-sc">parentNode</span></td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code js-file-line">        <span class="pl-k">=</span> group.<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code js-file-line">    enter.<span class="pl-s3">push</span>(enterNodes);</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code js-file-line">    update.<span class="pl-s3">push</span>(updateNodes);</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code js-file-line">    exit.<span class="pl-s3">push</span>(exitNodes);</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code js-file-line">      n <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code js-file-line">      group;</td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> data <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code js-file-line">      bind(group <span class="pl-k">=</span> <span class="pl-v">this</span>[i], data.<span class="pl-s3">call</span>(group, group.<span class="pl-sc">parentNode</span>.__data__, i));</td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code js-file-line">      bind(group <span class="pl-k">=</span> <span class="pl-v">this</span>[i], data);</td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code js-file-line">  <span class="pl-s">var</span> selection <span class="pl-k">=</span> d3_selection(update);</td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code js-file-line">  <span class="pl-s3">selection</span>.<span class="pl-en">enter</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_selection_enter(enter); };</td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code js-file-line">  <span class="pl-s3">selection</span>.<span class="pl-en">exit</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() { <span class="pl-k">return</span> d3_selection(exit); };</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code js-file-line">  <span class="pl-k">return</span> selection;</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_dataNode</span>(<span class="pl-vpf">data</span>) {</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code js-file-line">  <span class="pl-k">return</span> {__data__<span class="pl-k">:</span> data};</td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">filter</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">filter</span>) {</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code js-file-line">      group,</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> filter <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) filter <span class="pl-k">=</span> d3_selection_filter(filter);</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code js-file-line">    subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code js-file-line">    subgroup.<span class="pl-sc">parentNode</span> <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[j]).<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code js-file-line">      <span class="pl-k">if</span> ((node <span class="pl-k">=</span> group[i]) <span class="pl-k">&amp;&amp;</span> filter.<span class="pl-s3">call</span>(node, node.__data__, i)) {</td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_filter</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_selectMatches(<span class="pl-v">this</span>, selector);</td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">map</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">map</span>) {</td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(<span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code js-file-line">    <span class="pl-v">this</span>.__data__ <span class="pl-k">=</span> map.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">order</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> group.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, next <span class="pl-k">=</span> group[i], node; <span class="pl-k">--</span>i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>;) {</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code js-file-line">      <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code js-file-line">        <span class="pl-k">if</span> (next <span class="pl-k">&amp;&amp;</span> next <span class="pl-k">!==</span> node.<span class="pl-sc">nextSibling</span>) next.<span class="pl-sc">parentNode</span>.<span class="pl-s3">insertBefore</span>(node, next);</td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code js-file-line">        next <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">sort</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">comparator</span>) {</td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code js-file-line">  comparator <span class="pl-k">=</span> d3_selection_sortComparator.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) <span class="pl-v">this</span>[j].<span class="pl-s3">sort</span>(comparator);</td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.order();</td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_sortComparator</span>(<span class="pl-vpf">comparator</span>) {</td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) comparator <span class="pl-k">=</span> d3.ascending;</td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code js-file-line">    <span class="pl-k">return</span> comparator(a <span class="pl-k">&amp;&amp;</span> a.__data__, b <span class="pl-k">&amp;&amp;</span> b.__data__);</td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code js-file-line"><span class="pl-c">// type can be namespaced, e.g., &quot;click.foo&quot;</span></td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code js-file-line"><span class="pl-c">// listener can be null for removal</span></td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">on</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">type</span>, <span class="pl-vpf">listener</span>, <span class="pl-vpf">capture</span>) {</td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) capture <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code js-file-line">  <span class="pl-c">// parse the type specifier</span></td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code js-file-line">  <span class="pl-s">var</span> name <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>__on<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> type, i <span class="pl-k">=</span> type.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code js-file-line">  <span class="pl-k">if</span> (i <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) type <span class="pl-k">=</span> type.<span class="pl-s3">substring</span>(<span class="pl-c1">0</span>, i);</td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code js-file-line">  <span class="pl-c">// if called with only one argument, return the current listener</span></td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> (i <span class="pl-k">=</span> <span class="pl-v">this</span>.node()[name]) <span class="pl-k">&amp;&amp;</span> i._;</td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code js-file-line">  <span class="pl-c">// remove the old event listener, and add the new event listener</span></td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(<span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code js-file-line">    <span class="pl-s">var</span> node <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code js-file-line">    <span class="pl-k">if</span> (node[name]) node.removeEventListener(type, node[name], capture);</td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code js-file-line">    <span class="pl-k">if</span> (listener) node.addEventListener(type, node[name] <span class="pl-k">=</span> l, capture);</td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code js-file-line">    <span class="pl-c">// wrapped event listener that preserves i</span></td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code js-file-line">    <span class="pl-st">function</span> <span class="pl-en">l</span>(<span class="pl-vpf">e</span>) {</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code js-file-line">      <span class="pl-s">var</span> o <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>; <span class="pl-c">// Events can be reentrant (e.g., focus).</span></td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code js-file-line">      d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> e;</td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code js-file-line">        listener.<span class="pl-s3">call</span>(node, node.__data__, i);</td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code js-file-line">        d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code js-file-line">    <span class="pl-c">// stash the unwrapped listener for retrieval</span></td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code js-file-line">    l._ <span class="pl-k">=</span> listener;</td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">each</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code js-file-line">      <span class="pl-s">var</span> node <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code js-file-line">      <span class="pl-k">if</span> (node) callback.<span class="pl-s3">call</span>(node, node.__data__, i, j);</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code js-file-line"><span class="pl-c">// Note: assigning to the arguments array simultaneously changes the value of</span></td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code js-file-line"><span class="pl-c">// the corresponding argument!</span></td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code js-file-line"><span class="pl-c">// TODO The `this` argument probably shouldn&#39;t be the first argument to the</span></td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code js-file-line"><span class="pl-c">// callback, anyway, since it&#39;s redundant. However, that will require a major</span></td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code js-file-line"><span class="pl-c">// version bump due to backwards compatibility, so I&#39;m not changing it right</span></td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code js-file-line"><span class="pl-c">// away.</span></td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">call</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code js-file-line">  callback.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, (arguments[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-v">this</span>, arguments));</td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">empty</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-v">this</span>.node();</td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">node</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code js-file-line">      <span class="pl-s">var</span> node <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code js-file-line">      <span class="pl-k">if</span> (node) <span class="pl-k">return</span> node;</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code js-file-line"><span class="pl-s3">d3_selectionPrototype</span>.<span class="pl-en">transition</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code js-file-line">    subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code js-file-line">      subgroup.<span class="pl-s3">push</span>((node <span class="pl-k">=</span> group[i]) <span class="pl-k">?</span> {node<span class="pl-k">:</span> node, delay<span class="pl-k">:</span> <span class="pl-c1">0</span>, duration<span class="pl-k">:</span> <span class="pl-c1">250</span>} <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_transition(subgroups, d3_transitionInheritId <span class="pl-k">||</span> <span class="pl-k">++</span>d3_transitionId, <span class="pl-s3">Date</span>.now());</td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code js-file-line"><span class="pl-s">var</span> d3_selectionRoot <span class="pl-k">=</span> d3_selection([[<span class="pl-s3">document</span>]]);</td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code js-file-line">d3_selectionRoot[<span class="pl-c1">0</span>].<span class="pl-sc">parentNode</span> <span class="pl-k">=</span> d3_selectRoot;</td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code js-file-line"><span class="pl-c">// TODO fast singleton implementation!</span></td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code js-file-line"><span class="pl-c">// TODO select(function)</span></td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">typeof</span> selector <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code js-file-line">      <span class="pl-k">?</span> d3_selectionRoot.<span class="pl-s3">select</span>(selector)</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code js-file-line">      <span class="pl-k">:</span> d3_selection([[selector]]); <span class="pl-c">// assume node</span></td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code js-file-line"><span class="pl-c">// TODO selectAll(function)</span></td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">selectAll</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">typeof</span> selector <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code js-file-line">      <span class="pl-k">?</span> d3_selectionRoot.selectAll(selector)</td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code js-file-line">      <span class="pl-k">:</span> d3_selection([d3_array(selector)]); <span class="pl-c">// assume node[]</span></td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_selection_enter</span>(<span class="pl-vpf">selection</span>) {</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code js-file-line">  d3_arraySubclass(selection, d3_selection_enterPrototype);</td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code js-file-line">  <span class="pl-k">return</span> selection;</td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code js-file-line"><span class="pl-s">var</span> d3_selection_enterPrototype <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code js-file-line">d3_selection_enterPrototype.append <span class="pl-k">=</span> d3_selectionPrototype.append;</td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code js-file-line">d3_selection_enterPrototype.insert <span class="pl-k">=</span> d3_selectionPrototype.insert;</td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code js-file-line">d3_selection_enterPrototype.empty <span class="pl-k">=</span> d3_selectionPrototype.empty;</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code js-file-line">d3_selection_enterPrototype.node <span class="pl-k">=</span> d3_selectionPrototype.node;</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code js-file-line"><span class="pl-s3">d3_selection_enterPrototype</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code js-file-line">      subnode,</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code js-file-line">      upgroup,</td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code js-file-line">      group,</td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code js-file-line">    upgroup <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[j]).update;</td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code js-file-line">    subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code js-file-line">    subgroup.<span class="pl-sc">parentNode</span> <span class="pl-k">=</span> group.<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code js-file-line">      <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>(upgroup[i] <span class="pl-k">=</span> subnode <span class="pl-k">=</span> selector.<span class="pl-s3">call</span>(group.<span class="pl-sc">parentNode</span>, node.__data__, i));</td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code js-file-line">        subnode.__data__ <span class="pl-k">=</span> node.__data__;</td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transition</span>(<span class="pl-vpf">groups</span>, <span class="pl-vpf">id</span>, <span class="pl-vpf">time</span>) {</td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code js-file-line">  d3_arraySubclass(groups, d3_transitionPrototype);</td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code js-file-line">  <span class="pl-s">var</span> tweens <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code js-file-line">      <span class="pl-s3">event</span> <span class="pl-k">=</span> d3.dispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code js-file-line">      ease <span class="pl-k">=</span> d3_transitionEase;</td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code js-file-line">  groups.<span class="pl-sc">id</span> <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code js-file-line">  groups<span class="pl-s3">.time</span> <span class="pl-k">=</span> time;</td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code js-file-line">  <span class="pl-s3">groups</span>.<span class="pl-en">tween</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> tweens[name];</td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code js-file-line">    <span class="pl-k">if</span> (tween <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">delete</span> tweens[name];</td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code js-file-line">    <span class="pl-k">else</span> tweens[name] <span class="pl-k">=</span> tween;</td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code js-file-line">    <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code js-file-line">  <span class="pl-s3">groups</span>.<span class="pl-en">ease</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> ease;</td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code js-file-line">    ease <span class="pl-k">=</span> <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> value <span class="pl-k">:</span> d3.ease.<span class="pl-s3">apply</span>(d3, arguments);</td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code js-file-line">    <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code js-file-line">  <span class="pl-s3">groups</span>.<span class="pl-en">each</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">type</span>, <span class="pl-vpf">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> d3_transition_each.<span class="pl-s3">call</span>(groups, type);</td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code js-file-line">    <span class="pl-s3">event</span>.on(type, listener);</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code js-file-line">    <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code js-file-line">  d3.timer(<span class="pl-st">function</span>(<span class="pl-vpf">elapsed</span>) {</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code js-file-line">    groups.each(<span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">j</span>) {</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code js-file-line">      <span class="pl-s">var</span> tweened <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code js-file-line">          node <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code js-file-line">          delay <span class="pl-k">=</span> groups[j][i].delay,</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code js-file-line">          duration <span class="pl-k">=</span> groups[j][i].duration,</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code js-file-line">          lock <span class="pl-k">=</span> node.__transition__ <span class="pl-k">||</span> (node.__transition__ <span class="pl-k">=</span> {active<span class="pl-k">:</span> <span class="pl-c1">0</span>, count<span class="pl-k">:</span> <span class="pl-c1">0</span>});</td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code js-file-line">      <span class="pl-k">++</span>lock.count;</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code js-file-line">      delay <span class="pl-k">&lt;=</span> elapsed <span class="pl-k">?</span> start(elapsed) <span class="pl-k">:</span> d3.timer(start, delay, time);</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code js-file-line">      <span class="pl-st">function</span> <span class="pl-en">start</span>(<span class="pl-vpf">elapsed</span>) {</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code js-file-line">        <span class="pl-k">if</span> (lock.active <span class="pl-k">&gt;</span> id) <span class="pl-k">return</span> <span class="pl-s3">stop</span>();</td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code js-file-line">        lock.active <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> tween <span class="pl-k">in</span> tweens) {</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code js-file-line">          <span class="pl-k">if</span> (tween <span class="pl-k">=</span> tweens[tween].<span class="pl-s3">call</span>(node, d, i)) {</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code js-file-line">            tweened.<span class="pl-s3">push</span>(tween);</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code js-file-line">        <span class="pl-s3">event</span>.<span class="pl-sc">start</span>.<span class="pl-s3">call</span>(node, d, i);</td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>tick(elapsed)) d3.timer(tick, <span class="pl-c1">0</span>, time);</td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code js-file-line">      <span class="pl-st">function</span> <span class="pl-en">tick</span>(<span class="pl-vpf">elapsed</span>) {</td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code js-file-line">        <span class="pl-k">if</span> (lock.active <span class="pl-k">!==</span> id) <span class="pl-k">return</span> <span class="pl-s3">stop</span>();</td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code js-file-line">        <span class="pl-s">var</span> t <span class="pl-k">=</span> (elapsed <span class="pl-k">-</span> delay) / duration,</td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code js-file-line">            e <span class="pl-k">=</span> ease(t),</td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code js-file-line">            n <span class="pl-k">=</span> tweened.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code js-file-line">        <span class="pl-k">while</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code js-file-line">          tweened[<span class="pl-k">--</span>n].<span class="pl-s3">call</span>(node, e);</td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code js-file-line">        <span class="pl-k">if</span> (t <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code js-file-line">          <span class="pl-s3">stop</span>();</td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code js-file-line">          d3_transitionInheritId <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code js-file-line">          <span class="pl-s3">event</span>.end.<span class="pl-s3">call</span>(node, d, i);</td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code js-file-line">          d3_transitionInheritId <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code js-file-line">      <span class="pl-st">function</span> <span class="pl-en">stop</span>() {</td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!--</span>lock.count) <span class="pl-k">delete</span> node.__transition__;</td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code js-file-line">  }, <span class="pl-c1">0</span>, time);</td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code js-file-line">  <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code js-file-line"><span class="pl-s">var</span> d3_transitionRemove <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transitionNull</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">a</span>) {</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code js-file-line">  <span class="pl-k">return</span> a <span class="pl-k">!=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> d3_transitionRemove;</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transitionTween</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code js-file-line">  <span class="pl-s">var</span> interpolate <span class="pl-k">=</span> d3_interpolateByName(name);</td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">transitionFunction</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">a</span>) {</td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code js-file-line">    <span class="pl-s">var</span> v <span class="pl-k">=</span> b.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i);</td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code js-file-line">    <span class="pl-k">return</span> v <span class="pl-k">==</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code js-file-line">        <span class="pl-k">?</span> a <span class="pl-k">!=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> d3_transitionRemove</td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code js-file-line">        <span class="pl-k">:</span> a <span class="pl-k">!=</span> v <span class="pl-k">&amp;&amp;</span> interpolate(a, v);</td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">transitionString</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">a</span>) {</td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code js-file-line">    <span class="pl-k">return</span> a <span class="pl-k">!=</span> b <span class="pl-k">&amp;&amp;</span> interpolate(a, b);</td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">typeof</span> b <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> transitionFunction</td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code js-file-line">      <span class="pl-k">:</span> b <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_transitionNull</td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code js-file-line">      <span class="pl-k">:</span> (b <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, transitionString);</td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code js-file-line"><span class="pl-s">var</span> d3_transitionPrototype <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code js-file-line">    d3_transitionId <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code js-file-line">    d3_transitionInheritId <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code js-file-line">    d3_transitionEase <span class="pl-k">=</span> d3.ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>cubic-in-out<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code js-file-line">d3_transitionPrototype.call <span class="pl-k">=</span> d3_selectionPrototype.call;</td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">transition</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_selectionRoot.transition();</td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code js-file-line"><span class="pl-s3">d3.transition</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> d3_transitionPrototype;</td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code js-file-line">      subnode,</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> selector <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) selector <span class="pl-k">=</span> d3_selection_selector(selector);</td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code js-file-line">    subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code js-file-line">      <span class="pl-k">if</span> ((node <span class="pl-k">=</span> group[i]) <span class="pl-k">&amp;&amp;</span> (subnode <span class="pl-k">=</span> selector.<span class="pl-s3">call</span>(node.node, node.node.__data__, i))) {</td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-s1"><span class="pl-pds">&quot;</span>__data__<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> node.node) subnode.__data__ <span class="pl-k">=</span> node.node.__data__;</td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>({node<span class="pl-k">:</span> subnode, delay<span class="pl-k">:</span> node.delay, duration<span class="pl-k">:</span> node.duration});</td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code js-file-line">        subgroup.<span class="pl-s3">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_transition(subgroups, <span class="pl-v">this</span>.<span class="pl-sc">id</span>, <span class="pl-v">this</span><span class="pl-s3">.time</span>).ease(<span class="pl-v">this</span>.ease());</td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">selectAll</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code js-file-line">  <span class="pl-s">var</span> subgroups <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code js-file-line">      subgroup,</td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code js-file-line">      subnodes,</td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code js-file-line">      node;</td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> selector <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) selector <span class="pl-k">=</span> d3_selection_selectorAll(selector);</td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m;) {</td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n;) {</td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code js-file-line">      <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code js-file-line">        subnodes <span class="pl-k">=</span> selector.<span class="pl-s3">call</span>(node.node, node.node.__data__, i);</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code js-file-line">        subgroups.<span class="pl-s3">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> k <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, o <span class="pl-k">=</span> subnodes.<span class="pl-sc">length</span>; <span class="pl-k">++</span>k <span class="pl-k">&lt;</span> o;) {</td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code js-file-line">          subgroup.<span class="pl-s3">push</span>({node<span class="pl-k">:</span> subnodes[k], delay<span class="pl-k">:</span> node.delay, duration<span class="pl-k">:</span> node.duration});</td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_transition(subgroups, <span class="pl-v">this</span>.<span class="pl-sc">id</span>, <span class="pl-v">this</span><span class="pl-s3">.time</span>).ease(<span class="pl-v">this</span>.ease());</td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">attr</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.attrTween(name, d3_transitionTween(name, value));</td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">attrTween</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">nameNS</span>, <span class="pl-vpf">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code js-file-line">  <span class="pl-s">var</span> name <span class="pl-k">=</span> d3.ns.qualify(nameNS);</td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrTween</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code js-file-line">    <span class="pl-s">var</span> f <span class="pl-k">=</span> tween.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i, <span class="pl-v">this</span>.<span class="pl-s3">getAttribute</span>(name));</td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code js-file-line">    <span class="pl-k">return</span> f <span class="pl-k">===</span> d3_transitionRemove</td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code js-file-line">        <span class="pl-k">?</span> (<span class="pl-v">this</span>.<span class="pl-s3">removeAttribute</span>(name), <span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code js-file-line">        <span class="pl-k">:</span> f <span class="pl-k">&amp;&amp;</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) { <span class="pl-v">this</span>.<span class="pl-s3">setAttribute</span>(name, f(t)); };</td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">attrTweenNS</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code js-file-line">    <span class="pl-s">var</span> f <span class="pl-k">=</span> tween.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i, <span class="pl-v">this</span>.getAttributeNS(name.space, name.local));</td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code js-file-line">    <span class="pl-k">return</span> f <span class="pl-k">===</span> d3_transitionRemove</td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code js-file-line">        <span class="pl-k">?</span> (<span class="pl-v">this</span>.removeAttributeNS(name.space, name.local), <span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code js-file-line">        <span class="pl-k">:</span> f <span class="pl-k">&amp;&amp;</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) { <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, f(t)); };</td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.tween(<span class="pl-s1"><span class="pl-pds">&quot;</span>attr.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> nameNS, name.local <span class="pl-k">?</span> attrTweenNS <span class="pl-k">:</span> attrTween);</td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">style</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) priority <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.styleTween(name, d3_transitionTween(name, value), priority);</td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">styleTween</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">name</span>, <span class="pl-vpf">tween</span>, <span class="pl-vpf">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) priority <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.tween(<span class="pl-s1"><span class="pl-pds">&quot;</span>style.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code js-file-line">    <span class="pl-s">var</span> f <span class="pl-k">=</span> tween.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i, <span class="pl-s3">window</span>.getComputedStyle(<span class="pl-v">this</span>, <span class="pl-c1">null</span>).getPropertyValue(name));</td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code js-file-line">    <span class="pl-k">return</span> f <span class="pl-k">===</span> d3_transitionRemove</td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code js-file-line">        <span class="pl-k">?</span> (<span class="pl-v">this</span>.<span class="pl-sc">style</span>.removeProperty(name), <span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code js-file-line">        <span class="pl-k">:</span> f <span class="pl-k">&amp;&amp;</span> <span class="pl-st">function</span>(<span class="pl-vpf">t</span>) { <span class="pl-v">this</span>.<span class="pl-sc">style</span>.setProperty(name, f(t), priority); };</td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">text</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.tween(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code js-file-line">    <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code js-file-line">        <span class="pl-k">?</span> value.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i)</td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code js-file-line">        <span class="pl-k">:</span> value;</td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">remove</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.each(<span class="pl-s1"><span class="pl-pds">&quot;</span>end.transition<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code js-file-line">    <span class="pl-s">var</span> p;</td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.__transition__ <span class="pl-k">&amp;&amp;</span> (p <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">parentNode</span>)) p.<span class="pl-s3">removeChild</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">delay</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code js-file-line">  <span class="pl-s">var</span> groups <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code js-file-line">  <span class="pl-k">return</span> groups.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">j</span>) { groups[j][i].delay <span class="pl-k">=</span> <span class="pl-k">+</span>value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments); }</td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code js-file-line">      <span class="pl-k">:</span> (value <span class="pl-k">=</span> <span class="pl-k">+</span>value, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">j</span>) { groups[j][i].delay <span class="pl-k">=</span> value; }));</td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">duration</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code js-file-line">  <span class="pl-s">var</span> groups <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code js-file-line">  <span class="pl-k">return</span> groups.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">j</span>) { groups[j][i].duration <span class="pl-k">=</span> <span class="pl-k">+</span>value.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments); }</td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code js-file-line">      <span class="pl-k">:</span> (value <span class="pl-k">=</span> <span class="pl-k">+</span>value, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">j</span>) { groups[j][i].duration <span class="pl-k">=</span> value; }));</td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transition_each</span>(<span class="pl-vpf">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code js-file-line">      <span class="pl-s">var</span> node <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code js-file-line">      <span class="pl-k">if</span> (node) callback.<span class="pl-s3">call</span>(node <span class="pl-k">=</span> node.node, node.__data__, i, j);</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code js-file-line"><span class="pl-s3">d3_transitionPrototype</span>.<span class="pl-en">transition</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">select</span>(d3_this);</td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code js-file-line"><span class="pl-s">var</span> d3_timer_queue <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code js-file-line">    d3_timer_interval, <span class="pl-c">// is an interval (or frame) active?</span></td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code js-file-line">    d3_timer_timeout; <span class="pl-c">// is a timeout active?</span></td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code js-file-line"><span class="pl-c">// The timer will continue to fire until callback returns true.</span></td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">timer</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">callback</span>, <span class="pl-vpf">delay</span>, <span class="pl-vpf">then</span>) {</td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code js-file-line">  <span class="pl-s">var</span> found <span class="pl-k">=</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code js-file-line">      t0,</td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code js-file-line">      t1 <span class="pl-k">=</span> d3_timer_queue;</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) delay <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-s3">isFinite</span>(delay)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code js-file-line">    then <span class="pl-k">=</span> <span class="pl-s3">Date</span>.now();</td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code js-file-line">  <span class="pl-c">// See if the callback&#39;s already in the queue.</span></td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code js-file-line">  <span class="pl-k">while</span> (t1) {</td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code js-file-line">    <span class="pl-k">if</span> (t1.callback <span class="pl-k">===</span> callback) {</td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code js-file-line">      t1.then <span class="pl-k">=</span> then;</td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code js-file-line">      t1.delay <span class="pl-k">=</span> delay;</td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code js-file-line">      found <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code js-file-line">      <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code js-file-line">    t0 <span class="pl-k">=</span> t1;</td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code js-file-line">    t1 <span class="pl-k">=</span> t1.<span class="pl-sc">next</span>;</td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code js-file-line">  <span class="pl-c">// Otherwise, add the callback to the queue.</span></td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>found) d3_timer_queue <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code js-file-line">    callback<span class="pl-k">:</span> callback,</td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code js-file-line">    then<span class="pl-k">:</span> then,</td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code js-file-line">    delay<span class="pl-k">:</span> delay,</td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code js-file-line">    next<span class="pl-k">:</span> d3_timer_queue</td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code js-file-line">  <span class="pl-c">// Start animatin&#39;!</span></td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_timer_interval) {</td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code js-file-line">    d3_timer_timeout <span class="pl-k">=</span> <span class="pl-s3">clearTimeout</span>(d3_timer_timeout);</td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code js-file-line">    d3_timer_interval <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code js-file-line">    d3_timer_frame(d3_timer_step);</td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_timer_step</span>() {</td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code js-file-line">  <span class="pl-s">var</span> elapsed,</td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code js-file-line">      now <span class="pl-k">=</span> <span class="pl-s3">Date</span>.now(),</td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code js-file-line">      t1 <span class="pl-k">=</span> d3_timer_queue;</td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code js-file-line">  <span class="pl-k">while</span> (t1) {</td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code js-file-line">    elapsed <span class="pl-k">=</span> now <span class="pl-k">-</span> t1.then;</td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code js-file-line">    <span class="pl-k">if</span> (elapsed <span class="pl-k">&gt;=</span> t1.delay) t1.flush <span class="pl-k">=</span> t1.callback(elapsed);</td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code js-file-line">    t1 <span class="pl-k">=</span> t1.<span class="pl-sc">next</span>;</td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code js-file-line">  <span class="pl-s">var</span> delay <span class="pl-k">=</span> d3_timer_flush() <span class="pl-k">-</span> now;</td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code js-file-line">  <span class="pl-k">if</span> (delay <span class="pl-k">&gt;</span> <span class="pl-c1">24</span>) {</td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-s3">isFinite</span>(delay)) {</td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code js-file-line">      <span class="pl-s3">clearTimeout</span>(d3_timer_timeout);</td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code js-file-line">      d3_timer_timeout <span class="pl-k">=</span> <span class="pl-s3">setTimeout</span>(d3_timer_step, delay);</td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code js-file-line">    d3_timer_interval <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code js-file-line">    d3_timer_interval <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code js-file-line">    d3_timer_frame(d3_timer_step);</td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code js-file-line"><span class="pl-s3">d3.timer</span>.<span class="pl-en">flush</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code js-file-line">  <span class="pl-s">var</span> elapsed,</td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code js-file-line">      now <span class="pl-k">=</span> <span class="pl-s3">Date</span>.now(),</td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code js-file-line">      t1 <span class="pl-k">=</span> d3_timer_queue;</td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code js-file-line">  <span class="pl-k">while</span> (t1) {</td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code js-file-line">    elapsed <span class="pl-k">=</span> now <span class="pl-k">-</span> t1.then;</td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>t1.delay) t1.flush <span class="pl-k">=</span> t1.callback(elapsed);</td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code js-file-line">    t1 <span class="pl-k">=</span> t1.<span class="pl-sc">next</span>;</td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code js-file-line">  d3_timer_flush();</td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code js-file-line"><span class="pl-c">// Flush after callbacks, to avoid concurrent queue modification.</span></td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_timer_flush</span>() {</td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code js-file-line">  <span class="pl-s">var</span> t0 <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code js-file-line">      t1 <span class="pl-k">=</span> d3_timer_queue,</td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code js-file-line">      then <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code js-file-line">  <span class="pl-k">while</span> (t1) {</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code js-file-line">    <span class="pl-k">if</span> (t1.flush) {</td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code js-file-line">      t1 <span class="pl-k">=</span> t0 <span class="pl-k">?</span> t0.<span class="pl-sc">next</span> <span class="pl-k">=</span> t1.<span class="pl-sc">next</span> <span class="pl-k">:</span> d3_timer_queue <span class="pl-k">=</span> t1.<span class="pl-sc">next</span>;</td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code js-file-line">      then <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(then, t1.then <span class="pl-k">+</span> t1.delay);</td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code js-file-line">      t1 <span class="pl-k">=</span> (t0 <span class="pl-k">=</span> t1).<span class="pl-sc">next</span>;</td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code js-file-line">  <span class="pl-k">return</span> then;</td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code js-file-line"><span class="pl-s">var</span> d3_timer_frame <span class="pl-k">=</span> <span class="pl-s3">window</span>.requestAnimationFrame</td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code js-file-line">    <span class="pl-k">||</span> <span class="pl-s3">window</span>.webkitRequestAnimationFrame</td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code js-file-line">    <span class="pl-k">||</span> <span class="pl-s3">window</span>.mozRequestAnimationFrame</td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code js-file-line">    <span class="pl-k">||</span> <span class="pl-s3">window</span>.oRequestAnimationFrame</td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code js-file-line">    <span class="pl-k">||</span> <span class="pl-s3">window</span>.msRequestAnimationFrame</td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code js-file-line">    <span class="pl-k">||</span> <span class="pl-st">function</span>(<span class="pl-vpf">callback</span>) { <span class="pl-s3">setTimeout</span>(callback, <span class="pl-c1">17</span>); };</td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code js-file-line"><span class="pl-s3">d3</span>.<span class="pl-en">transform</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">string</span>) {</td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code js-file-line">  <span class="pl-s">var</span> g <span class="pl-k">=</span> <span class="pl-s3">document</span>.createElementNS(d3.ns.<span class="pl-sc">prefix</span>.svg, <span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code js-file-line">      identity <span class="pl-k">=</span> {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">0</span>, c<span class="pl-k">:</span> <span class="pl-c1">0</span>, d<span class="pl-k">:</span> <span class="pl-c1">1</span>, e<span class="pl-k">:</span> <span class="pl-c1">0</span>, f<span class="pl-k">:</span> <span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code js-file-line">  <span class="pl-k">return</span> (<span class="pl-s3">d3</span>.<span class="pl-en">transform</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">string</span>) {</td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code js-file-line">    g.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, string);</td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code js-file-line">    <span class="pl-s">var</span> t <span class="pl-k">=</span> g.transform.baseVal.consolidate();</td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_transform</span>(t <span class="pl-k">?</span> t.matrix <span class="pl-k">:</span> identity);</td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code js-file-line">  })(string);</td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code js-file-line"><span class="pl-c">// Compute x-scale and normalize the first row.</span></td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code js-file-line"><span class="pl-c">// Compute shear and make second row orthogonal to first.</span></td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code js-file-line"><span class="pl-c">// Compute y-scale and normalize the second row.</span></td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code js-file-line"><span class="pl-c">// Finally, compute the rotation.</span></td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transform</span>(<span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code js-file-line">  <span class="pl-s">var</span> r0 <span class="pl-k">=</span> [m.a, m.b],</td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code js-file-line">      r1 <span class="pl-k">=</span> [m.c, m.d],</td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code js-file-line">      kx <span class="pl-k">=</span> d3_transformNormalize(r0),</td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code js-file-line">      kz <span class="pl-k">=</span> d3_transformDot(r0, r1),</td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code js-file-line">      ky <span class="pl-k">=</span> d3_transformNormalize(d3_transformCombine(r1, r0, <span class="pl-k">-</span>kz)) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code js-file-line">  <span class="pl-k">if</span> (r0[<span class="pl-c1">0</span>] <span class="pl-k">*</span> r1[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> r1[<span class="pl-c1">0</span>] <span class="pl-k">*</span> r0[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code js-file-line">    r0[<span class="pl-c1">0</span>] <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code js-file-line">    r0[<span class="pl-c1">1</span>] <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code js-file-line">    kx <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code js-file-line">    kz <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code js-file-line">  <span class="pl-v">this</span>.rotate <span class="pl-k">=</span> (kx <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">atan2</span>(r0[<span class="pl-c1">1</span>], r0[<span class="pl-c1">0</span>]) <span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">atan2</span>(<span class="pl-k">-</span>r1[<span class="pl-c1">0</span>], r1[<span class="pl-c1">1</span>])) <span class="pl-k">*</span> d3_transformDegrees;</td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code js-file-line">  <span class="pl-v">this</span>.translate <span class="pl-k">=</span> [m.e, m.f];</td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code js-file-line">  <span class="pl-v">this</span>.scale <span class="pl-k">=</span> [kx, ky];</td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code js-file-line">  <span class="pl-v">this</span>.skew <span class="pl-k">=</span> ky <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">atan2</span>(kz, ky) <span class="pl-k">*</span> d3_transformDegrees <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code js-file-line"><span class="pl-s3">d3_transform</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.translate</td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)rotate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.rotate</td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)skewX(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.skew</td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)scale(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.scale</td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transformDot</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code js-file-line">  <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">+</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transformNormalize</span>(<span class="pl-vpf">a</span>) {</td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code js-file-line">  <span class="pl-s">var</span> k <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(d3_transformDot(a, a));</td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code js-file-line">  <span class="pl-k">if</span> (k) {</td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code js-file-line">    a[<span class="pl-c1">0</span>] <span class="pl-k">/=</span> k;</td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code js-file-line">    a[<span class="pl-c1">1</span>] <span class="pl-k">/=</span> k;</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code js-file-line">  <span class="pl-k">return</span> k;</td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_transformCombine</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>, <span class="pl-vpf">k</span>) {</td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code js-file-line">  a[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> k <span class="pl-k">*</span> b[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code js-file-line">  a[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> k <span class="pl-k">*</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code js-file-line">  <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code js-file-line"><span class="pl-s">var</span> d3_transformDegrees <span class="pl-k">=</span> <span class="pl-c1">180</span> / <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>;</td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_noop</span>() {}</td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code js-file-line">d3.scale <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scaleExtent</span>(<span class="pl-vpf">domain</span>) {</td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code js-file-line">  <span class="pl-s">var</span> start <span class="pl-k">=</span> domain[<span class="pl-c1">0</span>], stop <span class="pl-k">=</span> domain[domain.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code js-file-line">  <span class="pl-k">return</span> start <span class="pl-k">&lt;</span> stop <span class="pl-k">?</span> [start, stop] <span class="pl-k">:</span> [stop, start];</td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scaleRange</span>(<span class="pl-vpf">scale</span>) {</td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code js-file-line">  <span class="pl-k">return</span> scale.rangeExtent <span class="pl-k">?</span> scale.rangeExtent() <span class="pl-k">:</span> d3_scaleExtent(scale.range());</td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_nice</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">nice</span>) {</td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code js-file-line">  <span class="pl-s">var</span> i0 <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code js-file-line">      i1 <span class="pl-k">=</span> domain.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code js-file-line">      x0 <span class="pl-k">=</span> domain[i0],</td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code js-file-line">      x1 <span class="pl-k">=</span> domain[i1],</td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code js-file-line">      dx;</td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code js-file-line">  <span class="pl-k">if</span> (x1 <span class="pl-k">&lt;</span> x0) {</td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code js-file-line">    dx <span class="pl-k">=</span> i0; i0 <span class="pl-k">=</span> i1; i1 <span class="pl-k">=</span> dx;</td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code js-file-line">    dx <span class="pl-k">=</span> x0; x0 <span class="pl-k">=</span> x1; x1 <span class="pl-k">=</span> dx;</td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code js-file-line">  <span class="pl-k">if</span> (dx <span class="pl-k">=</span> x1 <span class="pl-k">-</span> x0) {</td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code js-file-line">    nice <span class="pl-k">=</span> nice(dx);</td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code js-file-line">    domain[i0] <span class="pl-k">=</span> nice.<span class="pl-s3">floor</span>(x0);</td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code js-file-line">    domain[i1] <span class="pl-k">=</span> nice.<span class="pl-s3">ceil</span>(x1);</td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code js-file-line">  <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_niceDefault</span>() {</td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">Math</span>;</td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">linear</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_linear([<span class="pl-c1">0</span>, <span class="pl-c1">1</span>], [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>], d3.interpolate, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_linear</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">range</span>, <span class="pl-vpf">interpolate</span>, <span class="pl-vpf">clamp</span>) {</td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code js-file-line">  <span class="pl-s">var</span> output,</td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code js-file-line">      input;</td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code js-file-line">    <span class="pl-s">var</span> linear <span class="pl-k">=</span> domain.<span class="pl-sc">length</span> <span class="pl-k">==</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> d3_scale_bilinear <span class="pl-k">:</span> d3_scale_polylinear,</td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code js-file-line">        uninterpolate <span class="pl-k">=</span> clamp <span class="pl-k">?</span> d3_uninterpolateClamp <span class="pl-k">:</span> d3_uninterpolateNumber;</td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code js-file-line">    output <span class="pl-k">=</span> linear(domain, range, uninterpolate, interpolate);</td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code js-file-line">    input <span class="pl-k">=</span> linear(range, domain, uninterpolate, d3.interpolate);</td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">scale</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code js-file-line">    <span class="pl-k">return</span> output(x);</td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code js-file-line">  <span class="pl-c">// Note: requires range is coercible to number!</span></td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code js-file-line">    <span class="pl-k">return</span> input(y);</td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code js-file-line">    domain <span class="pl-k">=</span> x.map(<span class="pl-s3">Number</span>);</td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code js-file-line">    range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">rangeRound</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code js-file-line">    <span class="pl-k">return</span> scale.range(x).interpolate(d3.interpolateRound);</td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">clamp</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> clamp;</td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code js-file-line">    clamp <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code js-file-line">    interpolate <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_linearTicks(domain, m);</td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_linearTickFormat(domain, m);</td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code js-file-line">    d3_scale_nice(domain, d3_scale_linearNice);</td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_linear(domain, range, interpolate, clamp);</td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code js-file-line">  <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_linearRebind</span>(<span class="pl-vpf">scale</span>, <span class="pl-vpf">linear</span>) {</td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.rebind(scale, linear, <span class="pl-s1"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>rangeRound<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>interpolate<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>clamp<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_linearNice</span>(<span class="pl-vpf">dx</span>) {</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code js-file-line">  dx <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(dx) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code js-file-line">    <span class="pl-en">floor</span>: <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) { <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(x / dx) <span class="pl-k">*</span> dx; },</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code js-file-line">    <span class="pl-en">ceil</span>: <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) { <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">ceil</span>(x / dx) <span class="pl-k">*</span> dx; }</td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_linearTickRange</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code js-file-line">  <span class="pl-s">var</span> extent <span class="pl-k">=</span> d3_scaleExtent(domain),</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code js-file-line">      span <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>] <span class="pl-k">-</span> extent[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code js-file-line">      step <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(span / m) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>)),</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code js-file-line">      err <span class="pl-k">=</span> m / span <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code js-file-line">  <span class="pl-c">// Filter ticks to get closer to the desired count.</span></td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code js-file-line">  <span class="pl-k">if</span> (err <span class="pl-k">&lt;=</span> .<span class="pl-c1">15</span>) step <span class="pl-k">*=</span> <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code js-file-line">  <span class="pl-k">else</span> <span class="pl-k">if</span> (err <span class="pl-k">&lt;=</span> .<span class="pl-c1">35</span>) step <span class="pl-k">*=</span> <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code js-file-line">  <span class="pl-k">else</span> <span class="pl-k">if</span> (err <span class="pl-k">&lt;=</span> .<span class="pl-c1">75</span>) step <span class="pl-k">*=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code js-file-line">  <span class="pl-c">// Round start and stop values to step interval.</span></td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code js-file-line">  extent[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">ceil</span>(extent[<span class="pl-c1">0</span>] / step) <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code js-file-line">  extent[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(extent[<span class="pl-c1">1</span>] / step) <span class="pl-k">*</span> step <span class="pl-k">+</span> step <span class="pl-k">*</span> .<span class="pl-c1">5</span>; <span class="pl-c">// inclusive</span></td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code js-file-line">  extent[<span class="pl-c1">2</span>] <span class="pl-k">=</span> step;</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code js-file-line">  <span class="pl-k">return</span> extent;</td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_linearTicks</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.range.<span class="pl-s3">apply</span>(d3, d3_scale_linearTickRange(domain, m));</td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_linearTickFormat</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.format(<span class="pl-s1"><span class="pl-pds">&quot;</span>,.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(d3_scale_linearTickRange(domain, m)[<span class="pl-c1">2</span>]) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span> <span class="pl-k">+</span> .<span class="pl-c1">01</span>)) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_bilinear</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">range</span>, <span class="pl-vpf">uninterpolate</span>, <span class="pl-vpf">interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code js-file-line">  <span class="pl-s">var</span> u <span class="pl-k">=</span> uninterpolate(domain[<span class="pl-c1">0</span>], domain[<span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code js-file-line">      i <span class="pl-k">=</span> interpolate(range[<span class="pl-c1">0</span>], range[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code js-file-line">    <span class="pl-k">return</span> i(u(x));</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_polylinear</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">range</span>, <span class="pl-vpf">uninterpolate</span>, <span class="pl-vpf">interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code js-file-line">  <span class="pl-s">var</span> u <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code js-file-line">      i <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code js-file-line">      j <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code js-file-line">      k <span class="pl-k">=</span> domain.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code js-file-line">  <span class="pl-c">// Handle descending domains.</span></td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code js-file-line">  <span class="pl-k">if</span> (domain[k] <span class="pl-k">&lt;</span> domain[<span class="pl-c1">0</span>]) {</td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code js-file-line">    domain <span class="pl-k">=</span> domain.<span class="pl-s3">slice</span>().<span class="pl-s3">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code js-file-line">    range <span class="pl-k">=</span> range.<span class="pl-s3">slice</span>().<span class="pl-s3">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;=</span> k) {</td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code js-file-line">    u.<span class="pl-s3">push</span>(uninterpolate(domain[j <span class="pl-k">-</span> <span class="pl-c1">1</span>], domain[j]));</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code js-file-line">    i.<span class="pl-s3">push</span>(interpolate(range[j <span class="pl-k">-</span> <span class="pl-c1">1</span>], range[j]));</td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code js-file-line">    <span class="pl-s">var</span> j <span class="pl-k">=</span> d3.bisect(domain, x, <span class="pl-c1">1</span>, k) <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code js-file-line">    <span class="pl-k">return</span> i[j](u[j](x));</td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">log</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_log(d3.scale.linear(), d3_scale_logp);</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_log</span>(<span class="pl-vpf">linear</span>, <span class="pl-vpf">log</span>) {</td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code js-file-line">  <span class="pl-s">var</span> pow <span class="pl-k">=</span> log.pow;</td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">scale</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code js-file-line">    <span class="pl-k">return</span> linear(<span class="pl-s3">log</span>(x));</td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s3">pow</span>(linear.invert(x));</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> linear.<span class="pl-sc">domain</span>().map(pow);</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code js-file-line">    log <span class="pl-k">=</span> x[<span class="pl-c1">0</span>] <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> d3_scale_logn <span class="pl-k">:</span> d3_scale_logp;</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code js-file-line">    pow <span class="pl-k">=</span> log.pow;</td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code js-file-line">    linear.<span class="pl-sc">domain</span>(x.map(log));</td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code js-file-line">    linear.<span class="pl-sc">domain</span>(d3_scale_nice(linear.<span class="pl-sc">domain</span>(), d3_scale_niceDefault));</td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code js-file-line">    <span class="pl-s">var</span> extent <span class="pl-k">=</span> d3_scaleExtent(linear.<span class="pl-sc">domain</span>()),</td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code js-file-line">        ticks <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code js-file-line">    <span class="pl-k">if</span> (extent.every(isFinite)) {</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code js-file-line">      <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(extent[<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code js-file-line">          j <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">ceil</span>(extent[<span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code js-file-line">          u <span class="pl-k">=</span> <span class="pl-s3">pow</span>(extent[<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code js-file-line">          v <span class="pl-k">=</span> <span class="pl-s3">pow</span>(extent[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code js-file-line">      <span class="pl-k">if</span> (log <span class="pl-k">===</span> d3_scale_logn) {</td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code js-file-line">        ticks.<span class="pl-s3">push</span>(<span class="pl-s3">pow</span>(i));</td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code js-file-line">        <span class="pl-k">for</span> (; i<span class="pl-k">++</span> <span class="pl-k">&lt;</span> j;) <span class="pl-k">for</span> (<span class="pl-s">var</span> k <span class="pl-k">=</span> <span class="pl-c1">9</span>; k <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>; k<span class="pl-k">--</span>) ticks.<span class="pl-s3">push</span>(<span class="pl-s3">pow</span>(i) <span class="pl-k">*</span> k);</td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code js-file-line">        <span class="pl-k">for</span> (; i <span class="pl-k">&lt;</span> j; i<span class="pl-k">++</span>) <span class="pl-k">for</span> (<span class="pl-s">var</span> k <span class="pl-k">=</span> <span class="pl-c1">1</span>; k <span class="pl-k">&lt;</span> <span class="pl-c1">10</span>; k<span class="pl-k">++</span>) ticks.<span class="pl-s3">push</span>(<span class="pl-s3">pow</span>(i) <span class="pl-k">*</span> k);</td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code js-file-line">        ticks.<span class="pl-s3">push</span>(<span class="pl-s3">pow</span>(i));</td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; ticks[i] <span class="pl-k">&lt;</span> u; i<span class="pl-k">++</span>) {} <span class="pl-c">// strip small values</span></td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> ticks.<span class="pl-sc">length</span>; ticks[j <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> v; j<span class="pl-k">--</span>) {} <span class="pl-c">// strip big values</span></td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code js-file-line">      ticks <span class="pl-k">=</span> ticks.<span class="pl-s3">slice</span>(i, j);</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code js-file-line">    <span class="pl-k">return</span> ticks;</td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">n</span>, <span class="pl-vpf">format</span>) {</td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) format <span class="pl-k">=</span> d3_scale_logFormat;</td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> format;</td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code js-file-line">    <span class="pl-s">var</span> k <span class="pl-k">=</span> n / scale.ticks().<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code js-file-line">        f <span class="pl-k">=</span> log <span class="pl-k">===</span> d3_scale_logn <span class="pl-k">?</span> (e <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1e-12</span>, <span class="pl-s3">Math</span>.floor) <span class="pl-k">:</span> (e <span class="pl-k">=</span> <span class="pl-c1">1e-12</span>, <span class="pl-s3">Math</span>.ceil),</td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code js-file-line">        e;</td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code js-file-line">      <span class="pl-k">return</span> d / <span class="pl-s3">pow</span>(f(<span class="pl-s3">log</span>(d) <span class="pl-k">+</span> e)) <span class="pl-k">&lt;</span> k <span class="pl-k">?</span> format(d) <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_log(linear.copy(), log);</td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_linearRebind(scale, linear);</td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code js-file-line"><span class="pl-s">var</span> d3_scale_logFormat <span class="pl-k">=</span> d3.format(<span class="pl-s1"><span class="pl-pds">&quot;</span>.0e<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_logp</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">Math</span><span class="pl-s3">.log</span>(x <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> x) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>;</td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_logn</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-s3">Math</span><span class="pl-s3">.log</span>(x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-k">-</span>x) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN10</span>;</td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code js-file-line"><span class="pl-s3">d3_scale_logp</span>.<span class="pl-en">pow</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, x);</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code js-file-line"><span class="pl-s3">d3_scale_logn</span>.<span class="pl-en">pow</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>, <span class="pl-k">-</span>x);</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">pow</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_pow(d3.scale.linear(), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_pow</span>(<span class="pl-vpf">linear</span>, <span class="pl-vpf">exponent</span>) {</td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code js-file-line">  <span class="pl-s">var</span> powp <span class="pl-k">=</span> d3_scale_powPow(exponent),</td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code js-file-line">      powb <span class="pl-k">=</span> d3_scale_powPow(<span class="pl-c1">1</span> / exponent);</td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">scale</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code js-file-line">    <span class="pl-k">return</span> linear(powp(x));</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code js-file-line">    <span class="pl-k">return</span> powb(linear.invert(x));</td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> linear.<span class="pl-sc">domain</span>().map(powb);</td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code js-file-line">    linear.<span class="pl-sc">domain</span>(x.map(powp));</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_linearTicks(scale.<span class="pl-sc">domain</span>(), m);</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_linearTickFormat(scale.<span class="pl-sc">domain</span>(), m);</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code js-file-line">    <span class="pl-k">return</span> scale.<span class="pl-sc">domain</span>(d3_scale_nice(scale.<span class="pl-sc">domain</span>(), d3_scale_linearNice));</td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">exponent</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> exponent;</td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code js-file-line">    <span class="pl-s">var</span> domain <span class="pl-k">=</span> scale.<span class="pl-sc">domain</span>();</td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code js-file-line">    powp <span class="pl-k">=</span> d3_scale_powPow(exponent <span class="pl-k">=</span> x);</td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code js-file-line">    powb <span class="pl-k">=</span> d3_scale_powPow(<span class="pl-c1">1</span> / exponent);</td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code js-file-line">    <span class="pl-k">return</span> scale.<span class="pl-sc">domain</span>(domain);</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_pow(linear.copy(), exponent);</td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_linearRebind(scale, linear);</td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_powPow</span>(<span class="pl-vpf">e</span>) {</td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-k">-</span>x, e) <span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(x, e);</td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">sqrt</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.scale.<span class="pl-s3">pow</span>().exponent(.<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">ordinal</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_ordinal([], {t<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>, x<span class="pl-k">:</span> []});</td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_ordinal</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">ranger</span>) {</td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code js-file-line">  <span class="pl-s">var</span> index,</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code js-file-line">      range,</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code js-file-line">      rangeBand;</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">scale</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code js-file-line">    <span class="pl-k">return</span> range[((index[x] <span class="pl-k">||</span> (index[x] <span class="pl-k">=</span> domain.<span class="pl-s3">push</span>(x))) <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">%</span> range.<span class="pl-sc">length</span>];</td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">steps</span>(<span class="pl-vpf">start</span>, <span class="pl-vpf">step</span>) {</td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code js-file-line">    <span class="pl-k">return</span> d3.range(domain.<span class="pl-sc">length</span>).map(<span class="pl-st">function</span>(<span class="pl-vpf">i</span>) { <span class="pl-k">return</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> i; });</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code js-file-line">    domain <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code js-file-line">    index <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code js-file-line">    <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> x.<span class="pl-sc">length</span>, xi;</td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span>index[xi <span class="pl-k">=</span> x[i]]) index[xi] <span class="pl-k">=</span> domain.<span class="pl-s3">push</span>(xi);</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code js-file-line">    <span class="pl-k">return</span> scale[ranger.t](ranger.<span class="pl-sc">x</span>, ranger.p);</td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code js-file-line">    range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code js-file-line">    rangeBand <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code js-file-line">    ranger <span class="pl-k">=</span> {t<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>, x<span class="pl-k">:</span> x};</td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">rangePoints</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code js-file-line">    <span class="pl-s">var</span> start <span class="pl-k">=</span> x[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code js-file-line">        stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code js-file-line">        step <span class="pl-k">=</span> (stop <span class="pl-k">-</span> start) / (domain.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> padding);</td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code js-file-line">    range <span class="pl-k">=</span> steps(domain.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> (start <span class="pl-k">+</span> stop) / <span class="pl-c1">2</span> <span class="pl-k">:</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> padding / <span class="pl-c1">2</span>, step);</td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code js-file-line">    rangeBand <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code js-file-line">    ranger <span class="pl-k">=</span> {t<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>rangePoints<span class="pl-pds">&quot;</span></span>, x<span class="pl-k">:</span> x, p<span class="pl-k">:</span> padding};</td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">rangeBands</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code js-file-line">    <span class="pl-s">var</span> start <span class="pl-k">=</span> x[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code js-file-line">        stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code js-file-line">        step <span class="pl-k">=</span> (stop <span class="pl-k">-</span> start) / (domain.<span class="pl-sc">length</span> <span class="pl-k">+</span> padding);</td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code js-file-line">    range <span class="pl-k">=</span> steps(start <span class="pl-k">+</span> step <span class="pl-k">*</span> padding, step);</td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code js-file-line">    rangeBand <span class="pl-k">=</span> step <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> padding);</td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code js-file-line">    ranger <span class="pl-k">=</span> {t<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>rangeBands<span class="pl-pds">&quot;</span></span>, x<span class="pl-k">:</span> x, p<span class="pl-k">:</span> padding};</td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">rangeRoundBands</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code js-file-line">    <span class="pl-s">var</span> start <span class="pl-k">=</span> x[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code js-file-line">        stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code js-file-line">        step <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((stop <span class="pl-k">-</span> start) / (domain.<span class="pl-sc">length</span> <span class="pl-k">+</span> padding));</td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code js-file-line">    range <span class="pl-k">=</span> steps(start <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>((stop <span class="pl-k">-</span> start <span class="pl-k">-</span> (domain.<span class="pl-sc">length</span> <span class="pl-k">-</span> padding) <span class="pl-k">*</span> step) / <span class="pl-c1">2</span>), step);</td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code js-file-line">    rangeBand <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(step <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> padding));</td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code js-file-line">    ranger <span class="pl-k">=</span> {t<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>rangeRoundBands<span class="pl-pds">&quot;</span></span>, x<span class="pl-k">:</span> x, p<span class="pl-k">:</span> padding};</td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">rangeBand</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code js-file-line">    <span class="pl-k">return</span> rangeBand;</td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">rangeExtent</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code js-file-line">    <span class="pl-k">return</span> ranger.t <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> d3_scaleExtent(ranger.<span class="pl-sc">x</span>) <span class="pl-k">:</span> ranger.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_ordinal(domain, ranger);</td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code js-file-line">  <span class="pl-k">return</span> scale.<span class="pl-sc">domain</span>(domain);</td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code js-file-line"><span class="pl-c"> * This product includes color specifications and designs developed by Cynthia</span></td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code js-file-line"><span class="pl-c"> * Brewer (http://colorbrewer.org/). See lib/colorbrewer for more information.</span></td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">category10</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category10);</td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">category20</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category20);</td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">category20b</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category20b);</td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">category20c</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category20c);</td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code js-file-line"><span class="pl-s">var</span> d3_category10 <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#1f77b4<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff7f0e<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#2ca02c<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#d62728<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#9467bd<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#8c564b<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#e377c2<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#7f7f7f<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#bcbd22<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#17becf<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code js-file-line">];</td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code js-file-line"><span class="pl-s">var</span> d3_category20 <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#1f77b4<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#aec7e8<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff7f0e<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#ffbb78<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#2ca02c<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#98df8a<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#d62728<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#ff9896<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#9467bd<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#c5b0d5<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#8c564b<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#c49c94<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#e377c2<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#f7b6d2<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#7f7f7f<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#c7c7c7<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#bcbd22<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#dbdb8d<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#17becf<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#9edae5<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code js-file-line">];</td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code js-file-line"><span class="pl-s">var</span> d3_category20b <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#393b79<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#5254a3<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#6b6ecf<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#9c9ede<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#637939<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#8ca252<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#b5cf6b<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#cedb9c<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#8c6d31<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#bd9e39<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#e7ba52<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#e7cb94<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#843c39<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#ad494a<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#d6616b<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#e7969c<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#7b4173<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#a55194<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#ce6dbd<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#de9ed6<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code js-file-line">];</td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code js-file-line"><span class="pl-s">var</span> d3_category20c <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#3182bd<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#6baed6<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#9ecae1<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#c6dbef<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#e6550d<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#fd8d3c<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#fdae6b<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#fdd0a2<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#31a354<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#74c476<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#a1d99b<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#c7e9c0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#756bb1<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#9e9ac8<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#bcbddc<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#dadaeb<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>#636363<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#969696<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#bdbdbd<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>#d9d9d9<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code js-file-line">];</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">quantile</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_quantile([], []);</td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_quantile</span>(<span class="pl-vpf">domain</span>, <span class="pl-vpf">range</span>) {</td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code js-file-line">  <span class="pl-s">var</span> thresholds;</td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code js-file-line">    <span class="pl-s">var</span> k <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code js-file-line">        n <span class="pl-k">=</span> domain.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code js-file-line">        q <span class="pl-k">=</span> range.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code js-file-line">    thresholds <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>k <span class="pl-k">&lt;</span> q) thresholds[k <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> d3.quantile(domain, k / q);</td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">scale</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-s3">isNaN</span>(x <span class="pl-k">=</span> <span class="pl-k">+</span>x)) <span class="pl-k">return</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code js-file-line">    <span class="pl-k">return</span> range[d3.bisect(thresholds, x)];</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code js-file-line">    domain <span class="pl-k">=</span> x.filter(<span class="pl-st">function</span>(<span class="pl-vpf">d</span>) { <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-s3">isNaN</span>(d); }).<span class="pl-s3">sort</span>(d3.ascending);</td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code js-file-line">    range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">quantiles</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code js-file-line">    <span class="pl-k">return</span> thresholds;</td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_quantile(domain, range); <span class="pl-c">// copy on write!</span></td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code js-file-line">  <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code js-file-line"><span class="pl-s3">d3.scale</span>.<span class="pl-en">quantize</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_scale_quantize(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_scale_quantize</span>(<span class="pl-vpf">x0</span>, <span class="pl-vpf">x1</span>, <span class="pl-vpf">range</span>) {</td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code js-file-line">  <span class="pl-s">var</span> kx, i;</td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">scale</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code js-file-line">    <span class="pl-k">return</span> range[<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(i, <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(kx <span class="pl-k">*</span> (x <span class="pl-k">-</span> x0))))];</td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code js-file-line">    kx <span class="pl-k">=</span> range.<span class="pl-sc">length</span> / (x1 <span class="pl-k">-</span> x0);</td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code js-file-line">    i <span class="pl-k">=</span> range.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> [x0, x1];</td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code js-file-line">    x0 <span class="pl-k">=</span> <span class="pl-k">+</span>x[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code js-file-line">    x1 <span class="pl-k">=</span> <span class="pl-k">+</span>x[x.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2905" class="blob-num js-line-number" data-line-number="2905"></td>
        <td id="LC2905" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2906" class="blob-num js-line-number" data-line-number="2906"></td>
        <td id="LC2906" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2907" class="blob-num js-line-number" data-line-number="2907"></td>
        <td id="LC2907" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2908" class="blob-num js-line-number" data-line-number="2908"></td>
        <td id="LC2908" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L2909" class="blob-num js-line-number" data-line-number="2909"></td>
        <td id="LC2909" class="blob-code js-file-line">    range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L2910" class="blob-num js-line-number" data-line-number="2910"></td>
        <td id="LC2910" class="blob-code js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2911" class="blob-num js-line-number" data-line-number="2911"></td>
        <td id="LC2911" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2912" class="blob-num js-line-number" data-line-number="2912"></td>
        <td id="LC2912" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2913" class="blob-num js-line-number" data-line-number="2913"></td>
        <td id="LC2913" class="blob-code js-file-line">  <span class="pl-s3">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2914" class="blob-num js-line-number" data-line-number="2914"></td>
        <td id="LC2914" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_scale_quantize(x0, x1, range); <span class="pl-c">// copy on write</span></td>
      </tr>
      <tr>
        <td id="L2915" class="blob-num js-line-number" data-line-number="2915"></td>
        <td id="LC2915" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2916" class="blob-num js-line-number" data-line-number="2916"></td>
        <td id="LC2916" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2917" class="blob-num js-line-number" data-line-number="2917"></td>
        <td id="LC2917" class="blob-code js-file-line">  <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L2918" class="blob-num js-line-number" data-line-number="2918"></td>
        <td id="LC2918" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2919" class="blob-num js-line-number" data-line-number="2919"></td>
        <td id="LC2919" class="blob-code js-file-line">d3.svg <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2920" class="blob-num js-line-number" data-line-number="2920"></td>
        <td id="LC2920" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">arc</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2921" class="blob-num js-line-number" data-line-number="2921"></td>
        <td id="LC2921" class="blob-code js-file-line">  <span class="pl-s">var</span> innerRadius <span class="pl-k">=</span> d3_svg_arcInnerRadius,</td>
      </tr>
      <tr>
        <td id="L2922" class="blob-num js-line-number" data-line-number="2922"></td>
        <td id="LC2922" class="blob-code js-file-line">      outerRadius <span class="pl-k">=</span> d3_svg_arcOuterRadius,</td>
      </tr>
      <tr>
        <td id="L2923" class="blob-num js-line-number" data-line-number="2923"></td>
        <td id="LC2923" class="blob-code js-file-line">      startAngle <span class="pl-k">=</span> d3_svg_arcStartAngle,</td>
      </tr>
      <tr>
        <td id="L2924" class="blob-num js-line-number" data-line-number="2924"></td>
        <td id="LC2924" class="blob-code js-file-line">      endAngle <span class="pl-k">=</span> d3_svg_arcEndAngle;</td>
      </tr>
      <tr>
        <td id="L2925" class="blob-num js-line-number" data-line-number="2925"></td>
        <td id="LC2925" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2926" class="blob-num js-line-number" data-line-number="2926"></td>
        <td id="LC2926" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">arc</span>() {</td>
      </tr>
      <tr>
        <td id="L2927" class="blob-num js-line-number" data-line-number="2927"></td>
        <td id="LC2927" class="blob-code js-file-line">    <span class="pl-s">var</span> r0 <span class="pl-k">=</span> innerRadius.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments),</td>
      </tr>
      <tr>
        <td id="L2928" class="blob-num js-line-number" data-line-number="2928"></td>
        <td id="LC2928" class="blob-code js-file-line">        r1 <span class="pl-k">=</span> outerRadius.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments),</td>
      </tr>
      <tr>
        <td id="L2929" class="blob-num js-line-number" data-line-number="2929"></td>
        <td id="LC2929" class="blob-code js-file-line">        a0 <span class="pl-k">=</span> startAngle.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">+</span> d3_svg_arcOffset,</td>
      </tr>
      <tr>
        <td id="L2930" class="blob-num js-line-number" data-line-number="2930"></td>
        <td id="LC2930" class="blob-code js-file-line">        a1 <span class="pl-k">=</span> endAngle.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">+</span> d3_svg_arcOffset,</td>
      </tr>
      <tr>
        <td id="L2931" class="blob-num js-line-number" data-line-number="2931"></td>
        <td id="LC2931" class="blob-code js-file-line">        da <span class="pl-k">=</span> (a1 <span class="pl-k">&lt;</span> a0 <span class="pl-k">&amp;&amp;</span> (da <span class="pl-k">=</span> a0, a0 <span class="pl-k">=</span> a1, a1 <span class="pl-k">=</span> da), a1 <span class="pl-k">-</span> a0),</td>
      </tr>
      <tr>
        <td id="L2932" class="blob-num js-line-number" data-line-number="2932"></td>
        <td id="LC2932" class="blob-code js-file-line">        df <span class="pl-k">=</span> da <span class="pl-k">&lt;</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span> <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2933" class="blob-num js-line-number" data-line-number="2933"></td>
        <td id="LC2933" class="blob-code js-file-line">        c0 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a0),</td>
      </tr>
      <tr>
        <td id="L2934" class="blob-num js-line-number" data-line-number="2934"></td>
        <td id="LC2934" class="blob-code js-file-line">        s0 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a0),</td>
      </tr>
      <tr>
        <td id="L2935" class="blob-num js-line-number" data-line-number="2935"></td>
        <td id="LC2935" class="blob-code js-file-line">        c1 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a1),</td>
      </tr>
      <tr>
        <td id="L2936" class="blob-num js-line-number" data-line-number="2936"></td>
        <td id="LC2936" class="blob-code js-file-line">        s1 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a1);</td>
      </tr>
      <tr>
        <td id="L2937" class="blob-num js-line-number" data-line-number="2937"></td>
        <td id="LC2937" class="blob-code js-file-line">    <span class="pl-k">return</span> da <span class="pl-k">&gt;=</span> d3_svg_arcMax</td>
      </tr>
      <tr>
        <td id="L2938" class="blob-num js-line-number" data-line-number="2938"></td>
        <td id="LC2938" class="blob-code js-file-line">      <span class="pl-k">?</span> (r0</td>
      </tr>
      <tr>
        <td id="L2939" class="blob-num js-line-number" data-line-number="2939"></td>
        <td id="LC2939" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1</td>
      </tr>
      <tr>
        <td id="L2940" class="blob-num js-line-number" data-line-number="2940"></td>
        <td id="LC2940" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (<span class="pl-k">-</span>r1)</td>
      </tr>
      <tr>
        <td id="L2941" class="blob-num js-line-number" data-line-number="2941"></td>
        <td id="LC2941" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1</td>
      </tr>
      <tr>
        <td id="L2942" class="blob-num js-line-number" data-line-number="2942"></td>
        <td id="LC2942" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0</td>
      </tr>
      <tr>
        <td id="L2943" class="blob-num js-line-number" data-line-number="2943"></td>
        <td id="LC2943" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,0 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (<span class="pl-k">-</span>r0)</td>
      </tr>
      <tr>
        <td id="L2944" class="blob-num js-line-number" data-line-number="2944"></td>
        <td id="LC2944" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,0 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0</td>
      </tr>
      <tr>
        <td id="L2945" class="blob-num js-line-number" data-line-number="2945"></td>
        <td id="LC2945" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2946" class="blob-num js-line-number" data-line-number="2946"></td>
        <td id="LC2946" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1</td>
      </tr>
      <tr>
        <td id="L2947" class="blob-num js-line-number" data-line-number="2947"></td>
        <td id="LC2947" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (<span class="pl-k">-</span>r1)</td>
      </tr>
      <tr>
        <td id="L2948" class="blob-num js-line-number" data-line-number="2948"></td>
        <td id="LC2948" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1</td>
      </tr>
      <tr>
        <td id="L2949" class="blob-num js-line-number" data-line-number="2949"></td>
        <td id="LC2949" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2950" class="blob-num js-line-number" data-line-number="2950"></td>
        <td id="LC2950" class="blob-code js-file-line">      <span class="pl-k">:</span> (r0</td>
      </tr>
      <tr>
        <td id="L2951" class="blob-num js-line-number" data-line-number="2951"></td>
        <td id="LC2951" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> c0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> s0</td>
      </tr>
      <tr>
        <td id="L2952" class="blob-num js-line-number" data-line-number="2952"></td>
        <td id="LC2952" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> df <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,1 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> c1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> s1</td>
      </tr>
      <tr>
        <td id="L2953" class="blob-num js-line-number" data-line-number="2953"></td>
        <td id="LC2953" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">*</span> c1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">*</span> s1</td>
      </tr>
      <tr>
        <td id="L2954" class="blob-num js-line-number" data-line-number="2954"></td>
        <td id="LC2954" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> df <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">*</span> c0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r0 <span class="pl-k">*</span> s0</td>
      </tr>
      <tr>
        <td id="L2955" class="blob-num js-line-number" data-line-number="2955"></td>
        <td id="LC2955" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2956" class="blob-num js-line-number" data-line-number="2956"></td>
        <td id="LC2956" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> c0 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> s0</td>
      </tr>
      <tr>
        <td id="L2957" class="blob-num js-line-number" data-line-number="2957"></td>
        <td id="LC2957" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> df <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,1 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> c1 <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">*</span> s1</td>
      </tr>
      <tr>
        <td id="L2958" class="blob-num js-line-number" data-line-number="2958"></td>
        <td id="LC2958" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L0,0<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2959" class="blob-num js-line-number" data-line-number="2959"></td>
        <td id="LC2959" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2960" class="blob-num js-line-number" data-line-number="2960"></td>
        <td id="LC2960" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2961" class="blob-num js-line-number" data-line-number="2961"></td>
        <td id="LC2961" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2962" class="blob-num js-line-number" data-line-number="2962"></td>
        <td id="LC2962" class="blob-code js-file-line">  <span class="pl-s3">arc</span>.<span class="pl-en">innerRadius</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L2963" class="blob-num js-line-number" data-line-number="2963"></td>
        <td id="LC2963" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> innerRadius;</td>
      </tr>
      <tr>
        <td id="L2964" class="blob-num js-line-number" data-line-number="2964"></td>
        <td id="LC2964" class="blob-code js-file-line">    innerRadius <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L2965" class="blob-num js-line-number" data-line-number="2965"></td>
        <td id="LC2965" class="blob-code js-file-line">    <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L2966" class="blob-num js-line-number" data-line-number="2966"></td>
        <td id="LC2966" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2967" class="blob-num js-line-number" data-line-number="2967"></td>
        <td id="LC2967" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2968" class="blob-num js-line-number" data-line-number="2968"></td>
        <td id="LC2968" class="blob-code js-file-line">  <span class="pl-s3">arc</span>.<span class="pl-en">outerRadius</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L2969" class="blob-num js-line-number" data-line-number="2969"></td>
        <td id="LC2969" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> outerRadius;</td>
      </tr>
      <tr>
        <td id="L2970" class="blob-num js-line-number" data-line-number="2970"></td>
        <td id="LC2970" class="blob-code js-file-line">    outerRadius <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L2971" class="blob-num js-line-number" data-line-number="2971"></td>
        <td id="LC2971" class="blob-code js-file-line">    <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L2972" class="blob-num js-line-number" data-line-number="2972"></td>
        <td id="LC2972" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2973" class="blob-num js-line-number" data-line-number="2973"></td>
        <td id="LC2973" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2974" class="blob-num js-line-number" data-line-number="2974"></td>
        <td id="LC2974" class="blob-code js-file-line">  <span class="pl-s3">arc</span>.<span class="pl-en">startAngle</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L2975" class="blob-num js-line-number" data-line-number="2975"></td>
        <td id="LC2975" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> startAngle;</td>
      </tr>
      <tr>
        <td id="L2976" class="blob-num js-line-number" data-line-number="2976"></td>
        <td id="LC2976" class="blob-code js-file-line">    startAngle <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L2977" class="blob-num js-line-number" data-line-number="2977"></td>
        <td id="LC2977" class="blob-code js-file-line">    <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L2978" class="blob-num js-line-number" data-line-number="2978"></td>
        <td id="LC2978" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2979" class="blob-num js-line-number" data-line-number="2979"></td>
        <td id="LC2979" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2980" class="blob-num js-line-number" data-line-number="2980"></td>
        <td id="LC2980" class="blob-code js-file-line">  <span class="pl-s3">arc</span>.<span class="pl-en">endAngle</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L2981" class="blob-num js-line-number" data-line-number="2981"></td>
        <td id="LC2981" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> endAngle;</td>
      </tr>
      <tr>
        <td id="L2982" class="blob-num js-line-number" data-line-number="2982"></td>
        <td id="LC2982" class="blob-code js-file-line">    endAngle <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L2983" class="blob-num js-line-number" data-line-number="2983"></td>
        <td id="LC2983" class="blob-code js-file-line">    <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L2984" class="blob-num js-line-number" data-line-number="2984"></td>
        <td id="LC2984" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2985" class="blob-num js-line-number" data-line-number="2985"></td>
        <td id="LC2985" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2986" class="blob-num js-line-number" data-line-number="2986"></td>
        <td id="LC2986" class="blob-code js-file-line">  <span class="pl-s3">arc</span>.<span class="pl-en">centroid</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2987" class="blob-num js-line-number" data-line-number="2987"></td>
        <td id="LC2987" class="blob-code js-file-line">    <span class="pl-s">var</span> r <span class="pl-k">=</span> (innerRadius.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments)</td>
      </tr>
      <tr>
        <td id="L2988" class="blob-num js-line-number" data-line-number="2988"></td>
        <td id="LC2988" class="blob-code js-file-line">        <span class="pl-k">+</span> outerRadius.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments)) / <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L2989" class="blob-num js-line-number" data-line-number="2989"></td>
        <td id="LC2989" class="blob-code js-file-line">        a <span class="pl-k">=</span> (startAngle.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments)</td>
      </tr>
      <tr>
        <td id="L2990" class="blob-num js-line-number" data-line-number="2990"></td>
        <td id="LC2990" class="blob-code js-file-line">        <span class="pl-k">+</span> endAngle.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments)) / <span class="pl-c1">2</span> <span class="pl-k">+</span> d3_svg_arcOffset;</td>
      </tr>
      <tr>
        <td id="L2991" class="blob-num js-line-number" data-line-number="2991"></td>
        <td id="LC2991" class="blob-code js-file-line">    <span class="pl-k">return</span> [<span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a) <span class="pl-k">*</span> r, <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a) <span class="pl-k">*</span> r];</td>
      </tr>
      <tr>
        <td id="L2992" class="blob-num js-line-number" data-line-number="2992"></td>
        <td id="LC2992" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2993" class="blob-num js-line-number" data-line-number="2993"></td>
        <td id="LC2993" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2994" class="blob-num js-line-number" data-line-number="2994"></td>
        <td id="LC2994" class="blob-code js-file-line">  <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L2995" class="blob-num js-line-number" data-line-number="2995"></td>
        <td id="LC2995" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2996" class="blob-num js-line-number" data-line-number="2996"></td>
        <td id="LC2996" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2997" class="blob-num js-line-number" data-line-number="2997"></td>
        <td id="LC2997" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_arcOffset <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span> / <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L2998" class="blob-num js-line-number" data-line-number="2998"></td>
        <td id="LC2998" class="blob-code js-file-line">    d3_svg_arcMax <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span> <span class="pl-k">-</span> <span class="pl-c1">1e-6</span>;</td>
      </tr>
      <tr>
        <td id="L2999" class="blob-num js-line-number" data-line-number="2999"></td>
        <td id="LC2999" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3000" class="blob-num js-line-number" data-line-number="3000"></td>
        <td id="LC3000" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_arcInnerRadius</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3001" class="blob-num js-line-number" data-line-number="3001"></td>
        <td id="LC3001" class="blob-code js-file-line">  <span class="pl-k">return</span> d.innerRadius;</td>
      </tr>
      <tr>
        <td id="L3002" class="blob-num js-line-number" data-line-number="3002"></td>
        <td id="LC3002" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3003" class="blob-num js-line-number" data-line-number="3003"></td>
        <td id="LC3003" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3004" class="blob-num js-line-number" data-line-number="3004"></td>
        <td id="LC3004" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_arcOuterRadius</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3005" class="blob-num js-line-number" data-line-number="3005"></td>
        <td id="LC3005" class="blob-code js-file-line">  <span class="pl-k">return</span> d.outerRadius;</td>
      </tr>
      <tr>
        <td id="L3006" class="blob-num js-line-number" data-line-number="3006"></td>
        <td id="LC3006" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3007" class="blob-num js-line-number" data-line-number="3007"></td>
        <td id="LC3007" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3008" class="blob-num js-line-number" data-line-number="3008"></td>
        <td id="LC3008" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_arcStartAngle</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3009" class="blob-num js-line-number" data-line-number="3009"></td>
        <td id="LC3009" class="blob-code js-file-line">  <span class="pl-k">return</span> d.startAngle;</td>
      </tr>
      <tr>
        <td id="L3010" class="blob-num js-line-number" data-line-number="3010"></td>
        <td id="LC3010" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3011" class="blob-num js-line-number" data-line-number="3011"></td>
        <td id="LC3011" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3012" class="blob-num js-line-number" data-line-number="3012"></td>
        <td id="LC3012" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_arcEndAngle</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3013" class="blob-num js-line-number" data-line-number="3013"></td>
        <td id="LC3013" class="blob-code js-file-line">  <span class="pl-k">return</span> d.endAngle;</td>
      </tr>
      <tr>
        <td id="L3014" class="blob-num js-line-number" data-line-number="3014"></td>
        <td id="LC3014" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3015" class="blob-num js-line-number" data-line-number="3015"></td>
        <td id="LC3015" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_line</span>(<span class="pl-vpf">projection</span>) {</td>
      </tr>
      <tr>
        <td id="L3016" class="blob-num js-line-number" data-line-number="3016"></td>
        <td id="LC3016" class="blob-code js-file-line">  <span class="pl-s">var</span> x <span class="pl-k">=</span> d3_svg_lineX,</td>
      </tr>
      <tr>
        <td id="L3017" class="blob-num js-line-number" data-line-number="3017"></td>
        <td id="LC3017" class="blob-code js-file-line">      y <span class="pl-k">=</span> d3_svg_lineY,</td>
      </tr>
      <tr>
        <td id="L3018" class="blob-num js-line-number" data-line-number="3018"></td>
        <td id="LC3018" class="blob-code js-file-line">      interpolate <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3019" class="blob-num js-line-number" data-line-number="3019"></td>
        <td id="LC3019" class="blob-code js-file-line">      interpolator <span class="pl-k">=</span> d3_svg_lineInterpolators[interpolate],</td>
      </tr>
      <tr>
        <td id="L3020" class="blob-num js-line-number" data-line-number="3020"></td>
        <td id="LC3020" class="blob-code js-file-line">      tension <span class="pl-k">=</span> .<span class="pl-c1">7</span>;</td>
      </tr>
      <tr>
        <td id="L3021" class="blob-num js-line-number" data-line-number="3021"></td>
        <td id="LC3021" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3022" class="blob-num js-line-number" data-line-number="3022"></td>
        <td id="LC3022" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">line</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3023" class="blob-num js-line-number" data-line-number="3023"></td>
        <td id="LC3023" class="blob-code js-file-line">    <span class="pl-k">return</span> d.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> null <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> interpolator(projection(d3_svg_linePoints(<span class="pl-v">this</span>, d, x, y)), tension);</td>
      </tr>
      <tr>
        <td id="L3024" class="blob-num js-line-number" data-line-number="3024"></td>
        <td id="LC3024" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3025" class="blob-num js-line-number" data-line-number="3025"></td>
        <td id="LC3025" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3026" class="blob-num js-line-number" data-line-number="3026"></td>
        <td id="LC3026" class="blob-code js-file-line">  <span class="pl-s3">line</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3027" class="blob-num js-line-number" data-line-number="3027"></td>
        <td id="LC3027" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L3028" class="blob-num js-line-number" data-line-number="3028"></td>
        <td id="LC3028" class="blob-code js-file-line">    x <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L3029" class="blob-num js-line-number" data-line-number="3029"></td>
        <td id="LC3029" class="blob-code js-file-line">    <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3030" class="blob-num js-line-number" data-line-number="3030"></td>
        <td id="LC3030" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3031" class="blob-num js-line-number" data-line-number="3031"></td>
        <td id="LC3031" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3032" class="blob-num js-line-number" data-line-number="3032"></td>
        <td id="LC3032" class="blob-code js-file-line">  <span class="pl-s3">line</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3033" class="blob-num js-line-number" data-line-number="3033"></td>
        <td id="LC3033" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> y;</td>
      </tr>
      <tr>
        <td id="L3034" class="blob-num js-line-number" data-line-number="3034"></td>
        <td id="LC3034" class="blob-code js-file-line">    y <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L3035" class="blob-num js-line-number" data-line-number="3035"></td>
        <td id="LC3035" class="blob-code js-file-line">    <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3036" class="blob-num js-line-number" data-line-number="3036"></td>
        <td id="LC3036" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3037" class="blob-num js-line-number" data-line-number="3037"></td>
        <td id="LC3037" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3038" class="blob-num js-line-number" data-line-number="3038"></td>
        <td id="LC3038" class="blob-code js-file-line">  <span class="pl-s3">line</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3039" class="blob-num js-line-number" data-line-number="3039"></td>
        <td id="LC3039" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L3040" class="blob-num js-line-number" data-line-number="3040"></td>
        <td id="LC3040" class="blob-code js-file-line">    interpolator <span class="pl-k">=</span> d3_svg_lineInterpolators[interpolate <span class="pl-k">=</span> v];</td>
      </tr>
      <tr>
        <td id="L3041" class="blob-num js-line-number" data-line-number="3041"></td>
        <td id="LC3041" class="blob-code js-file-line">    <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3042" class="blob-num js-line-number" data-line-number="3042"></td>
        <td id="LC3042" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3043" class="blob-num js-line-number" data-line-number="3043"></td>
        <td id="LC3043" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3044" class="blob-num js-line-number" data-line-number="3044"></td>
        <td id="LC3044" class="blob-code js-file-line">  <span class="pl-s3">line</span>.<span class="pl-en">tension</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3045" class="blob-num js-line-number" data-line-number="3045"></td>
        <td id="LC3045" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tension;</td>
      </tr>
      <tr>
        <td id="L3046" class="blob-num js-line-number" data-line-number="3046"></td>
        <td id="LC3046" class="blob-code js-file-line">    tension <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L3047" class="blob-num js-line-number" data-line-number="3047"></td>
        <td id="LC3047" class="blob-code js-file-line">    <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3048" class="blob-num js-line-number" data-line-number="3048"></td>
        <td id="LC3048" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3049" class="blob-num js-line-number" data-line-number="3049"></td>
        <td id="LC3049" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3050" class="blob-num js-line-number" data-line-number="3050"></td>
        <td id="LC3050" class="blob-code js-file-line">  <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3051" class="blob-num js-line-number" data-line-number="3051"></td>
        <td id="LC3051" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3052" class="blob-num js-line-number" data-line-number="3052"></td>
        <td id="LC3052" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3053" class="blob-num js-line-number" data-line-number="3053"></td>
        <td id="LC3053" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">line</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3054" class="blob-num js-line-number" data-line-number="3054"></td>
        <td id="LC3054" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_svg_line(<span class="pl-s3">Object</span>);</td>
      </tr>
      <tr>
        <td id="L3055" class="blob-num js-line-number" data-line-number="3055"></td>
        <td id="LC3055" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3056" class="blob-num js-line-number" data-line-number="3056"></td>
        <td id="LC3056" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3057" class="blob-num js-line-number" data-line-number="3057"></td>
        <td id="LC3057" class="blob-code js-file-line"><span class="pl-c">// Converts the specified array of data into an array of points</span></td>
      </tr>
      <tr>
        <td id="L3058" class="blob-num js-line-number" data-line-number="3058"></td>
        <td id="LC3058" class="blob-code js-file-line"><span class="pl-c">// (x-y tuples), by evaluating the specified `x` and `y` functions on each</span></td>
      </tr>
      <tr>
        <td id="L3059" class="blob-num js-line-number" data-line-number="3059"></td>
        <td id="LC3059" class="blob-code js-file-line"><span class="pl-c">// data point. The `this` context of the evaluated functions is the specified</span></td>
      </tr>
      <tr>
        <td id="L3060" class="blob-num js-line-number" data-line-number="3060"></td>
        <td id="LC3060" class="blob-code js-file-line"><span class="pl-c">// &quot;self&quot; object; each function is passed the current datum and index.</span></td>
      </tr>
      <tr>
        <td id="L3061" class="blob-num js-line-number" data-line-number="3061"></td>
        <td id="LC3061" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_linePoints</span>(<span class="pl-vpf">self</span>, <span class="pl-vpf">d</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3062" class="blob-num js-line-number" data-line-number="3062"></td>
        <td id="LC3062" class="blob-code js-file-line">  <span class="pl-s">var</span> points <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3063" class="blob-num js-line-number" data-line-number="3063"></td>
        <td id="LC3063" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3064" class="blob-num js-line-number" data-line-number="3064"></td>
        <td id="LC3064" class="blob-code js-file-line">      n <span class="pl-k">=</span> d.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3065" class="blob-num js-line-number" data-line-number="3065"></td>
        <td id="LC3065" class="blob-code js-file-line">      fx <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3066" class="blob-num js-line-number" data-line-number="3066"></td>
        <td id="LC3066" class="blob-code js-file-line">      fy <span class="pl-k">=</span> <span class="pl-k">typeof</span> y <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3067" class="blob-num js-line-number" data-line-number="3067"></td>
        <td id="LC3067" class="blob-code js-file-line">      value;</td>
      </tr>
      <tr>
        <td id="L3068" class="blob-num js-line-number" data-line-number="3068"></td>
        <td id="LC3068" class="blob-code js-file-line">  <span class="pl-k">if</span> (fx <span class="pl-k">&amp;&amp;</span> fy) {</td>
      </tr>
      <tr>
        <td id="L3069" class="blob-num js-line-number" data-line-number="3069"></td>
        <td id="LC3069" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) points.<span class="pl-s3">push</span>([</td>
      </tr>
      <tr>
        <td id="L3070" class="blob-num js-line-number" data-line-number="3070"></td>
        <td id="LC3070" class="blob-code js-file-line">      x.<span class="pl-s3">call</span>(self, value <span class="pl-k">=</span> d[i], i),</td>
      </tr>
      <tr>
        <td id="L3071" class="blob-num js-line-number" data-line-number="3071"></td>
        <td id="LC3071" class="blob-code js-file-line">      y.<span class="pl-s3">call</span>(self, value, i)</td>
      </tr>
      <tr>
        <td id="L3072" class="blob-num js-line-number" data-line-number="3072"></td>
        <td id="LC3072" class="blob-code js-file-line">    ]);</td>
      </tr>
      <tr>
        <td id="L3073" class="blob-num js-line-number" data-line-number="3073"></td>
        <td id="LC3073" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (fx) {</td>
      </tr>
      <tr>
        <td id="L3074" class="blob-num js-line-number" data-line-number="3074"></td>
        <td id="LC3074" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) points.<span class="pl-s3">push</span>([x.<span class="pl-s3">call</span>(self, d[i], i), y]);</td>
      </tr>
      <tr>
        <td id="L3075" class="blob-num js-line-number" data-line-number="3075"></td>
        <td id="LC3075" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (fy) {</td>
      </tr>
      <tr>
        <td id="L3076" class="blob-num js-line-number" data-line-number="3076"></td>
        <td id="LC3076" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) points.<span class="pl-s3">push</span>([x, y.<span class="pl-s3">call</span>(self, d[i], i)]);</td>
      </tr>
      <tr>
        <td id="L3077" class="blob-num js-line-number" data-line-number="3077"></td>
        <td id="LC3077" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3078" class="blob-num js-line-number" data-line-number="3078"></td>
        <td id="LC3078" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) points.<span class="pl-s3">push</span>([x, y]);</td>
      </tr>
      <tr>
        <td id="L3079" class="blob-num js-line-number" data-line-number="3079"></td>
        <td id="LC3079" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3080" class="blob-num js-line-number" data-line-number="3080"></td>
        <td id="LC3080" class="blob-code js-file-line">  <span class="pl-k">return</span> points;</td>
      </tr>
      <tr>
        <td id="L3081" class="blob-num js-line-number" data-line-number="3081"></td>
        <td id="LC3081" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3082" class="blob-num js-line-number" data-line-number="3082"></td>
        <td id="LC3082" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3083" class="blob-num js-line-number" data-line-number="3083"></td>
        <td id="LC3083" class="blob-code js-file-line"><span class="pl-c">// The default `x` property, which references d[0].</span></td>
      </tr>
      <tr>
        <td id="L3084" class="blob-num js-line-number" data-line-number="3084"></td>
        <td id="LC3084" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineX</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3085" class="blob-num js-line-number" data-line-number="3085"></td>
        <td id="LC3085" class="blob-code js-file-line">  <span class="pl-k">return</span> d[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3086" class="blob-num js-line-number" data-line-number="3086"></td>
        <td id="LC3086" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3087" class="blob-num js-line-number" data-line-number="3087"></td>
        <td id="LC3087" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3088" class="blob-num js-line-number" data-line-number="3088"></td>
        <td id="LC3088" class="blob-code js-file-line"><span class="pl-c">// The default `y` property, which references d[1].</span></td>
      </tr>
      <tr>
        <td id="L3089" class="blob-num js-line-number" data-line-number="3089"></td>
        <td id="LC3089" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineY</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3090" class="blob-num js-line-number" data-line-number="3090"></td>
        <td id="LC3090" class="blob-code js-file-line">  <span class="pl-k">return</span> d[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3091" class="blob-num js-line-number" data-line-number="3091"></td>
        <td id="LC3091" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3092" class="blob-num js-line-number" data-line-number="3092"></td>
        <td id="LC3092" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3093" class="blob-num js-line-number" data-line-number="3093"></td>
        <td id="LC3093" class="blob-code js-file-line"><span class="pl-c">// The various interpolators supported by the `line` class.</span></td>
      </tr>
      <tr>
        <td id="L3094" class="blob-num js-line-number" data-line-number="3094"></td>
        <td id="LC3094" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_lineInterpolators <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3095" class="blob-num js-line-number" data-line-number="3095"></td>
        <td id="LC3095" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineLinear,</td>
      </tr>
      <tr>
        <td id="L3096" class="blob-num js-line-number" data-line-number="3096"></td>
        <td id="LC3096" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>step-before<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineStepBefore,</td>
      </tr>
      <tr>
        <td id="L3097" class="blob-num js-line-number" data-line-number="3097"></td>
        <td id="LC3097" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>step-after<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineStepAfter,</td>
      </tr>
      <tr>
        <td id="L3098" class="blob-num js-line-number" data-line-number="3098"></td>
        <td id="LC3098" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>basis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineBasis,</td>
      </tr>
      <tr>
        <td id="L3099" class="blob-num js-line-number" data-line-number="3099"></td>
        <td id="LC3099" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>basis-open<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineBasisOpen,</td>
      </tr>
      <tr>
        <td id="L3100" class="blob-num js-line-number" data-line-number="3100"></td>
        <td id="LC3100" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>basis-closed<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineBasisClosed,</td>
      </tr>
      <tr>
        <td id="L3101" class="blob-num js-line-number" data-line-number="3101"></td>
        <td id="LC3101" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>bundle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineBundle,</td>
      </tr>
      <tr>
        <td id="L3102" class="blob-num js-line-number" data-line-number="3102"></td>
        <td id="LC3102" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>cardinal<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineCardinal,</td>
      </tr>
      <tr>
        <td id="L3103" class="blob-num js-line-number" data-line-number="3103"></td>
        <td id="LC3103" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>cardinal-open<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineCardinalOpen,</td>
      </tr>
      <tr>
        <td id="L3104" class="blob-num js-line-number" data-line-number="3104"></td>
        <td id="LC3104" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>cardinal-closed<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineCardinalClosed,</td>
      </tr>
      <tr>
        <td id="L3105" class="blob-num js-line-number" data-line-number="3105"></td>
        <td id="LC3105" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span>monotone<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineMonotone</td>
      </tr>
      <tr>
        <td id="L3106" class="blob-num js-line-number" data-line-number="3106"></td>
        <td id="LC3106" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3107" class="blob-num js-line-number" data-line-number="3107"></td>
        <td id="LC3107" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3108" class="blob-num js-line-number" data-line-number="3108"></td>
        <td id="LC3108" class="blob-code js-file-line"><span class="pl-c">// Linear interpolation; generates &quot;L&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3109" class="blob-num js-line-number" data-line-number="3109"></td>
        <td id="LC3109" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineLinear</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3110" class="blob-num js-line-number" data-line-number="3110"></td>
        <td id="LC3110" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3111" class="blob-num js-line-number" data-line-number="3111"></td>
        <td id="LC3111" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3112" class="blob-num js-line-number" data-line-number="3112"></td>
        <td id="LC3112" class="blob-code js-file-line">      p <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3113" class="blob-num js-line-number" data-line-number="3113"></td>
        <td id="LC3113" class="blob-code js-file-line">      path <span class="pl-k">=</span> [p[<span class="pl-c1">0</span>], <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]];</td>
      </tr>
      <tr>
        <td id="L3114" class="blob-num js-line-number" data-line-number="3114"></td>
        <td id="LC3114" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) path.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, (p <span class="pl-k">=</span> points[i])[<span class="pl-c1">0</span>], <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3115" class="blob-num js-line-number" data-line-number="3115"></td>
        <td id="LC3115" class="blob-code js-file-line">  <span class="pl-k">return</span> path.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3116" class="blob-num js-line-number" data-line-number="3116"></td>
        <td id="LC3116" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3117" class="blob-num js-line-number" data-line-number="3117"></td>
        <td id="LC3117" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3118" class="blob-num js-line-number" data-line-number="3118"></td>
        <td id="LC3118" class="blob-code js-file-line"><span class="pl-c">// Step interpolation; generates &quot;H&quot; and &quot;V&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3119" class="blob-num js-line-number" data-line-number="3119"></td>
        <td id="LC3119" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineStepBefore</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3120" class="blob-num js-line-number" data-line-number="3120"></td>
        <td id="LC3120" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3121" class="blob-num js-line-number" data-line-number="3121"></td>
        <td id="LC3121" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3122" class="blob-num js-line-number" data-line-number="3122"></td>
        <td id="LC3122" class="blob-code js-file-line">      p <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3123" class="blob-num js-line-number" data-line-number="3123"></td>
        <td id="LC3123" class="blob-code js-file-line">      path <span class="pl-k">=</span> [p[<span class="pl-c1">0</span>], <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]];</td>
      </tr>
      <tr>
        <td id="L3124" class="blob-num js-line-number" data-line-number="3124"></td>
        <td id="LC3124" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) path.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span>, (p <span class="pl-k">=</span> points[i])[<span class="pl-c1">1</span>], <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3125" class="blob-num js-line-number" data-line-number="3125"></td>
        <td id="LC3125" class="blob-code js-file-line">  <span class="pl-k">return</span> path.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3126" class="blob-num js-line-number" data-line-number="3126"></td>
        <td id="LC3126" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3127" class="blob-num js-line-number" data-line-number="3127"></td>
        <td id="LC3127" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3128" class="blob-num js-line-number" data-line-number="3128"></td>
        <td id="LC3128" class="blob-code js-file-line"><span class="pl-c">// Step interpolation; generates &quot;H&quot; and &quot;V&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3129" class="blob-num js-line-number" data-line-number="3129"></td>
        <td id="LC3129" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineStepAfter</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3130" class="blob-num js-line-number" data-line-number="3130"></td>
        <td id="LC3130" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3131" class="blob-num js-line-number" data-line-number="3131"></td>
        <td id="LC3131" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3132" class="blob-num js-line-number" data-line-number="3132"></td>
        <td id="LC3132" class="blob-code js-file-line">      p <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3133" class="blob-num js-line-number" data-line-number="3133"></td>
        <td id="LC3133" class="blob-code js-file-line">      path <span class="pl-k">=</span> [p[<span class="pl-c1">0</span>], <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]];</td>
      </tr>
      <tr>
        <td id="L3134" class="blob-num js-line-number" data-line-number="3134"></td>
        <td id="LC3134" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) path.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>, (p <span class="pl-k">=</span> points[i])[<span class="pl-c1">0</span>], <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3135" class="blob-num js-line-number" data-line-number="3135"></td>
        <td id="LC3135" class="blob-code js-file-line">  <span class="pl-k">return</span> path.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3136" class="blob-num js-line-number" data-line-number="3136"></td>
        <td id="LC3136" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3137" class="blob-num js-line-number" data-line-number="3137"></td>
        <td id="LC3137" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3138" class="blob-num js-line-number" data-line-number="3138"></td>
        <td id="LC3138" class="blob-code js-file-line"><span class="pl-c">// Open cardinal spline interpolation; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3139" class="blob-num js-line-number" data-line-number="3139"></td>
        <td id="LC3139" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineCardinalOpen</span>(<span class="pl-vpf">points</span>, <span class="pl-vpf">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L3140" class="blob-num js-line-number" data-line-number="3140"></td>
        <td id="LC3140" class="blob-code js-file-line">  <span class="pl-k">return</span> points.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span></td>
      </tr>
      <tr>
        <td id="L3141" class="blob-num js-line-number" data-line-number="3141"></td>
        <td id="LC3141" class="blob-code js-file-line">      <span class="pl-k">?</span> d3_svg_lineLinear(points)</td>
      </tr>
      <tr>
        <td id="L3142" class="blob-num js-line-number" data-line-number="3142"></td>
        <td id="LC3142" class="blob-code js-file-line">      <span class="pl-k">:</span> points[<span class="pl-c1">1</span>] <span class="pl-k">+</span> d3_svg_lineHermite(points.<span class="pl-s3">slice</span>(<span class="pl-c1">1</span>, points.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L3143" class="blob-num js-line-number" data-line-number="3143"></td>
        <td id="LC3143" class="blob-code js-file-line">        d3_svg_lineCardinalTangents(points, tension));</td>
      </tr>
      <tr>
        <td id="L3144" class="blob-num js-line-number" data-line-number="3144"></td>
        <td id="LC3144" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3145" class="blob-num js-line-number" data-line-number="3145"></td>
        <td id="LC3145" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3146" class="blob-num js-line-number" data-line-number="3146"></td>
        <td id="LC3146" class="blob-code js-file-line"><span class="pl-c">// Closed cardinal spline interpolation; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3147" class="blob-num js-line-number" data-line-number="3147"></td>
        <td id="LC3147" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineCardinalClosed</span>(<span class="pl-vpf">points</span>, <span class="pl-vpf">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L3148" class="blob-num js-line-number" data-line-number="3148"></td>
        <td id="LC3148" class="blob-code js-file-line">  <span class="pl-k">return</span> points.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L3149" class="blob-num js-line-number" data-line-number="3149"></td>
        <td id="LC3149" class="blob-code js-file-line">      <span class="pl-k">?</span> d3_svg_lineLinear(points)</td>
      </tr>
      <tr>
        <td id="L3150" class="blob-num js-line-number" data-line-number="3150"></td>
        <td id="LC3150" class="blob-code js-file-line">      <span class="pl-k">:</span> points[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_svg_lineHermite((points.<span class="pl-s3">push</span>(points[<span class="pl-c1">0</span>]), points),</td>
      </tr>
      <tr>
        <td id="L3151" class="blob-num js-line-number" data-line-number="3151"></td>
        <td id="LC3151" class="blob-code js-file-line">        d3_svg_lineCardinalTangents([points[points.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">2</span>]]</td>
      </tr>
      <tr>
        <td id="L3152" class="blob-num js-line-number" data-line-number="3152"></td>
        <td id="LC3152" class="blob-code js-file-line">        .<span class="pl-s3">concat</span>(points, [points[<span class="pl-c1">1</span>]]), tension));</td>
      </tr>
      <tr>
        <td id="L3153" class="blob-num js-line-number" data-line-number="3153"></td>
        <td id="LC3153" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3154" class="blob-num js-line-number" data-line-number="3154"></td>
        <td id="LC3154" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3155" class="blob-num js-line-number" data-line-number="3155"></td>
        <td id="LC3155" class="blob-code js-file-line"><span class="pl-c">// Cardinal spline interpolation; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3156" class="blob-num js-line-number" data-line-number="3156"></td>
        <td id="LC3156" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineCardinal</span>(<span class="pl-vpf">points</span>, <span class="pl-vpf">tension</span>, <span class="pl-vpf">closed</span>) {</td>
      </tr>
      <tr>
        <td id="L3157" class="blob-num js-line-number" data-line-number="3157"></td>
        <td id="LC3157" class="blob-code js-file-line">  <span class="pl-k">return</span> points.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L3158" class="blob-num js-line-number" data-line-number="3158"></td>
        <td id="LC3158" class="blob-code js-file-line">      <span class="pl-k">?</span> d3_svg_lineLinear(points)</td>
      </tr>
      <tr>
        <td id="L3159" class="blob-num js-line-number" data-line-number="3159"></td>
        <td id="LC3159" class="blob-code js-file-line">      <span class="pl-k">:</span> points[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_svg_lineHermite(points,</td>
      </tr>
      <tr>
        <td id="L3160" class="blob-num js-line-number" data-line-number="3160"></td>
        <td id="LC3160" class="blob-code js-file-line">        d3_svg_lineCardinalTangents(points, tension));</td>
      </tr>
      <tr>
        <td id="L3161" class="blob-num js-line-number" data-line-number="3161"></td>
        <td id="LC3161" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3162" class="blob-num js-line-number" data-line-number="3162"></td>
        <td id="LC3162" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3163" class="blob-num js-line-number" data-line-number="3163"></td>
        <td id="LC3163" class="blob-code js-file-line"><span class="pl-c">// Hermite spline construction; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3164" class="blob-num js-line-number" data-line-number="3164"></td>
        <td id="LC3164" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineHermite</span>(<span class="pl-vpf">points</span>, <span class="pl-vpf">tangents</span>) {</td>
      </tr>
      <tr>
        <td id="L3165" class="blob-num js-line-number" data-line-number="3165"></td>
        <td id="LC3165" class="blob-code js-file-line">  <span class="pl-k">if</span> (tangents.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L3166" class="blob-num js-line-number" data-line-number="3166"></td>
        <td id="LC3166" class="blob-code js-file-line">      <span class="pl-k">||</span> (points.<span class="pl-sc">length</span> <span class="pl-k">!=</span> tangents.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L3167" class="blob-num js-line-number" data-line-number="3167"></td>
        <td id="LC3167" class="blob-code js-file-line">      <span class="pl-k">&amp;&amp;</span> points.<span class="pl-sc">length</span> <span class="pl-k">!=</span> tangents.<span class="pl-sc">length</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>)) {</td>
      </tr>
      <tr>
        <td id="L3168" class="blob-num js-line-number" data-line-number="3168"></td>
        <td id="LC3168" class="blob-code js-file-line">    <span class="pl-k">return</span> d3_svg_lineLinear(points);</td>
      </tr>
      <tr>
        <td id="L3169" class="blob-num js-line-number" data-line-number="3169"></td>
        <td id="LC3169" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3170" class="blob-num js-line-number" data-line-number="3170"></td>
        <td id="LC3170" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3171" class="blob-num js-line-number" data-line-number="3171"></td>
        <td id="LC3171" class="blob-code js-file-line">  <span class="pl-s">var</span> quad <span class="pl-k">=</span> points.<span class="pl-sc">length</span> <span class="pl-k">!=</span> tangents.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3172" class="blob-num js-line-number" data-line-number="3172"></td>
        <td id="LC3172" class="blob-code js-file-line">      path <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3173" class="blob-num js-line-number" data-line-number="3173"></td>
        <td id="LC3173" class="blob-code js-file-line">      p0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3174" class="blob-num js-line-number" data-line-number="3174"></td>
        <td id="LC3174" class="blob-code js-file-line">      p <span class="pl-k">=</span> points[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L3175" class="blob-num js-line-number" data-line-number="3175"></td>
        <td id="LC3175" class="blob-code js-file-line">      t0 <span class="pl-k">=</span> tangents[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3176" class="blob-num js-line-number" data-line-number="3176"></td>
        <td id="LC3176" class="blob-code js-file-line">      t <span class="pl-k">=</span> t0,</td>
      </tr>
      <tr>
        <td id="L3177" class="blob-num js-line-number" data-line-number="3177"></td>
        <td id="LC3177" class="blob-code js-file-line">      pi <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3178" class="blob-num js-line-number" data-line-number="3178"></td>
        <td id="LC3178" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3179" class="blob-num js-line-number" data-line-number="3179"></td>
        <td id="LC3179" class="blob-code js-file-line">  <span class="pl-k">if</span> (quad) {</td>
      </tr>
      <tr>
        <td id="L3180" class="blob-num js-line-number" data-line-number="3180"></td>
        <td id="LC3180" class="blob-code js-file-line">    path <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t0[<span class="pl-c1">0</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t0[<span class="pl-c1">1</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>)</td>
      </tr>
      <tr>
        <td id="L3181" class="blob-num js-line-number" data-line-number="3181"></td>
        <td id="LC3181" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3182" class="blob-num js-line-number" data-line-number="3182"></td>
        <td id="LC3182" class="blob-code js-file-line">    p0 <span class="pl-k">=</span> points[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3183" class="blob-num js-line-number" data-line-number="3183"></td>
        <td id="LC3183" class="blob-code js-file-line">    pi <span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3184" class="blob-num js-line-number" data-line-number="3184"></td>
        <td id="LC3184" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3185" class="blob-num js-line-number" data-line-number="3185"></td>
        <td id="LC3185" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3186" class="blob-num js-line-number" data-line-number="3186"></td>
        <td id="LC3186" class="blob-code js-file-line">  <span class="pl-k">if</span> (tangents.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3187" class="blob-num js-line-number" data-line-number="3187"></td>
        <td id="LC3187" class="blob-code js-file-line">    t <span class="pl-k">=</span> tangents[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3188" class="blob-num js-line-number" data-line-number="3188"></td>
        <td id="LC3188" class="blob-code js-file-line">    p <span class="pl-k">=</span> points[pi];</td>
      </tr>
      <tr>
        <td id="L3189" class="blob-num js-line-number" data-line-number="3189"></td>
        <td id="LC3189" class="blob-code js-file-line">    pi<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3190" class="blob-num js-line-number" data-line-number="3190"></td>
        <td id="LC3190" class="blob-code js-file-line">    path <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> t0[<span class="pl-c1">0</span>]) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> t0[<span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L3191" class="blob-num js-line-number" data-line-number="3191"></td>
        <td id="LC3191" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t[<span class="pl-c1">0</span>]) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t[<span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L3192" class="blob-num js-line-number" data-line-number="3192"></td>
        <td id="LC3192" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3193" class="blob-num js-line-number" data-line-number="3193"></td>
        <td id="LC3193" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">2</span>; i <span class="pl-k">&lt;</span> tangents.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>, pi<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3194" class="blob-num js-line-number" data-line-number="3194"></td>
        <td id="LC3194" class="blob-code js-file-line">      p <span class="pl-k">=</span> points[pi];</td>
      </tr>
      <tr>
        <td id="L3195" class="blob-num js-line-number" data-line-number="3195"></td>
        <td id="LC3195" class="blob-code js-file-line">      t <span class="pl-k">=</span> tangents[i];</td>
      </tr>
      <tr>
        <td id="L3196" class="blob-num js-line-number" data-line-number="3196"></td>
        <td id="LC3196" class="blob-code js-file-line">      path <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>S<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t[<span class="pl-c1">0</span>]) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t[<span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L3197" class="blob-num js-line-number" data-line-number="3197"></td>
        <td id="LC3197" class="blob-code js-file-line">          <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3198" class="blob-num js-line-number" data-line-number="3198"></td>
        <td id="LC3198" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3199" class="blob-num js-line-number" data-line-number="3199"></td>
        <td id="LC3199" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3200" class="blob-num js-line-number" data-line-number="3200"></td>
        <td id="LC3200" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3201" class="blob-num js-line-number" data-line-number="3201"></td>
        <td id="LC3201" class="blob-code js-file-line">  <span class="pl-k">if</span> (quad) {</td>
      </tr>
      <tr>
        <td id="L3202" class="blob-num js-line-number" data-line-number="3202"></td>
        <td id="LC3202" class="blob-code js-file-line">    <span class="pl-s">var</span> lp <span class="pl-k">=</span> points[pi];</td>
      </tr>
      <tr>
        <td id="L3203" class="blob-num js-line-number" data-line-number="3203"></td>
        <td id="LC3203" class="blob-code js-file-line">    path <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> t[<span class="pl-c1">0</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> t[<span class="pl-c1">1</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>)</td>
      </tr>
      <tr>
        <td id="L3204" class="blob-num js-line-number" data-line-number="3204"></td>
        <td id="LC3204" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lp[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lp[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3205" class="blob-num js-line-number" data-line-number="3205"></td>
        <td id="LC3205" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3206" class="blob-num js-line-number" data-line-number="3206"></td>
        <td id="LC3206" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3207" class="blob-num js-line-number" data-line-number="3207"></td>
        <td id="LC3207" class="blob-code js-file-line">  <span class="pl-k">return</span> path;</td>
      </tr>
      <tr>
        <td id="L3208" class="blob-num js-line-number" data-line-number="3208"></td>
        <td id="LC3208" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3209" class="blob-num js-line-number" data-line-number="3209"></td>
        <td id="LC3209" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3210" class="blob-num js-line-number" data-line-number="3210"></td>
        <td id="LC3210" class="blob-code js-file-line"><span class="pl-c">// Generates tangents for a cardinal spline.</span></td>
      </tr>
      <tr>
        <td id="L3211" class="blob-num js-line-number" data-line-number="3211"></td>
        <td id="LC3211" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineCardinalTangents</span>(<span class="pl-vpf">points</span>, <span class="pl-vpf">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L3212" class="blob-num js-line-number" data-line-number="3212"></td>
        <td id="LC3212" class="blob-code js-file-line">  <span class="pl-s">var</span> tangents <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3213" class="blob-num js-line-number" data-line-number="3213"></td>
        <td id="LC3213" class="blob-code js-file-line">      a <span class="pl-k">=</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> tension) / <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L3214" class="blob-num js-line-number" data-line-number="3214"></td>
        <td id="LC3214" class="blob-code js-file-line">      p0,</td>
      </tr>
      <tr>
        <td id="L3215" class="blob-num js-line-number" data-line-number="3215"></td>
        <td id="LC3215" class="blob-code js-file-line">      p1 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3216" class="blob-num js-line-number" data-line-number="3216"></td>
        <td id="LC3216" class="blob-code js-file-line">      p2 <span class="pl-k">=</span> points[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L3217" class="blob-num js-line-number" data-line-number="3217"></td>
        <td id="LC3217" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3218" class="blob-num js-line-number" data-line-number="3218"></td>
        <td id="LC3218" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L3219" class="blob-num js-line-number" data-line-number="3219"></td>
        <td id="LC3219" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L3220" class="blob-num js-line-number" data-line-number="3220"></td>
        <td id="LC3220" class="blob-code js-file-line">    p0 <span class="pl-k">=</span> p1;</td>
      </tr>
      <tr>
        <td id="L3221" class="blob-num js-line-number" data-line-number="3221"></td>
        <td id="LC3221" class="blob-code js-file-line">    p1 <span class="pl-k">=</span> p2;</td>
      </tr>
      <tr>
        <td id="L3222" class="blob-num js-line-number" data-line-number="3222"></td>
        <td id="LC3222" class="blob-code js-file-line">    p2 <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L3223" class="blob-num js-line-number" data-line-number="3223"></td>
        <td id="LC3223" class="blob-code js-file-line">    tangents.<span class="pl-s3">push</span>([a <span class="pl-k">*</span> (p2[<span class="pl-c1">0</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">0</span>]), a <span class="pl-k">*</span> (p2[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">1</span>])]);</td>
      </tr>
      <tr>
        <td id="L3224" class="blob-num js-line-number" data-line-number="3224"></td>
        <td id="LC3224" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3225" class="blob-num js-line-number" data-line-number="3225"></td>
        <td id="LC3225" class="blob-code js-file-line">  <span class="pl-k">return</span> tangents;</td>
      </tr>
      <tr>
        <td id="L3226" class="blob-num js-line-number" data-line-number="3226"></td>
        <td id="LC3226" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3227" class="blob-num js-line-number" data-line-number="3227"></td>
        <td id="LC3227" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3228" class="blob-num js-line-number" data-line-number="3228"></td>
        <td id="LC3228" class="blob-code js-file-line"><span class="pl-c">// B-spline interpolation; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3229" class="blob-num js-line-number" data-line-number="3229"></td>
        <td id="LC3229" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineBasis</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3230" class="blob-num js-line-number" data-line-number="3230"></td>
        <td id="LC3230" class="blob-code js-file-line">  <span class="pl-k">if</span> (points.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) <span class="pl-k">return</span> d3_svg_lineLinear(points);</td>
      </tr>
      <tr>
        <td id="L3231" class="blob-num js-line-number" data-line-number="3231"></td>
        <td id="LC3231" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3232" class="blob-num js-line-number" data-line-number="3232"></td>
        <td id="LC3232" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3233" class="blob-num js-line-number" data-line-number="3233"></td>
        <td id="LC3233" class="blob-code js-file-line">      pi <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3234" class="blob-num js-line-number" data-line-number="3234"></td>
        <td id="LC3234" class="blob-code js-file-line">      x0 <span class="pl-k">=</span> pi[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3235" class="blob-num js-line-number" data-line-number="3235"></td>
        <td id="LC3235" class="blob-code js-file-line">      y0 <span class="pl-k">=</span> pi[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L3236" class="blob-num js-line-number" data-line-number="3236"></td>
        <td id="LC3236" class="blob-code js-file-line">      px <span class="pl-k">=</span> [x0, x0, x0, (pi <span class="pl-k">=</span> points[<span class="pl-c1">1</span>])[<span class="pl-c1">0</span>]],</td>
      </tr>
      <tr>
        <td id="L3237" class="blob-num js-line-number" data-line-number="3237"></td>
        <td id="LC3237" class="blob-code js-file-line">      py <span class="pl-k">=</span> [y0, y0, y0, pi[<span class="pl-c1">1</span>]],</td>
      </tr>
      <tr>
        <td id="L3238" class="blob-num js-line-number" data-line-number="3238"></td>
        <td id="LC3238" class="blob-code js-file-line">      path <span class="pl-k">=</span> [x0, <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y0];</td>
      </tr>
      <tr>
        <td id="L3239" class="blob-num js-line-number" data-line-number="3239"></td>
        <td id="LC3239" class="blob-code js-file-line">  d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L3240" class="blob-num js-line-number" data-line-number="3240"></td>
        <td id="LC3240" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code js-file-line">    pi <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code js-file-line">    px.<span class="pl-s3">shift</span>(); px.<span class="pl-s3">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code js-file-line">    py.<span class="pl-s3">shift</span>(); py.<span class="pl-s3">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code js-file-line">    d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code js-file-line">  i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code js-file-line">    px.<span class="pl-s3">shift</span>(); px.<span class="pl-s3">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code js-file-line">    py.<span class="pl-s3">shift</span>(); py.<span class="pl-s3">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code js-file-line">    d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code js-file-line">  <span class="pl-k">return</span> path.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code js-file-line"><span class="pl-c">// Open B-spline interpolation; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineBasisOpen</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code js-file-line">  <span class="pl-k">if</span> (points.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) <span class="pl-k">return</span> d3_svg_lineLinear(points);</td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code js-file-line">  <span class="pl-s">var</span> path <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code js-file-line">      pi,</td>
      </tr>
      <tr>
        <td id="L3262" class="blob-num js-line-number" data-line-number="3262"></td>
        <td id="LC3262" class="blob-code js-file-line">      px <span class="pl-k">=</span> [<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3263" class="blob-num js-line-number" data-line-number="3263"></td>
        <td id="LC3263" class="blob-code js-file-line">      py <span class="pl-k">=</span> [<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3264" class="blob-num js-line-number" data-line-number="3264"></td>
        <td id="LC3264" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L3265" class="blob-num js-line-number" data-line-number="3265"></td>
        <td id="LC3265" class="blob-code js-file-line">    pi <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L3266" class="blob-num js-line-number" data-line-number="3266"></td>
        <td id="LC3266" class="blob-code js-file-line">    px.<span class="pl-s3">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3267" class="blob-num js-line-number" data-line-number="3267"></td>
        <td id="LC3267" class="blob-code js-file-line">    py.<span class="pl-s3">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3268" class="blob-num js-line-number" data-line-number="3268"></td>
        <td id="LC3268" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3269" class="blob-num js-line-number" data-line-number="3269"></td>
        <td id="LC3269" class="blob-code js-file-line">  path.<span class="pl-s3">push</span>(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px)</td>
      </tr>
      <tr>
        <td id="L3270" class="blob-num js-line-number" data-line-number="3270"></td>
        <td id="LC3270" class="blob-code js-file-line">    <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));</td>
      </tr>
      <tr>
        <td id="L3271" class="blob-num js-line-number" data-line-number="3271"></td>
        <td id="LC3271" class="blob-code js-file-line">  <span class="pl-k">--</span>i; <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L3272" class="blob-num js-line-number" data-line-number="3272"></td>
        <td id="LC3272" class="blob-code js-file-line">    pi <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L3273" class="blob-num js-line-number" data-line-number="3273"></td>
        <td id="LC3273" class="blob-code js-file-line">    px.<span class="pl-s3">shift</span>(); px.<span class="pl-s3">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3274" class="blob-num js-line-number" data-line-number="3274"></td>
        <td id="LC3274" class="blob-code js-file-line">    py.<span class="pl-s3">shift</span>(); py.<span class="pl-s3">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3275" class="blob-num js-line-number" data-line-number="3275"></td>
        <td id="LC3275" class="blob-code js-file-line">    d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L3276" class="blob-num js-line-number" data-line-number="3276"></td>
        <td id="LC3276" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3277" class="blob-num js-line-number" data-line-number="3277"></td>
        <td id="LC3277" class="blob-code js-file-line">  <span class="pl-k">return</span> path.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3278" class="blob-num js-line-number" data-line-number="3278"></td>
        <td id="LC3278" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3279" class="blob-num js-line-number" data-line-number="3279"></td>
        <td id="LC3279" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3280" class="blob-num js-line-number" data-line-number="3280"></td>
        <td id="LC3280" class="blob-code js-file-line"><span class="pl-c">// Closed B-spline interpolation; generates &quot;C&quot; commands.</span></td>
      </tr>
      <tr>
        <td id="L3281" class="blob-num js-line-number" data-line-number="3281"></td>
        <td id="LC3281" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineBasisClosed</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3282" class="blob-num js-line-number" data-line-number="3282"></td>
        <td id="LC3282" class="blob-code js-file-line">  <span class="pl-s">var</span> path,</td>
      </tr>
      <tr>
        <td id="L3283" class="blob-num js-line-number" data-line-number="3283"></td>
        <td id="LC3283" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3284" class="blob-num js-line-number" data-line-number="3284"></td>
        <td id="LC3284" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3285" class="blob-num js-line-number" data-line-number="3285"></td>
        <td id="LC3285" class="blob-code js-file-line">      m <span class="pl-k">=</span> n <span class="pl-k">+</span> <span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L3286" class="blob-num js-line-number" data-line-number="3286"></td>
        <td id="LC3286" class="blob-code js-file-line">      pi,</td>
      </tr>
      <tr>
        <td id="L3287" class="blob-num js-line-number" data-line-number="3287"></td>
        <td id="LC3287" class="blob-code js-file-line">      px <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3288" class="blob-num js-line-number" data-line-number="3288"></td>
        <td id="LC3288" class="blob-code js-file-line">      py <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3289" class="blob-num js-line-number" data-line-number="3289"></td>
        <td id="LC3289" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L3290" class="blob-num js-line-number" data-line-number="3290"></td>
        <td id="LC3290" class="blob-code js-file-line">    pi <span class="pl-k">=</span> points[i <span class="pl-k">%</span> n];</td>
      </tr>
      <tr>
        <td id="L3291" class="blob-num js-line-number" data-line-number="3291"></td>
        <td id="LC3291" class="blob-code js-file-line">    px.<span class="pl-s3">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3292" class="blob-num js-line-number" data-line-number="3292"></td>
        <td id="LC3292" class="blob-code js-file-line">    py.<span class="pl-s3">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3293" class="blob-num js-line-number" data-line-number="3293"></td>
        <td id="LC3293" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3294" class="blob-num js-line-number" data-line-number="3294"></td>
        <td id="LC3294" class="blob-code js-file-line">  path <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L3295" class="blob-num js-line-number" data-line-number="3295"></td>
        <td id="LC3295" class="blob-code js-file-line">    d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3296" class="blob-num js-line-number" data-line-number="3296"></td>
        <td id="LC3296" class="blob-code js-file-line">    d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)</td>
      </tr>
      <tr>
        <td id="L3297" class="blob-num js-line-number" data-line-number="3297"></td>
        <td id="LC3297" class="blob-code js-file-line">  ];</td>
      </tr>
      <tr>
        <td id="L3298" class="blob-num js-line-number" data-line-number="3298"></td>
        <td id="LC3298" class="blob-code js-file-line">  <span class="pl-k">--</span>i; <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m) {</td>
      </tr>
      <tr>
        <td id="L3299" class="blob-num js-line-number" data-line-number="3299"></td>
        <td id="LC3299" class="blob-code js-file-line">    pi <span class="pl-k">=</span> points[i <span class="pl-k">%</span> n];</td>
      </tr>
      <tr>
        <td id="L3300" class="blob-num js-line-number" data-line-number="3300"></td>
        <td id="LC3300" class="blob-code js-file-line">    px.<span class="pl-s3">shift</span>(); px.<span class="pl-s3">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3301" class="blob-num js-line-number" data-line-number="3301"></td>
        <td id="LC3301" class="blob-code js-file-line">    py.<span class="pl-s3">shift</span>(); py.<span class="pl-s3">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3302" class="blob-num js-line-number" data-line-number="3302"></td>
        <td id="LC3302" class="blob-code js-file-line">    d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L3303" class="blob-num js-line-number" data-line-number="3303"></td>
        <td id="LC3303" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3304" class="blob-num js-line-number" data-line-number="3304"></td>
        <td id="LC3304" class="blob-code js-file-line">  <span class="pl-k">return</span> path.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3305" class="blob-num js-line-number" data-line-number="3305"></td>
        <td id="LC3305" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3306" class="blob-num js-line-number" data-line-number="3306"></td>
        <td id="LC3306" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3307" class="blob-num js-line-number" data-line-number="3307"></td>
        <td id="LC3307" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineBundle</span>(<span class="pl-vpf">points</span>, <span class="pl-vpf">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L3308" class="blob-num js-line-number" data-line-number="3308"></td>
        <td id="LC3308" class="blob-code js-file-line">  <span class="pl-s">var</span> n <span class="pl-k">=</span> points.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3309" class="blob-num js-line-number" data-line-number="3309"></td>
        <td id="LC3309" class="blob-code js-file-line">      x0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3310" class="blob-num js-line-number" data-line-number="3310"></td>
        <td id="LC3310" class="blob-code js-file-line">      y0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L3311" class="blob-num js-line-number" data-line-number="3311"></td>
        <td id="LC3311" class="blob-code js-file-line">      dx <span class="pl-k">=</span> points[n][<span class="pl-c1">0</span>] <span class="pl-k">-</span> x0,</td>
      </tr>
      <tr>
        <td id="L3312" class="blob-num js-line-number" data-line-number="3312"></td>
        <td id="LC3312" class="blob-code js-file-line">      dy <span class="pl-k">=</span> points[n][<span class="pl-c1">1</span>] <span class="pl-k">-</span> y0,</td>
      </tr>
      <tr>
        <td id="L3313" class="blob-num js-line-number" data-line-number="3313"></td>
        <td id="LC3313" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3314" class="blob-num js-line-number" data-line-number="3314"></td>
        <td id="LC3314" class="blob-code js-file-line">      p,</td>
      </tr>
      <tr>
        <td id="L3315" class="blob-num js-line-number" data-line-number="3315"></td>
        <td id="LC3315" class="blob-code js-file-line">      t;</td>
      </tr>
      <tr>
        <td id="L3316" class="blob-num js-line-number" data-line-number="3316"></td>
        <td id="LC3316" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;=</span> n) {</td>
      </tr>
      <tr>
        <td id="L3317" class="blob-num js-line-number" data-line-number="3317"></td>
        <td id="LC3317" class="blob-code js-file-line">    p <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L3318" class="blob-num js-line-number" data-line-number="3318"></td>
        <td id="LC3318" class="blob-code js-file-line">    t <span class="pl-k">=</span> i / n;</td>
      </tr>
      <tr>
        <td id="L3319" class="blob-num js-line-number" data-line-number="3319"></td>
        <td id="LC3319" class="blob-code js-file-line">    p[<span class="pl-c1">0</span>] <span class="pl-k">=</span> tension <span class="pl-k">*</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> tension) <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> t <span class="pl-k">*</span> dx);</td>
      </tr>
      <tr>
        <td id="L3320" class="blob-num js-line-number" data-line-number="3320"></td>
        <td id="LC3320" class="blob-code js-file-line">    p[<span class="pl-c1">1</span>] <span class="pl-k">=</span> tension <span class="pl-k">*</span> p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> tension) <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> t <span class="pl-k">*</span> dy);</td>
      </tr>
      <tr>
        <td id="L3321" class="blob-num js-line-number" data-line-number="3321"></td>
        <td id="LC3321" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3322" class="blob-num js-line-number" data-line-number="3322"></td>
        <td id="LC3322" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_svg_lineBasis(points);</td>
      </tr>
      <tr>
        <td id="L3323" class="blob-num js-line-number" data-line-number="3323"></td>
        <td id="LC3323" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3324" class="blob-num js-line-number" data-line-number="3324"></td>
        <td id="LC3324" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3325" class="blob-num js-line-number" data-line-number="3325"></td>
        <td id="LC3325" class="blob-code js-file-line"><span class="pl-c">// Returns the dot product of the given four-element vectors.</span></td>
      </tr>
      <tr>
        <td id="L3326" class="blob-num js-line-number" data-line-number="3326"></td>
        <td id="LC3326" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineDot4</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3327" class="blob-num js-line-number" data-line-number="3327"></td>
        <td id="LC3327" class="blob-code js-file-line">  <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">+</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>] <span class="pl-k">+</span> a[<span class="pl-c1">2</span>] <span class="pl-k">*</span> b[<span class="pl-c1">2</span>] <span class="pl-k">+</span> a[<span class="pl-c1">3</span>] <span class="pl-k">*</span> b[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L3328" class="blob-num js-line-number" data-line-number="3328"></td>
        <td id="LC3328" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3329" class="blob-num js-line-number" data-line-number="3329"></td>
        <td id="LC3329" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3330" class="blob-num js-line-number" data-line-number="3330"></td>
        <td id="LC3330" class="blob-code js-file-line"><span class="pl-c">// Matrix to transform basis (b-spline) control points to bezier</span></td>
      </tr>
      <tr>
        <td id="L3331" class="blob-num js-line-number" data-line-number="3331"></td>
        <td id="LC3331" class="blob-code js-file-line"><span class="pl-c">// control points. Derived from FvD 11.2.8.</span></td>
      </tr>
      <tr>
        <td id="L3332" class="blob-num js-line-number" data-line-number="3332"></td>
        <td id="LC3332" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_lineBasisBezier1 <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">2</span>/<span class="pl-c1">3</span>, <span class="pl-c1">1</span>/<span class="pl-c1">3</span>, <span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3333" class="blob-num js-line-number" data-line-number="3333"></td>
        <td id="LC3333" class="blob-code js-file-line">    d3_svg_lineBasisBezier2 <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>/<span class="pl-c1">3</span>, <span class="pl-c1">2</span>/<span class="pl-c1">3</span>, <span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3334" class="blob-num js-line-number" data-line-number="3334"></td>
        <td id="LC3334" class="blob-code js-file-line">    d3_svg_lineBasisBezier3 <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>/<span class="pl-c1">6</span>, <span class="pl-c1">2</span>/<span class="pl-c1">3</span>, <span class="pl-c1">1</span>/<span class="pl-c1">6</span>];</td>
      </tr>
      <tr>
        <td id="L3335" class="blob-num js-line-number" data-line-number="3335"></td>
        <td id="LC3335" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3336" class="blob-num js-line-number" data-line-number="3336"></td>
        <td id="LC3336" class="blob-code js-file-line"><span class="pl-c">// Pushes a &quot;C&quot; BÃ©zier curve onto the specified path array, given the</span></td>
      </tr>
      <tr>
        <td id="L3337" class="blob-num js-line-number" data-line-number="3337"></td>
        <td id="LC3337" class="blob-code js-file-line"><span class="pl-c">// two specified four-element arrays which define the control points.</span></td>
      </tr>
      <tr>
        <td id="L3338" class="blob-num js-line-number" data-line-number="3338"></td>
        <td id="LC3338" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineBasisBezier</span>(<span class="pl-vpf">path</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3339" class="blob-num js-line-number" data-line-number="3339"></td>
        <td id="LC3339" class="blob-code js-file-line">  path.<span class="pl-s3">push</span>(</td>
      </tr>
      <tr>
        <td id="L3340" class="blob-num js-line-number" data-line-number="3340"></td>
        <td id="LC3340" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier1, x),</td>
      </tr>
      <tr>
        <td id="L3341" class="blob-num js-line-number" data-line-number="3341"></td>
        <td id="LC3341" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier1, y),</td>
      </tr>
      <tr>
        <td id="L3342" class="blob-num js-line-number" data-line-number="3342"></td>
        <td id="LC3342" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier2, x),</td>
      </tr>
      <tr>
        <td id="L3343" class="blob-num js-line-number" data-line-number="3343"></td>
        <td id="LC3343" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier2, y),</td>
      </tr>
      <tr>
        <td id="L3344" class="blob-num js-line-number" data-line-number="3344"></td>
        <td id="LC3344" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, x),</td>
      </tr>
      <tr>
        <td id="L3345" class="blob-num js-line-number" data-line-number="3345"></td>
        <td id="LC3345" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));</td>
      </tr>
      <tr>
        <td id="L3346" class="blob-num js-line-number" data-line-number="3346"></td>
        <td id="LC3346" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3347" class="blob-num js-line-number" data-line-number="3347"></td>
        <td id="LC3347" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3348" class="blob-num js-line-number" data-line-number="3348"></td>
        <td id="LC3348" class="blob-code js-file-line"><span class="pl-c">// Computes the slope from points p0 to p1.</span></td>
      </tr>
      <tr>
        <td id="L3349" class="blob-num js-line-number" data-line-number="3349"></td>
        <td id="LC3349" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineSlope</span>(<span class="pl-vpf">p0</span>, <span class="pl-vpf">p1</span>) {</td>
      </tr>
      <tr>
        <td id="L3350" class="blob-num js-line-number" data-line-number="3350"></td>
        <td id="LC3350" class="blob-code js-file-line">  <span class="pl-k">return</span> (p1[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">1</span>]) / (p1[<span class="pl-c1">0</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3351" class="blob-num js-line-number" data-line-number="3351"></td>
        <td id="LC3351" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3352" class="blob-num js-line-number" data-line-number="3352"></td>
        <td id="LC3352" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3353" class="blob-num js-line-number" data-line-number="3353"></td>
        <td id="LC3353" class="blob-code js-file-line"><span class="pl-c">// Compute three-point differences for the given points.</span></td>
      </tr>
      <tr>
        <td id="L3354" class="blob-num js-line-number" data-line-number="3354"></td>
        <td id="LC3354" class="blob-code js-file-line"><span class="pl-c">// http://en.wikipedia.org/wiki/Cubic_Hermite_spline#Finite_difference</span></td>
      </tr>
      <tr>
        <td id="L3355" class="blob-num js-line-number" data-line-number="3355"></td>
        <td id="LC3355" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineFiniteDifferences</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3356" class="blob-num js-line-number" data-line-number="3356"></td>
        <td id="LC3356" class="blob-code js-file-line">  <span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3357" class="blob-num js-line-number" data-line-number="3357"></td>
        <td id="LC3357" class="blob-code js-file-line">      j <span class="pl-k">=</span> points.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3358" class="blob-num js-line-number" data-line-number="3358"></td>
        <td id="LC3358" class="blob-code js-file-line">      m <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3359" class="blob-num js-line-number" data-line-number="3359"></td>
        <td id="LC3359" class="blob-code js-file-line">      p0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3360" class="blob-num js-line-number" data-line-number="3360"></td>
        <td id="LC3360" class="blob-code js-file-line">      p1 <span class="pl-k">=</span> points[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L3361" class="blob-num js-line-number" data-line-number="3361"></td>
        <td id="LC3361" class="blob-code js-file-line">      d <span class="pl-k">=</span> m[<span class="pl-c1">0</span>] <span class="pl-k">=</span> d3_svg_lineSlope(p0, p1);</td>
      </tr>
      <tr>
        <td id="L3362" class="blob-num js-line-number" data-line-number="3362"></td>
        <td id="LC3362" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> j) {</td>
      </tr>
      <tr>
        <td id="L3363" class="blob-num js-line-number" data-line-number="3363"></td>
        <td id="LC3363" class="blob-code js-file-line">    m[i] <span class="pl-k">=</span> d <span class="pl-k">+</span> (d <span class="pl-k">=</span> d3_svg_lineSlope(p0 <span class="pl-k">=</span> p1, p1 <span class="pl-k">=</span> points[i <span class="pl-k">+</span> <span class="pl-c1">1</span>]));</td>
      </tr>
      <tr>
        <td id="L3364" class="blob-num js-line-number" data-line-number="3364"></td>
        <td id="LC3364" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3365" class="blob-num js-line-number" data-line-number="3365"></td>
        <td id="LC3365" class="blob-code js-file-line">  m[i] <span class="pl-k">=</span> d;</td>
      </tr>
      <tr>
        <td id="L3366" class="blob-num js-line-number" data-line-number="3366"></td>
        <td id="LC3366" class="blob-code js-file-line">  <span class="pl-k">return</span> m;</td>
      </tr>
      <tr>
        <td id="L3367" class="blob-num js-line-number" data-line-number="3367"></td>
        <td id="LC3367" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3368" class="blob-num js-line-number" data-line-number="3368"></td>
        <td id="LC3368" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3369" class="blob-num js-line-number" data-line-number="3369"></td>
        <td id="LC3369" class="blob-code js-file-line"><span class="pl-c">// Interpolates the given points using Fritsch-Carlson Monotone cubic Hermite</span></td>
      </tr>
      <tr>
        <td id="L3370" class="blob-num js-line-number" data-line-number="3370"></td>
        <td id="LC3370" class="blob-code js-file-line"><span class="pl-c">// interpolation. Returns an array of tangent vectors. For details, see</span></td>
      </tr>
      <tr>
        <td id="L3371" class="blob-num js-line-number" data-line-number="3371"></td>
        <td id="LC3371" class="blob-code js-file-line"><span class="pl-c">// http://en.wikipedia.org/wiki/Monotone_cubic_interpolation</span></td>
      </tr>
      <tr>
        <td id="L3372" class="blob-num js-line-number" data-line-number="3372"></td>
        <td id="LC3372" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineMonotoneTangents</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3373" class="blob-num js-line-number" data-line-number="3373"></td>
        <td id="LC3373" class="blob-code js-file-line">  <span class="pl-s">var</span> tangents <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3374" class="blob-num js-line-number" data-line-number="3374"></td>
        <td id="LC3374" class="blob-code js-file-line">      d,</td>
      </tr>
      <tr>
        <td id="L3375" class="blob-num js-line-number" data-line-number="3375"></td>
        <td id="LC3375" class="blob-code js-file-line">      a,</td>
      </tr>
      <tr>
        <td id="L3376" class="blob-num js-line-number" data-line-number="3376"></td>
        <td id="LC3376" class="blob-code js-file-line">      b,</td>
      </tr>
      <tr>
        <td id="L3377" class="blob-num js-line-number" data-line-number="3377"></td>
        <td id="LC3377" class="blob-code js-file-line">      s,</td>
      </tr>
      <tr>
        <td id="L3378" class="blob-num js-line-number" data-line-number="3378"></td>
        <td id="LC3378" class="blob-code js-file-line">      m <span class="pl-k">=</span> d3_svg_lineFiniteDifferences(points),</td>
      </tr>
      <tr>
        <td id="L3379" class="blob-num js-line-number" data-line-number="3379"></td>
        <td id="LC3379" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3380" class="blob-num js-line-number" data-line-number="3380"></td>
        <td id="LC3380" class="blob-code js-file-line">      j <span class="pl-k">=</span> points.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3381" class="blob-num js-line-number" data-line-number="3381"></td>
        <td id="LC3381" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3382" class="blob-num js-line-number" data-line-number="3382"></td>
        <td id="LC3382" class="blob-code js-file-line">  <span class="pl-c">// The first two steps are done by computing finite-differences:</span></td>
      </tr>
      <tr>
        <td id="L3383" class="blob-num js-line-number" data-line-number="3383"></td>
        <td id="LC3383" class="blob-code js-file-line">  <span class="pl-c">// 1. Compute the slopes of the secant lines between successive points.</span></td>
      </tr>
      <tr>
        <td id="L3384" class="blob-num js-line-number" data-line-number="3384"></td>
        <td id="LC3384" class="blob-code js-file-line">  <span class="pl-c">// 2. Initialize the tangents at every point as the average of the secants.</span></td>
      </tr>
      <tr>
        <td id="L3385" class="blob-num js-line-number" data-line-number="3385"></td>
        <td id="LC3385" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3386" class="blob-num js-line-number" data-line-number="3386"></td>
        <td id="LC3386" class="blob-code js-file-line">  <span class="pl-c">// Then, for each segmentâ¦</span></td>
      </tr>
      <tr>
        <td id="L3387" class="blob-num js-line-number" data-line-number="3387"></td>
        <td id="LC3387" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> j) {</td>
      </tr>
      <tr>
        <td id="L3388" class="blob-num js-line-number" data-line-number="3388"></td>
        <td id="LC3388" class="blob-code js-file-line">    d <span class="pl-k">=</span> d3_svg_lineSlope(points[i], points[i <span class="pl-k">+</span> <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3389" class="blob-num js-line-number" data-line-number="3389"></td>
        <td id="LC3389" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3390" class="blob-num js-line-number" data-line-number="3390"></td>
        <td id="LC3390" class="blob-code js-file-line">    <span class="pl-c">// 3. If two successive yk = y{k + 1} are equal (i.e., d is zero), then set</span></td>
      </tr>
      <tr>
        <td id="L3391" class="blob-num js-line-number" data-line-number="3391"></td>
        <td id="LC3391" class="blob-code js-file-line">    <span class="pl-c">// mk = m{k + 1} = 0 as the spline connecting these points must be flat to</span></td>
      </tr>
      <tr>
        <td id="L3392" class="blob-num js-line-number" data-line-number="3392"></td>
        <td id="LC3392" class="blob-code js-file-line">    <span class="pl-c">// preserve monotonicity. Ignore step 4 and 5 for those k.</span></td>
      </tr>
      <tr>
        <td id="L3393" class="blob-num js-line-number" data-line-number="3393"></td>
        <td id="LC3393" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3394" class="blob-num js-line-number" data-line-number="3394"></td>
        <td id="LC3394" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(d) <span class="pl-k">&lt;</span> <span class="pl-c1">1e-6</span>) {</td>
      </tr>
      <tr>
        <td id="L3395" class="blob-num js-line-number" data-line-number="3395"></td>
        <td id="LC3395" class="blob-code js-file-line">      m[i] <span class="pl-k">=</span> m[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3396" class="blob-num js-line-number" data-line-number="3396"></td>
        <td id="LC3396" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3397" class="blob-num js-line-number" data-line-number="3397"></td>
        <td id="LC3397" class="blob-code js-file-line">      <span class="pl-c">// 4. Let ak = mk / dk and bk = m{k + 1} / dk.</span></td>
      </tr>
      <tr>
        <td id="L3398" class="blob-num js-line-number" data-line-number="3398"></td>
        <td id="LC3398" class="blob-code js-file-line">      a <span class="pl-k">=</span> m[i] / d;</td>
      </tr>
      <tr>
        <td id="L3399" class="blob-num js-line-number" data-line-number="3399"></td>
        <td id="LC3399" class="blob-code js-file-line">      b <span class="pl-k">=</span> m[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] / d;</td>
      </tr>
      <tr>
        <td id="L3400" class="blob-num js-line-number" data-line-number="3400"></td>
        <td id="LC3400" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3401" class="blob-num js-line-number" data-line-number="3401"></td>
        <td id="LC3401" class="blob-code js-file-line">      <span class="pl-c">// 5. Prevent overshoot and ensure monotonicity by restricting the</span></td>
      </tr>
      <tr>
        <td id="L3402" class="blob-num js-line-number" data-line-number="3402"></td>
        <td id="LC3402" class="blob-code js-file-line">      <span class="pl-c">// magnitude of vector &lt;ak, bk&gt; to a circle of radius 3.</span></td>
      </tr>
      <tr>
        <td id="L3403" class="blob-num js-line-number" data-line-number="3403"></td>
        <td id="LC3403" class="blob-code js-file-line">      s <span class="pl-k">=</span> a <span class="pl-k">*</span> a <span class="pl-k">+</span> b <span class="pl-k">*</span> b;</td>
      </tr>
      <tr>
        <td id="L3404" class="blob-num js-line-number" data-line-number="3404"></td>
        <td id="LC3404" class="blob-code js-file-line">      <span class="pl-k">if</span> (s <span class="pl-k">&gt;</span> <span class="pl-c1">9</span>) {</td>
      </tr>
      <tr>
        <td id="L3405" class="blob-num js-line-number" data-line-number="3405"></td>
        <td id="LC3405" class="blob-code js-file-line">        s <span class="pl-k">=</span> d <span class="pl-k">*</span> <span class="pl-c1">3</span> / <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(s);</td>
      </tr>
      <tr>
        <td id="L3406" class="blob-num js-line-number" data-line-number="3406"></td>
        <td id="LC3406" class="blob-code js-file-line">        m[i] <span class="pl-k">=</span> s <span class="pl-k">*</span> a;</td>
      </tr>
      <tr>
        <td id="L3407" class="blob-num js-line-number" data-line-number="3407"></td>
        <td id="LC3407" class="blob-code js-file-line">        m[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> s <span class="pl-k">*</span> b;</td>
      </tr>
      <tr>
        <td id="L3408" class="blob-num js-line-number" data-line-number="3408"></td>
        <td id="LC3408" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3409" class="blob-num js-line-number" data-line-number="3409"></td>
        <td id="LC3409" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3410" class="blob-num js-line-number" data-line-number="3410"></td>
        <td id="LC3410" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3411" class="blob-num js-line-number" data-line-number="3411"></td>
        <td id="LC3411" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3412" class="blob-num js-line-number" data-line-number="3412"></td>
        <td id="LC3412" class="blob-code js-file-line">  <span class="pl-c">// Compute the normalized tangent vector from the slopes. Note that if x is</span></td>
      </tr>
      <tr>
        <td id="L3413" class="blob-num js-line-number" data-line-number="3413"></td>
        <td id="LC3413" class="blob-code js-file-line">  <span class="pl-c">// not monotonic, it&#39;s possible that the slope will be infinite, so we protect</span></td>
      </tr>
      <tr>
        <td id="L3414" class="blob-num js-line-number" data-line-number="3414"></td>
        <td id="LC3414" class="blob-code js-file-line">  <span class="pl-c">// against NaN by setting the coordinate to zero.</span></td>
      </tr>
      <tr>
        <td id="L3415" class="blob-num js-line-number" data-line-number="3415"></td>
        <td id="LC3415" class="blob-code js-file-line">  i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;=</span> j) {</td>
      </tr>
      <tr>
        <td id="L3416" class="blob-num js-line-number" data-line-number="3416"></td>
        <td id="LC3416" class="blob-code js-file-line">    s <span class="pl-k">=</span> (points[<span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(j, i <span class="pl-k">+</span> <span class="pl-c1">1</span>)][<span class="pl-c1">0</span>] <span class="pl-k">-</span> points[<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>, i <span class="pl-k">-</span> <span class="pl-c1">1</span>)][<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L3417" class="blob-num js-line-number" data-line-number="3417"></td>
        <td id="LC3417" class="blob-code js-file-line">      / (<span class="pl-c1">6</span> <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> m[i] <span class="pl-k">*</span> m[i]));</td>
      </tr>
      <tr>
        <td id="L3418" class="blob-num js-line-number" data-line-number="3418"></td>
        <td id="LC3418" class="blob-code js-file-line">    tangents.<span class="pl-s3">push</span>([s <span class="pl-k">||</span> <span class="pl-c1">0</span>, m[i] <span class="pl-k">*</span> s <span class="pl-k">||</span> <span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3419" class="blob-num js-line-number" data-line-number="3419"></td>
        <td id="LC3419" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3420" class="blob-num js-line-number" data-line-number="3420"></td>
        <td id="LC3420" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3421" class="blob-num js-line-number" data-line-number="3421"></td>
        <td id="LC3421" class="blob-code js-file-line">  <span class="pl-k">return</span> tangents;</td>
      </tr>
      <tr>
        <td id="L3422" class="blob-num js-line-number" data-line-number="3422"></td>
        <td id="LC3422" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3423" class="blob-num js-line-number" data-line-number="3423"></td>
        <td id="LC3423" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3424" class="blob-num js-line-number" data-line-number="3424"></td>
        <td id="LC3424" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineMonotone</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3425" class="blob-num js-line-number" data-line-number="3425"></td>
        <td id="LC3425" class="blob-code js-file-line">  <span class="pl-k">return</span> points.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L3426" class="blob-num js-line-number" data-line-number="3426"></td>
        <td id="LC3426" class="blob-code js-file-line">      <span class="pl-k">?</span> d3_svg_lineLinear(points)</td>
      </tr>
      <tr>
        <td id="L3427" class="blob-num js-line-number" data-line-number="3427"></td>
        <td id="LC3427" class="blob-code js-file-line">      <span class="pl-k">:</span> points[<span class="pl-c1">0</span>] <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L3428" class="blob-num js-line-number" data-line-number="3428"></td>
        <td id="LC3428" class="blob-code js-file-line">        d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));</td>
      </tr>
      <tr>
        <td id="L3429" class="blob-num js-line-number" data-line-number="3429"></td>
        <td id="LC3429" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3430" class="blob-num js-line-number" data-line-number="3430"></td>
        <td id="LC3430" class="blob-code js-file-line"><span class="pl-s3">d3.svg.line</span>.<span class="pl-en">radial</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3431" class="blob-num js-line-number" data-line-number="3431"></td>
        <td id="LC3431" class="blob-code js-file-line">  <span class="pl-s">var</span> line <span class="pl-k">=</span> d3_svg_line(d3_svg_lineRadial);</td>
      </tr>
      <tr>
        <td id="L3432" class="blob-num js-line-number" data-line-number="3432"></td>
        <td id="LC3432" class="blob-code js-file-line">  line.radius <span class="pl-k">=</span> line.<span class="pl-sc">x</span>, <span class="pl-k">delete</span> line.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3433" class="blob-num js-line-number" data-line-number="3433"></td>
        <td id="LC3433" class="blob-code js-file-line">  line.angle <span class="pl-k">=</span> line.<span class="pl-sc">y</span>, <span class="pl-k">delete</span> line.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3434" class="blob-num js-line-number" data-line-number="3434"></td>
        <td id="LC3434" class="blob-code js-file-line">  <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3435" class="blob-num js-line-number" data-line-number="3435"></td>
        <td id="LC3435" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3436" class="blob-num js-line-number" data-line-number="3436"></td>
        <td id="LC3436" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3437" class="blob-num js-line-number" data-line-number="3437"></td>
        <td id="LC3437" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_lineRadial</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3438" class="blob-num js-line-number" data-line-number="3438"></td>
        <td id="LC3438" class="blob-code js-file-line">  <span class="pl-s">var</span> point,</td>
      </tr>
      <tr>
        <td id="L3439" class="blob-num js-line-number" data-line-number="3439"></td>
        <td id="LC3439" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L3440" class="blob-num js-line-number" data-line-number="3440"></td>
        <td id="LC3440" class="blob-code js-file-line">      n <span class="pl-k">=</span> points.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L3441" class="blob-num js-line-number" data-line-number="3441"></td>
        <td id="LC3441" class="blob-code js-file-line">      r,</td>
      </tr>
      <tr>
        <td id="L3442" class="blob-num js-line-number" data-line-number="3442"></td>
        <td id="LC3442" class="blob-code js-file-line">      a;</td>
      </tr>
      <tr>
        <td id="L3443" class="blob-num js-line-number" data-line-number="3443"></td>
        <td id="LC3443" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L3444" class="blob-num js-line-number" data-line-number="3444"></td>
        <td id="LC3444" class="blob-code js-file-line">    point <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L3445" class="blob-num js-line-number" data-line-number="3445"></td>
        <td id="LC3445" class="blob-code js-file-line">    r <span class="pl-k">=</span> point[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3446" class="blob-num js-line-number" data-line-number="3446"></td>
        <td id="LC3446" class="blob-code js-file-line">    a <span class="pl-k">=</span> point[<span class="pl-c1">1</span>] <span class="pl-k">+</span> d3_svg_arcOffset;</td>
      </tr>
      <tr>
        <td id="L3447" class="blob-num js-line-number" data-line-number="3447"></td>
        <td id="LC3447" class="blob-code js-file-line">    point[<span class="pl-c1">0</span>] <span class="pl-k">=</span> r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a);</td>
      </tr>
      <tr>
        <td id="L3448" class="blob-num js-line-number" data-line-number="3448"></td>
        <td id="LC3448" class="blob-code js-file-line">    point[<span class="pl-c1">1</span>] <span class="pl-k">=</span> r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a);</td>
      </tr>
      <tr>
        <td id="L3449" class="blob-num js-line-number" data-line-number="3449"></td>
        <td id="LC3449" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3450" class="blob-num js-line-number" data-line-number="3450"></td>
        <td id="LC3450" class="blob-code js-file-line">  <span class="pl-k">return</span> points;</td>
      </tr>
      <tr>
        <td id="L3451" class="blob-num js-line-number" data-line-number="3451"></td>
        <td id="LC3451" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3452" class="blob-num js-line-number" data-line-number="3452"></td>
        <td id="LC3452" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_area</span>(<span class="pl-vpf">projection</span>) {</td>
      </tr>
      <tr>
        <td id="L3453" class="blob-num js-line-number" data-line-number="3453"></td>
        <td id="LC3453" class="blob-code js-file-line">  <span class="pl-s">var</span> x0 <span class="pl-k">=</span> d3_svg_lineX,</td>
      </tr>
      <tr>
        <td id="L3454" class="blob-num js-line-number" data-line-number="3454"></td>
        <td id="LC3454" class="blob-code js-file-line">      x1 <span class="pl-k">=</span> d3_svg_lineX,</td>
      </tr>
      <tr>
        <td id="L3455" class="blob-num js-line-number" data-line-number="3455"></td>
        <td id="LC3455" class="blob-code js-file-line">      y0 <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3456" class="blob-num js-line-number" data-line-number="3456"></td>
        <td id="LC3456" class="blob-code js-file-line">      y1 <span class="pl-k">=</span> d3_svg_lineY,</td>
      </tr>
      <tr>
        <td id="L3457" class="blob-num js-line-number" data-line-number="3457"></td>
        <td id="LC3457" class="blob-code js-file-line">      interpolate,</td>
      </tr>
      <tr>
        <td id="L3458" class="blob-num js-line-number" data-line-number="3458"></td>
        <td id="LC3458" class="blob-code js-file-line">      i0,</td>
      </tr>
      <tr>
        <td id="L3459" class="blob-num js-line-number" data-line-number="3459"></td>
        <td id="LC3459" class="blob-code js-file-line">      i1,</td>
      </tr>
      <tr>
        <td id="L3460" class="blob-num js-line-number" data-line-number="3460"></td>
        <td id="LC3460" class="blob-code js-file-line">      tension <span class="pl-k">=</span> .<span class="pl-c1">7</span>;</td>
      </tr>
      <tr>
        <td id="L3461" class="blob-num js-line-number" data-line-number="3461"></td>
        <td id="LC3461" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3462" class="blob-num js-line-number" data-line-number="3462"></td>
        <td id="LC3462" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">area</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3463" class="blob-num js-line-number" data-line-number="3463"></td>
        <td id="LC3463" class="blob-code js-file-line">    <span class="pl-k">if</span> (d.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3464" class="blob-num js-line-number" data-line-number="3464"></td>
        <td id="LC3464" class="blob-code js-file-line">    <span class="pl-s">var</span> points0 <span class="pl-k">=</span> d3_svg_linePoints(<span class="pl-v">this</span>, d, x0, y0),</td>
      </tr>
      <tr>
        <td id="L3465" class="blob-num js-line-number" data-line-number="3465"></td>
        <td id="LC3465" class="blob-code js-file-line">        points1 <span class="pl-k">=</span> d3_svg_linePoints(<span class="pl-v">this</span>, d, x0 <span class="pl-k">===</span> x1 <span class="pl-k">?</span> d3_svg_areaX(points0) <span class="pl-k">:</span> x1, y0 <span class="pl-k">===</span> y1 <span class="pl-k">?</span> d3_svg_areaY(points0) <span class="pl-k">:</span> y1);</td>
      </tr>
      <tr>
        <td id="L3466" class="blob-num js-line-number" data-line-number="3466"></td>
        <td id="LC3466" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> i0(projection(points1), tension)</td>
      </tr>
      <tr>
        <td id="L3467" class="blob-num js-line-number" data-line-number="3467"></td>
        <td id="LC3467" class="blob-code js-file-line">         <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> i1(projection(points0.<span class="pl-s3">reverse</span>()), tension)</td>
      </tr>
      <tr>
        <td id="L3468" class="blob-num js-line-number" data-line-number="3468"></td>
        <td id="LC3468" class="blob-code js-file-line">         <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3469" class="blob-num js-line-number" data-line-number="3469"></td>
        <td id="LC3469" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3470" class="blob-num js-line-number" data-line-number="3470"></td>
        <td id="LC3470" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3471" class="blob-num js-line-number" data-line-number="3471"></td>
        <td id="LC3471" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3472" class="blob-num js-line-number" data-line-number="3472"></td>
        <td id="LC3472" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> x1;</td>
      </tr>
      <tr>
        <td id="L3473" class="blob-num js-line-number" data-line-number="3473"></td>
        <td id="LC3473" class="blob-code js-file-line">    x0 <span class="pl-k">=</span> x1 <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3474" class="blob-num js-line-number" data-line-number="3474"></td>
        <td id="LC3474" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3475" class="blob-num js-line-number" data-line-number="3475"></td>
        <td id="LC3475" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3476" class="blob-num js-line-number" data-line-number="3476"></td>
        <td id="LC3476" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3477" class="blob-num js-line-number" data-line-number="3477"></td>
        <td id="LC3477" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">x0</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3478" class="blob-num js-line-number" data-line-number="3478"></td>
        <td id="LC3478" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> x0;</td>
      </tr>
      <tr>
        <td id="L3479" class="blob-num js-line-number" data-line-number="3479"></td>
        <td id="LC3479" class="blob-code js-file-line">    x0 <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3480" class="blob-num js-line-number" data-line-number="3480"></td>
        <td id="LC3480" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3481" class="blob-num js-line-number" data-line-number="3481"></td>
        <td id="LC3481" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3482" class="blob-num js-line-number" data-line-number="3482"></td>
        <td id="LC3482" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3483" class="blob-num js-line-number" data-line-number="3483"></td>
        <td id="LC3483" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">x1</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3484" class="blob-num js-line-number" data-line-number="3484"></td>
        <td id="LC3484" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> x1;</td>
      </tr>
      <tr>
        <td id="L3485" class="blob-num js-line-number" data-line-number="3485"></td>
        <td id="LC3485" class="blob-code js-file-line">    x1 <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3486" class="blob-num js-line-number" data-line-number="3486"></td>
        <td id="LC3486" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3487" class="blob-num js-line-number" data-line-number="3487"></td>
        <td id="LC3487" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3488" class="blob-num js-line-number" data-line-number="3488"></td>
        <td id="LC3488" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3489" class="blob-num js-line-number" data-line-number="3489"></td>
        <td id="LC3489" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3490" class="blob-num js-line-number" data-line-number="3490"></td>
        <td id="LC3490" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> y1;</td>
      </tr>
      <tr>
        <td id="L3491" class="blob-num js-line-number" data-line-number="3491"></td>
        <td id="LC3491" class="blob-code js-file-line">    y0 <span class="pl-k">=</span> y1 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3492" class="blob-num js-line-number" data-line-number="3492"></td>
        <td id="LC3492" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3493" class="blob-num js-line-number" data-line-number="3493"></td>
        <td id="LC3493" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3494" class="blob-num js-line-number" data-line-number="3494"></td>
        <td id="LC3494" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3495" class="blob-num js-line-number" data-line-number="3495"></td>
        <td id="LC3495" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">y0</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3496" class="blob-num js-line-number" data-line-number="3496"></td>
        <td id="LC3496" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> y0;</td>
      </tr>
      <tr>
        <td id="L3497" class="blob-num js-line-number" data-line-number="3497"></td>
        <td id="LC3497" class="blob-code js-file-line">    y0 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3498" class="blob-num js-line-number" data-line-number="3498"></td>
        <td id="LC3498" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3499" class="blob-num js-line-number" data-line-number="3499"></td>
        <td id="LC3499" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">y1</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> y1;</td>
      </tr>
      <tr>
        <td id="L3503" class="blob-num js-line-number" data-line-number="3503"></td>
        <td id="LC3503" class="blob-code js-file-line">    y1 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3504" class="blob-num js-line-number" data-line-number="3504"></td>
        <td id="LC3504" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3505" class="blob-num js-line-number" data-line-number="3505"></td>
        <td id="LC3505" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3506" class="blob-num js-line-number" data-line-number="3506"></td>
        <td id="LC3506" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3507" class="blob-num js-line-number" data-line-number="3507"></td>
        <td id="LC3507" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3508" class="blob-num js-line-number" data-line-number="3508"></td>
        <td id="LC3508" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L3509" class="blob-num js-line-number" data-line-number="3509"></td>
        <td id="LC3509" class="blob-code js-file-line">    i0 <span class="pl-k">=</span> d3_svg_lineInterpolators[interpolate <span class="pl-k">=</span> x];</td>
      </tr>
      <tr>
        <td id="L3510" class="blob-num js-line-number" data-line-number="3510"></td>
        <td id="LC3510" class="blob-code js-file-line">    i1 <span class="pl-k">=</span> i0.reverse <span class="pl-k">||</span> i0;</td>
      </tr>
      <tr>
        <td id="L3511" class="blob-num js-line-number" data-line-number="3511"></td>
        <td id="LC3511" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3512" class="blob-num js-line-number" data-line-number="3512"></td>
        <td id="LC3512" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3513" class="blob-num js-line-number" data-line-number="3513"></td>
        <td id="LC3513" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3514" class="blob-num js-line-number" data-line-number="3514"></td>
        <td id="LC3514" class="blob-code js-file-line">  <span class="pl-s3">area</span>.<span class="pl-en">tension</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3515" class="blob-num js-line-number" data-line-number="3515"></td>
        <td id="LC3515" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tension;</td>
      </tr>
      <tr>
        <td id="L3516" class="blob-num js-line-number" data-line-number="3516"></td>
        <td id="LC3516" class="blob-code js-file-line">    tension <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3517" class="blob-num js-line-number" data-line-number="3517"></td>
        <td id="LC3517" class="blob-code js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3518" class="blob-num js-line-number" data-line-number="3518"></td>
        <td id="LC3518" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3519" class="blob-num js-line-number" data-line-number="3519"></td>
        <td id="LC3519" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3520" class="blob-num js-line-number" data-line-number="3520"></td>
        <td id="LC3520" class="blob-code js-file-line">  <span class="pl-k">return</span> area.interpolate(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3521" class="blob-num js-line-number" data-line-number="3521"></td>
        <td id="LC3521" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3522" class="blob-num js-line-number" data-line-number="3522"></td>
        <td id="LC3522" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3523" class="blob-num js-line-number" data-line-number="3523"></td>
        <td id="LC3523" class="blob-code js-file-line">d3_svg_lineStepBefore.reverse <span class="pl-k">=</span> d3_svg_lineStepAfter;</td>
      </tr>
      <tr>
        <td id="L3524" class="blob-num js-line-number" data-line-number="3524"></td>
        <td id="LC3524" class="blob-code js-file-line">d3_svg_lineStepAfter.reverse <span class="pl-k">=</span> d3_svg_lineStepBefore;</td>
      </tr>
      <tr>
        <td id="L3525" class="blob-num js-line-number" data-line-number="3525"></td>
        <td id="LC3525" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3526" class="blob-num js-line-number" data-line-number="3526"></td>
        <td id="LC3526" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">area</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3527" class="blob-num js-line-number" data-line-number="3527"></td>
        <td id="LC3527" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_svg_area(<span class="pl-s3">Object</span>);</td>
      </tr>
      <tr>
        <td id="L3528" class="blob-num js-line-number" data-line-number="3528"></td>
        <td id="LC3528" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3529" class="blob-num js-line-number" data-line-number="3529"></td>
        <td id="LC3529" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3530" class="blob-num js-line-number" data-line-number="3530"></td>
        <td id="LC3530" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_areaX</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3531" class="blob-num js-line-number" data-line-number="3531"></td>
        <td id="LC3531" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3532" class="blob-num js-line-number" data-line-number="3532"></td>
        <td id="LC3532" class="blob-code js-file-line">    <span class="pl-k">return</span> points[i][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3533" class="blob-num js-line-number" data-line-number="3533"></td>
        <td id="LC3533" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3534" class="blob-num js-line-number" data-line-number="3534"></td>
        <td id="LC3534" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3535" class="blob-num js-line-number" data-line-number="3535"></td>
        <td id="LC3535" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3536" class="blob-num js-line-number" data-line-number="3536"></td>
        <td id="LC3536" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_areaY</span>(<span class="pl-vpf">points</span>) {</td>
      </tr>
      <tr>
        <td id="L3537" class="blob-num js-line-number" data-line-number="3537"></td>
        <td id="LC3537" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3538" class="blob-num js-line-number" data-line-number="3538"></td>
        <td id="LC3538" class="blob-code js-file-line">    <span class="pl-k">return</span> points[i][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3539" class="blob-num js-line-number" data-line-number="3539"></td>
        <td id="LC3539" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3540" class="blob-num js-line-number" data-line-number="3540"></td>
        <td id="LC3540" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3541" class="blob-num js-line-number" data-line-number="3541"></td>
        <td id="LC3541" class="blob-code js-file-line"><span class="pl-s3">d3.svg.area</span>.<span class="pl-en">radial</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3542" class="blob-num js-line-number" data-line-number="3542"></td>
        <td id="LC3542" class="blob-code js-file-line">  <span class="pl-s">var</span> area <span class="pl-k">=</span> d3_svg_area(d3_svg_lineRadial);</td>
      </tr>
      <tr>
        <td id="L3543" class="blob-num js-line-number" data-line-number="3543"></td>
        <td id="LC3543" class="blob-code js-file-line">  area.radius <span class="pl-k">=</span> area.<span class="pl-sc">x</span>, <span class="pl-k">delete</span> area.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3544" class="blob-num js-line-number" data-line-number="3544"></td>
        <td id="LC3544" class="blob-code js-file-line">  area.innerRadius <span class="pl-k">=</span> area.x0, <span class="pl-k">delete</span> area.x0;</td>
      </tr>
      <tr>
        <td id="L3545" class="blob-num js-line-number" data-line-number="3545"></td>
        <td id="LC3545" class="blob-code js-file-line">  area.outerRadius <span class="pl-k">=</span> area.x1, <span class="pl-k">delete</span> area.x1;</td>
      </tr>
      <tr>
        <td id="L3546" class="blob-num js-line-number" data-line-number="3546"></td>
        <td id="LC3546" class="blob-code js-file-line">  area.angle <span class="pl-k">=</span> area.<span class="pl-sc">y</span>, <span class="pl-k">delete</span> area.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3547" class="blob-num js-line-number" data-line-number="3547"></td>
        <td id="LC3547" class="blob-code js-file-line">  area.startAngle <span class="pl-k">=</span> area.y0, <span class="pl-k">delete</span> area.y0;</td>
      </tr>
      <tr>
        <td id="L3548" class="blob-num js-line-number" data-line-number="3548"></td>
        <td id="LC3548" class="blob-code js-file-line">  area.endAngle <span class="pl-k">=</span> area.y1, <span class="pl-k">delete</span> area.y1;</td>
      </tr>
      <tr>
        <td id="L3549" class="blob-num js-line-number" data-line-number="3549"></td>
        <td id="LC3549" class="blob-code js-file-line">  <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L3550" class="blob-num js-line-number" data-line-number="3550"></td>
        <td id="LC3550" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3551" class="blob-num js-line-number" data-line-number="3551"></td>
        <td id="LC3551" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">chord</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3552" class="blob-num js-line-number" data-line-number="3552"></td>
        <td id="LC3552" class="blob-code js-file-line">  <span class="pl-s">var</span> source <span class="pl-k">=</span> d3_svg_chordSource,</td>
      </tr>
      <tr>
        <td id="L3553" class="blob-num js-line-number" data-line-number="3553"></td>
        <td id="LC3553" class="blob-code js-file-line">      target <span class="pl-k">=</span> d3_svg_chordTarget,</td>
      </tr>
      <tr>
        <td id="L3554" class="blob-num js-line-number" data-line-number="3554"></td>
        <td id="LC3554" class="blob-code js-file-line">      radius <span class="pl-k">=</span> d3_svg_chordRadius,</td>
      </tr>
      <tr>
        <td id="L3555" class="blob-num js-line-number" data-line-number="3555"></td>
        <td id="LC3555" class="blob-code js-file-line">      startAngle <span class="pl-k">=</span> d3_svg_arcStartAngle,</td>
      </tr>
      <tr>
        <td id="L3556" class="blob-num js-line-number" data-line-number="3556"></td>
        <td id="LC3556" class="blob-code js-file-line">      endAngle <span class="pl-k">=</span> d3_svg_arcEndAngle;</td>
      </tr>
      <tr>
        <td id="L3557" class="blob-num js-line-number" data-line-number="3557"></td>
        <td id="LC3557" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3558" class="blob-num js-line-number" data-line-number="3558"></td>
        <td id="LC3558" class="blob-code js-file-line">  <span class="pl-c">// TODO Allow control point to be customized.</span></td>
      </tr>
      <tr>
        <td id="L3559" class="blob-num js-line-number" data-line-number="3559"></td>
        <td id="LC3559" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3560" class="blob-num js-line-number" data-line-number="3560"></td>
        <td id="LC3560" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">chord</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3561" class="blob-num js-line-number" data-line-number="3561"></td>
        <td id="LC3561" class="blob-code js-file-line">    <span class="pl-s">var</span> s <span class="pl-k">=</span> subgroup(<span class="pl-v">this</span>, source, d, i),</td>
      </tr>
      <tr>
        <td id="L3562" class="blob-num js-line-number" data-line-number="3562"></td>
        <td id="LC3562" class="blob-code js-file-line">        t <span class="pl-k">=</span> subgroup(<span class="pl-v">this</span>, target, d, i);</td>
      </tr>
      <tr>
        <td id="L3563" class="blob-num js-line-number" data-line-number="3563"></td>
        <td id="LC3563" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> s.p0</td>
      </tr>
      <tr>
        <td id="L3564" class="blob-num js-line-number" data-line-number="3564"></td>
        <td id="LC3564" class="blob-code js-file-line">      <span class="pl-k">+</span> arc(s.r, s.p1, s.a1 <span class="pl-k">-</span> s.a0) <span class="pl-k">+</span> (equals(s, t)</td>
      </tr>
      <tr>
        <td id="L3565" class="blob-num js-line-number" data-line-number="3565"></td>
        <td id="LC3565" class="blob-code js-file-line">      <span class="pl-k">?</span> curve(s.r, s.p1, s.r, s.p0)</td>
      </tr>
      <tr>
        <td id="L3566" class="blob-num js-line-number" data-line-number="3566"></td>
        <td id="LC3566" class="blob-code js-file-line">      <span class="pl-k">:</span> curve(s.r, s.p1, t.r, t.p0)</td>
      </tr>
      <tr>
        <td id="L3567" class="blob-num js-line-number" data-line-number="3567"></td>
        <td id="LC3567" class="blob-code js-file-line">      <span class="pl-k">+</span> arc(t.r, t.p1, t.a1 <span class="pl-k">-</span> t.a0)</td>
      </tr>
      <tr>
        <td id="L3568" class="blob-num js-line-number" data-line-number="3568"></td>
        <td id="LC3568" class="blob-code js-file-line">      <span class="pl-k">+</span> curve(t.r, t.p1, s.r, s.p0))</td>
      </tr>
      <tr>
        <td id="L3569" class="blob-num js-line-number" data-line-number="3569"></td>
        <td id="LC3569" class="blob-code js-file-line">      <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3570" class="blob-num js-line-number" data-line-number="3570"></td>
        <td id="LC3570" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3571" class="blob-num js-line-number" data-line-number="3571"></td>
        <td id="LC3571" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3572" class="blob-num js-line-number" data-line-number="3572"></td>
        <td id="LC3572" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">subgroup</span>(<span class="pl-vpf">self</span>, <span class="pl-vpf">f</span>, <span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3573" class="blob-num js-line-number" data-line-number="3573"></td>
        <td id="LC3573" class="blob-code js-file-line">    <span class="pl-s">var</span> subgroup <span class="pl-k">=</span> f.<span class="pl-s3">call</span>(self, d, i),</td>
      </tr>
      <tr>
        <td id="L3574" class="blob-num js-line-number" data-line-number="3574"></td>
        <td id="LC3574" class="blob-code js-file-line">        r <span class="pl-k">=</span> radius.<span class="pl-s3">call</span>(self, subgroup, i),</td>
      </tr>
      <tr>
        <td id="L3575" class="blob-num js-line-number" data-line-number="3575"></td>
        <td id="LC3575" class="blob-code js-file-line">        a0 <span class="pl-k">=</span> startAngle.<span class="pl-s3">call</span>(self, subgroup, i) <span class="pl-k">+</span> d3_svg_arcOffset,</td>
      </tr>
      <tr>
        <td id="L3576" class="blob-num js-line-number" data-line-number="3576"></td>
        <td id="LC3576" class="blob-code js-file-line">        a1 <span class="pl-k">=</span> endAngle.<span class="pl-s3">call</span>(self, subgroup, i) <span class="pl-k">+</span> d3_svg_arcOffset;</td>
      </tr>
      <tr>
        <td id="L3577" class="blob-num js-line-number" data-line-number="3577"></td>
        <td id="LC3577" class="blob-code js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3578" class="blob-num js-line-number" data-line-number="3578"></td>
        <td id="LC3578" class="blob-code js-file-line">      r<span class="pl-k">:</span> r,</td>
      </tr>
      <tr>
        <td id="L3579" class="blob-num js-line-number" data-line-number="3579"></td>
        <td id="LC3579" class="blob-code js-file-line">      a0<span class="pl-k">:</span> a0,</td>
      </tr>
      <tr>
        <td id="L3580" class="blob-num js-line-number" data-line-number="3580"></td>
        <td id="LC3580" class="blob-code js-file-line">      a1<span class="pl-k">:</span> a1,</td>
      </tr>
      <tr>
        <td id="L3581" class="blob-num js-line-number" data-line-number="3581"></td>
        <td id="LC3581" class="blob-code js-file-line">      p0<span class="pl-k">:</span> [r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a0), r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a0)],</td>
      </tr>
      <tr>
        <td id="L3582" class="blob-num js-line-number" data-line-number="3582"></td>
        <td id="LC3582" class="blob-code js-file-line">      p1<span class="pl-k">:</span> [r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a1), r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a1)]</td>
      </tr>
      <tr>
        <td id="L3583" class="blob-num js-line-number" data-line-number="3583"></td>
        <td id="LC3583" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3584" class="blob-num js-line-number" data-line-number="3584"></td>
        <td id="LC3584" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3585" class="blob-num js-line-number" data-line-number="3585"></td>
        <td id="LC3585" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3586" class="blob-num js-line-number" data-line-number="3586"></td>
        <td id="LC3586" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">equals</span>(<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3587" class="blob-num js-line-number" data-line-number="3587"></td>
        <td id="LC3587" class="blob-code js-file-line">    <span class="pl-k">return</span> a.a0 <span class="pl-k">==</span> b.a0 <span class="pl-k">&amp;&amp;</span> a.a1 <span class="pl-k">==</span> b.a1;</td>
      </tr>
      <tr>
        <td id="L3588" class="blob-num js-line-number" data-line-number="3588"></td>
        <td id="LC3588" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3589" class="blob-num js-line-number" data-line-number="3589"></td>
        <td id="LC3589" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3590" class="blob-num js-line-number" data-line-number="3590"></td>
        <td id="LC3590" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">arc</span>(<span class="pl-vpf">r</span>, <span class="pl-vpf">p</span>, <span class="pl-vpf">a</span>) {</td>
      </tr>
      <tr>
        <td id="L3591" class="blob-num js-line-number" data-line-number="3591"></td>
        <td id="LC3591" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">+</span>(a <span class="pl-k">&gt;</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,1 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p;</td>
      </tr>
      <tr>
        <td id="L3592" class="blob-num js-line-number" data-line-number="3592"></td>
        <td id="LC3592" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3593" class="blob-num js-line-number" data-line-number="3593"></td>
        <td id="LC3593" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3594" class="blob-num js-line-number" data-line-number="3594"></td>
        <td id="LC3594" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">curve</span>(<span class="pl-vpf">r0</span>, <span class="pl-vpf">p0</span>, <span class="pl-vpf">r1</span>, <span class="pl-vpf">p1</span>) {</td>
      </tr>
      <tr>
        <td id="L3595" class="blob-num js-line-number" data-line-number="3595"></td>
        <td id="LC3595" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Q 0,0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p1;</td>
      </tr>
      <tr>
        <td id="L3596" class="blob-num js-line-number" data-line-number="3596"></td>
        <td id="LC3596" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3597" class="blob-num js-line-number" data-line-number="3597"></td>
        <td id="LC3597" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3598" class="blob-num js-line-number" data-line-number="3598"></td>
        <td id="LC3598" class="blob-code js-file-line">  <span class="pl-s3">chord</span>.<span class="pl-en">radius</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3599" class="blob-num js-line-number" data-line-number="3599"></td>
        <td id="LC3599" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> radius;</td>
      </tr>
      <tr>
        <td id="L3600" class="blob-num js-line-number" data-line-number="3600"></td>
        <td id="LC3600" class="blob-code js-file-line">    radius <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L3601" class="blob-num js-line-number" data-line-number="3601"></td>
        <td id="LC3601" class="blob-code js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L3602" class="blob-num js-line-number" data-line-number="3602"></td>
        <td id="LC3602" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3603" class="blob-num js-line-number" data-line-number="3603"></td>
        <td id="LC3603" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3604" class="blob-num js-line-number" data-line-number="3604"></td>
        <td id="LC3604" class="blob-code js-file-line">  <span class="pl-s3">chord</span>.<span class="pl-en">source</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3605" class="blob-num js-line-number" data-line-number="3605"></td>
        <td id="LC3605" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> source;</td>
      </tr>
      <tr>
        <td id="L3606" class="blob-num js-line-number" data-line-number="3606"></td>
        <td id="LC3606" class="blob-code js-file-line">    source <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L3607" class="blob-num js-line-number" data-line-number="3607"></td>
        <td id="LC3607" class="blob-code js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L3608" class="blob-num js-line-number" data-line-number="3608"></td>
        <td id="LC3608" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3609" class="blob-num js-line-number" data-line-number="3609"></td>
        <td id="LC3609" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3610" class="blob-num js-line-number" data-line-number="3610"></td>
        <td id="LC3610" class="blob-code js-file-line">  <span class="pl-s3">chord</span>.<span class="pl-en">target</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3611" class="blob-num js-line-number" data-line-number="3611"></td>
        <td id="LC3611" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L3612" class="blob-num js-line-number" data-line-number="3612"></td>
        <td id="LC3612" class="blob-code js-file-line">    target <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L3613" class="blob-num js-line-number" data-line-number="3613"></td>
        <td id="LC3613" class="blob-code js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L3614" class="blob-num js-line-number" data-line-number="3614"></td>
        <td id="LC3614" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3615" class="blob-num js-line-number" data-line-number="3615"></td>
        <td id="LC3615" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3616" class="blob-num js-line-number" data-line-number="3616"></td>
        <td id="LC3616" class="blob-code js-file-line">  <span class="pl-s3">chord</span>.<span class="pl-en">startAngle</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3617" class="blob-num js-line-number" data-line-number="3617"></td>
        <td id="LC3617" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> startAngle;</td>
      </tr>
      <tr>
        <td id="L3618" class="blob-num js-line-number" data-line-number="3618"></td>
        <td id="LC3618" class="blob-code js-file-line">    startAngle <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L3619" class="blob-num js-line-number" data-line-number="3619"></td>
        <td id="LC3619" class="blob-code js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L3620" class="blob-num js-line-number" data-line-number="3620"></td>
        <td id="LC3620" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3621" class="blob-num js-line-number" data-line-number="3621"></td>
        <td id="LC3621" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3622" class="blob-num js-line-number" data-line-number="3622"></td>
        <td id="LC3622" class="blob-code js-file-line">  <span class="pl-s3">chord</span>.<span class="pl-en">endAngle</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L3623" class="blob-num js-line-number" data-line-number="3623"></td>
        <td id="LC3623" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> endAngle;</td>
      </tr>
      <tr>
        <td id="L3624" class="blob-num js-line-number" data-line-number="3624"></td>
        <td id="LC3624" class="blob-code js-file-line">    endAngle <span class="pl-k">=</span> d3.functor(v);</td>
      </tr>
      <tr>
        <td id="L3625" class="blob-num js-line-number" data-line-number="3625"></td>
        <td id="LC3625" class="blob-code js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L3626" class="blob-num js-line-number" data-line-number="3626"></td>
        <td id="LC3626" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3627" class="blob-num js-line-number" data-line-number="3627"></td>
        <td id="LC3627" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3628" class="blob-num js-line-number" data-line-number="3628"></td>
        <td id="LC3628" class="blob-code js-file-line">  <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L3629" class="blob-num js-line-number" data-line-number="3629"></td>
        <td id="LC3629" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3630" class="blob-num js-line-number" data-line-number="3630"></td>
        <td id="LC3630" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3631" class="blob-num js-line-number" data-line-number="3631"></td>
        <td id="LC3631" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_chordSource</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3632" class="blob-num js-line-number" data-line-number="3632"></td>
        <td id="LC3632" class="blob-code js-file-line">  <span class="pl-k">return</span> d.<span class="pl-sc">source</span>;</td>
      </tr>
      <tr>
        <td id="L3633" class="blob-num js-line-number" data-line-number="3633"></td>
        <td id="LC3633" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3634" class="blob-num js-line-number" data-line-number="3634"></td>
        <td id="LC3634" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3635" class="blob-num js-line-number" data-line-number="3635"></td>
        <td id="LC3635" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_chordTarget</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3636" class="blob-num js-line-number" data-line-number="3636"></td>
        <td id="LC3636" class="blob-code js-file-line">  <span class="pl-k">return</span> d.<span class="pl-sc">target</span>;</td>
      </tr>
      <tr>
        <td id="L3637" class="blob-num js-line-number" data-line-number="3637"></td>
        <td id="LC3637" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3638" class="blob-num js-line-number" data-line-number="3638"></td>
        <td id="LC3638" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3639" class="blob-num js-line-number" data-line-number="3639"></td>
        <td id="LC3639" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_chordRadius</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3640" class="blob-num js-line-number" data-line-number="3640"></td>
        <td id="LC3640" class="blob-code js-file-line">  <span class="pl-k">return</span> d.radius;</td>
      </tr>
      <tr>
        <td id="L3641" class="blob-num js-line-number" data-line-number="3641"></td>
        <td id="LC3641" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3642" class="blob-num js-line-number" data-line-number="3642"></td>
        <td id="LC3642" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3643" class="blob-num js-line-number" data-line-number="3643"></td>
        <td id="LC3643" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_chordStartAngle</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3644" class="blob-num js-line-number" data-line-number="3644"></td>
        <td id="LC3644" class="blob-code js-file-line">  <span class="pl-k">return</span> d.startAngle;</td>
      </tr>
      <tr>
        <td id="L3645" class="blob-num js-line-number" data-line-number="3645"></td>
        <td id="LC3645" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3646" class="blob-num js-line-number" data-line-number="3646"></td>
        <td id="LC3646" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3647" class="blob-num js-line-number" data-line-number="3647"></td>
        <td id="LC3647" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_chordEndAngle</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3648" class="blob-num js-line-number" data-line-number="3648"></td>
        <td id="LC3648" class="blob-code js-file-line">  <span class="pl-k">return</span> d.endAngle;</td>
      </tr>
      <tr>
        <td id="L3649" class="blob-num js-line-number" data-line-number="3649"></td>
        <td id="LC3649" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3650" class="blob-num js-line-number" data-line-number="3650"></td>
        <td id="LC3650" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">diagonal</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3651" class="blob-num js-line-number" data-line-number="3651"></td>
        <td id="LC3651" class="blob-code js-file-line">  <span class="pl-s">var</span> source <span class="pl-k">=</span> d3_svg_chordSource,</td>
      </tr>
      <tr>
        <td id="L3652" class="blob-num js-line-number" data-line-number="3652"></td>
        <td id="LC3652" class="blob-code js-file-line">      target <span class="pl-k">=</span> d3_svg_chordTarget,</td>
      </tr>
      <tr>
        <td id="L3653" class="blob-num js-line-number" data-line-number="3653"></td>
        <td id="LC3653" class="blob-code js-file-line">      projection <span class="pl-k">=</span> d3_svg_diagonalProjection;</td>
      </tr>
      <tr>
        <td id="L3654" class="blob-num js-line-number" data-line-number="3654"></td>
        <td id="LC3654" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3655" class="blob-num js-line-number" data-line-number="3655"></td>
        <td id="LC3655" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">diagonal</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3656" class="blob-num js-line-number" data-line-number="3656"></td>
        <td id="LC3656" class="blob-code js-file-line">    <span class="pl-s">var</span> p0 <span class="pl-k">=</span> source.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i),</td>
      </tr>
      <tr>
        <td id="L3657" class="blob-num js-line-number" data-line-number="3657"></td>
        <td id="LC3657" class="blob-code js-file-line">        p3 <span class="pl-k">=</span> target.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i),</td>
      </tr>
      <tr>
        <td id="L3658" class="blob-num js-line-number" data-line-number="3658"></td>
        <td id="LC3658" class="blob-code js-file-line">        m <span class="pl-k">=</span> (p0.<span class="pl-sc">y</span> <span class="pl-k">+</span> p3.<span class="pl-sc">y</span>) / <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L3659" class="blob-num js-line-number" data-line-number="3659"></td>
        <td id="LC3659" class="blob-code js-file-line">        p <span class="pl-k">=</span> [p0, {x<span class="pl-k">:</span> p0.<span class="pl-sc">x</span>, y<span class="pl-k">:</span> m}, {x<span class="pl-k">:</span> p3.<span class="pl-sc">x</span>, y<span class="pl-k">:</span> m}, p3];</td>
      </tr>
      <tr>
        <td id="L3660" class="blob-num js-line-number" data-line-number="3660"></td>
        <td id="LC3660" class="blob-code js-file-line">    p <span class="pl-k">=</span> p.map(projection);</td>
      </tr>
      <tr>
        <td id="L3661" class="blob-num js-line-number" data-line-number="3661"></td>
        <td id="LC3661" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">2</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L3662" class="blob-num js-line-number" data-line-number="3662"></td>
        <td id="LC3662" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3663" class="blob-num js-line-number" data-line-number="3663"></td>
        <td id="LC3663" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3664" class="blob-num js-line-number" data-line-number="3664"></td>
        <td id="LC3664" class="blob-code js-file-line">  <span class="pl-s3">diagonal</span>.<span class="pl-en">source</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3665" class="blob-num js-line-number" data-line-number="3665"></td>
        <td id="LC3665" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> source;</td>
      </tr>
      <tr>
        <td id="L3666" class="blob-num js-line-number" data-line-number="3666"></td>
        <td id="LC3666" class="blob-code js-file-line">    source <span class="pl-k">=</span> d3.functor(x);</td>
      </tr>
      <tr>
        <td id="L3667" class="blob-num js-line-number" data-line-number="3667"></td>
        <td id="LC3667" class="blob-code js-file-line">    <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L3668" class="blob-num js-line-number" data-line-number="3668"></td>
        <td id="LC3668" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3669" class="blob-num js-line-number" data-line-number="3669"></td>
        <td id="LC3669" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3670" class="blob-num js-line-number" data-line-number="3670"></td>
        <td id="LC3670" class="blob-code js-file-line">  <span class="pl-s3">diagonal</span>.<span class="pl-en">target</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3671" class="blob-num js-line-number" data-line-number="3671"></td>
        <td id="LC3671" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L3672" class="blob-num js-line-number" data-line-number="3672"></td>
        <td id="LC3672" class="blob-code js-file-line">    target <span class="pl-k">=</span> d3.functor(x);</td>
      </tr>
      <tr>
        <td id="L3673" class="blob-num js-line-number" data-line-number="3673"></td>
        <td id="LC3673" class="blob-code js-file-line">    <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L3674" class="blob-num js-line-number" data-line-number="3674"></td>
        <td id="LC3674" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3675" class="blob-num js-line-number" data-line-number="3675"></td>
        <td id="LC3675" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3676" class="blob-num js-line-number" data-line-number="3676"></td>
        <td id="LC3676" class="blob-code js-file-line">  <span class="pl-s3">diagonal</span>.<span class="pl-en">projection</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3677" class="blob-num js-line-number" data-line-number="3677"></td>
        <td id="LC3677" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> projection;</td>
      </tr>
      <tr>
        <td id="L3678" class="blob-num js-line-number" data-line-number="3678"></td>
        <td id="LC3678" class="blob-code js-file-line">    projection <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3679" class="blob-num js-line-number" data-line-number="3679"></td>
        <td id="LC3679" class="blob-code js-file-line">    <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L3680" class="blob-num js-line-number" data-line-number="3680"></td>
        <td id="LC3680" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3681" class="blob-num js-line-number" data-line-number="3681"></td>
        <td id="LC3681" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3682" class="blob-num js-line-number" data-line-number="3682"></td>
        <td id="LC3682" class="blob-code js-file-line">  <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L3683" class="blob-num js-line-number" data-line-number="3683"></td>
        <td id="LC3683" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3684" class="blob-num js-line-number" data-line-number="3684"></td>
        <td id="LC3684" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3685" class="blob-num js-line-number" data-line-number="3685"></td>
        <td id="LC3685" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_diagonalProjection</span>(<span class="pl-vpf">d</span>) {</td>
      </tr>
      <tr>
        <td id="L3686" class="blob-num js-line-number" data-line-number="3686"></td>
        <td id="LC3686" class="blob-code js-file-line">  <span class="pl-k">return</span> [d.<span class="pl-sc">x</span>, d.<span class="pl-sc">y</span>];</td>
      </tr>
      <tr>
        <td id="L3687" class="blob-num js-line-number" data-line-number="3687"></td>
        <td id="LC3687" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3688" class="blob-num js-line-number" data-line-number="3688"></td>
        <td id="LC3688" class="blob-code js-file-line"><span class="pl-s3">d3.svg.diagonal</span>.<span class="pl-en">radial</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3689" class="blob-num js-line-number" data-line-number="3689"></td>
        <td id="LC3689" class="blob-code js-file-line">  <span class="pl-s">var</span> diagonal <span class="pl-k">=</span> d3.svg.diagonal(),</td>
      </tr>
      <tr>
        <td id="L3690" class="blob-num js-line-number" data-line-number="3690"></td>
        <td id="LC3690" class="blob-code js-file-line">      projection <span class="pl-k">=</span> d3_svg_diagonalProjection,</td>
      </tr>
      <tr>
        <td id="L3691" class="blob-num js-line-number" data-line-number="3691"></td>
        <td id="LC3691" class="blob-code js-file-line">      projection_ <span class="pl-k">=</span> diagonal.projection;</td>
      </tr>
      <tr>
        <td id="L3692" class="blob-num js-line-number" data-line-number="3692"></td>
        <td id="LC3692" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3693" class="blob-num js-line-number" data-line-number="3693"></td>
        <td id="LC3693" class="blob-code js-file-line">  <span class="pl-s3">diagonal</span>.<span class="pl-en">projection</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3694" class="blob-num js-line-number" data-line-number="3694"></td>
        <td id="LC3694" class="blob-code js-file-line">    <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L3695" class="blob-num js-line-number" data-line-number="3695"></td>
        <td id="LC3695" class="blob-code js-file-line">        <span class="pl-k">?</span> projection_(d3_svg_diagonalRadialProjection(projection <span class="pl-k">=</span> x))</td>
      </tr>
      <tr>
        <td id="L3696" class="blob-num js-line-number" data-line-number="3696"></td>
        <td id="LC3696" class="blob-code js-file-line">        <span class="pl-k">:</span> projection;</td>
      </tr>
      <tr>
        <td id="L3697" class="blob-num js-line-number" data-line-number="3697"></td>
        <td id="LC3697" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3698" class="blob-num js-line-number" data-line-number="3698"></td>
        <td id="LC3698" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3699" class="blob-num js-line-number" data-line-number="3699"></td>
        <td id="LC3699" class="blob-code js-file-line">  <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L3700" class="blob-num js-line-number" data-line-number="3700"></td>
        <td id="LC3700" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3701" class="blob-num js-line-number" data-line-number="3701"></td>
        <td id="LC3701" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3702" class="blob-num js-line-number" data-line-number="3702"></td>
        <td id="LC3702" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_diagonalRadialProjection</span>(<span class="pl-vpf">projection</span>) {</td>
      </tr>
      <tr>
        <td id="L3703" class="blob-num js-line-number" data-line-number="3703"></td>
        <td id="LC3703" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3704" class="blob-num js-line-number" data-line-number="3704"></td>
        <td id="LC3704" class="blob-code js-file-line">    <span class="pl-s">var</span> d <span class="pl-k">=</span> projection.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments),</td>
      </tr>
      <tr>
        <td id="L3705" class="blob-num js-line-number" data-line-number="3705"></td>
        <td id="LC3705" class="blob-code js-file-line">        r <span class="pl-k">=</span> d[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3706" class="blob-num js-line-number" data-line-number="3706"></td>
        <td id="LC3706" class="blob-code js-file-line">        a <span class="pl-k">=</span> d[<span class="pl-c1">1</span>] <span class="pl-k">+</span> d3_svg_arcOffset;</td>
      </tr>
      <tr>
        <td id="L3707" class="blob-num js-line-number" data-line-number="3707"></td>
        <td id="LC3707" class="blob-code js-file-line">    <span class="pl-k">return</span> [r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(a), r <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(a)];</td>
      </tr>
      <tr>
        <td id="L3708" class="blob-num js-line-number" data-line-number="3708"></td>
        <td id="LC3708" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3709" class="blob-num js-line-number" data-line-number="3709"></td>
        <td id="LC3709" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3710" class="blob-num js-line-number" data-line-number="3710"></td>
        <td id="LC3710" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">mouse</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">container</span>) {</td>
      </tr>
      <tr>
        <td id="L3711" class="blob-num js-line-number" data-line-number="3711"></td>
        <td id="LC3711" class="blob-code js-file-line">  <span class="pl-k">return</span> d3_svg_mousePoint(container, d3.<span class="pl-s3">event</span>);</td>
      </tr>
      <tr>
        <td id="L3712" class="blob-num js-line-number" data-line-number="3712"></td>
        <td id="LC3712" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3713" class="blob-num js-line-number" data-line-number="3713"></td>
        <td id="LC3713" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3714" class="blob-num js-line-number" data-line-number="3714"></td>
        <td id="LC3714" class="blob-code js-file-line"><span class="pl-c">// https://bugs.webkit.org/show_bug.cgi?id=44083</span></td>
      </tr>
      <tr>
        <td id="L3715" class="blob-num js-line-number" data-line-number="3715"></td>
        <td id="LC3715" class="blob-code js-file-line"><span class="pl-s">var</span> d3_mouse_bug44083 <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>WebKit<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(<span class="pl-s3">navigator</span>.<span class="pl-sc">userAgent</span>) <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3716" class="blob-num js-line-number" data-line-number="3716"></td>
        <td id="LC3716" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3717" class="blob-num js-line-number" data-line-number="3717"></td>
        <td id="LC3717" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_mousePoint</span>(<span class="pl-vpf">container</span>, <span class="pl-vpf">e</span>) {</td>
      </tr>
      <tr>
        <td id="L3718" class="blob-num js-line-number" data-line-number="3718"></td>
        <td id="LC3718" class="blob-code js-file-line">  <span class="pl-s">var</span> point <span class="pl-k">=</span> (container.ownerSVGElement <span class="pl-k">||</span> container).createSVGPoint();</td>
      </tr>
      <tr>
        <td id="L3719" class="blob-num js-line-number" data-line-number="3719"></td>
        <td id="LC3719" class="blob-code js-file-line">  <span class="pl-k">if</span> ((d3_mouse_bug44083 <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s3">window</span>.scrollX <span class="pl-k">||</span> <span class="pl-s3">window</span>.scrollY)) {</td>
      </tr>
      <tr>
        <td id="L3720" class="blob-num js-line-number" data-line-number="3720"></td>
        <td id="LC3720" class="blob-code js-file-line">    <span class="pl-s">var</span> svg <span class="pl-k">=</span> d3.<span class="pl-s3">select</span>(<span class="pl-s3">document</span>.<span class="pl-sc">body</span>)</td>
      </tr>
      <tr>
        <td id="L3721" class="blob-num js-line-number" data-line-number="3721"></td>
        <td id="LC3721" class="blob-code js-file-line">      .append(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L3722" class="blob-num js-line-number" data-line-number="3722"></td>
        <td id="LC3722" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L3723" class="blob-num js-line-number" data-line-number="3723"></td>
        <td id="LC3723" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L3724" class="blob-num js-line-number" data-line-number="3724"></td>
        <td id="LC3724" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3725" class="blob-num js-line-number" data-line-number="3725"></td>
        <td id="LC3725" class="blob-code js-file-line">    <span class="pl-s">var</span> ctm <span class="pl-k">=</span> svg[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>].getScreenCTM();</td>
      </tr>
      <tr>
        <td id="L3726" class="blob-num js-line-number" data-line-number="3726"></td>
        <td id="LC3726" class="blob-code js-file-line">    d3_mouse_bug44083 <span class="pl-k">=</span> <span class="pl-k">!</span>(ctm.f <span class="pl-k">||</span> ctm.e);</td>
      </tr>
      <tr>
        <td id="L3727" class="blob-num js-line-number" data-line-number="3727"></td>
        <td id="LC3727" class="blob-code js-file-line">    svg.<span class="pl-s3">remove</span>();</td>
      </tr>
      <tr>
        <td id="L3728" class="blob-num js-line-number" data-line-number="3728"></td>
        <td id="LC3728" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3729" class="blob-num js-line-number" data-line-number="3729"></td>
        <td id="LC3729" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_mouse_bug44083) {</td>
      </tr>
      <tr>
        <td id="L3730" class="blob-num js-line-number" data-line-number="3730"></td>
        <td id="LC3730" class="blob-code js-file-line">    point.<span class="pl-sc">x</span> <span class="pl-k">=</span> e.<span class="pl-sc">pageX</span>;</td>
      </tr>
      <tr>
        <td id="L3731" class="blob-num js-line-number" data-line-number="3731"></td>
        <td id="LC3731" class="blob-code js-file-line">    point.<span class="pl-sc">y</span> <span class="pl-k">=</span> e.<span class="pl-sc">pageY</span>;</td>
      </tr>
      <tr>
        <td id="L3732" class="blob-num js-line-number" data-line-number="3732"></td>
        <td id="LC3732" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3733" class="blob-num js-line-number" data-line-number="3733"></td>
        <td id="LC3733" class="blob-code js-file-line">    point.<span class="pl-sc">x</span> <span class="pl-k">=</span> e.clientX;</td>
      </tr>
      <tr>
        <td id="L3734" class="blob-num js-line-number" data-line-number="3734"></td>
        <td id="LC3734" class="blob-code js-file-line">    point.<span class="pl-sc">y</span> <span class="pl-k">=</span> e.clientY;</td>
      </tr>
      <tr>
        <td id="L3735" class="blob-num js-line-number" data-line-number="3735"></td>
        <td id="LC3735" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3736" class="blob-num js-line-number" data-line-number="3736"></td>
        <td id="LC3736" class="blob-code js-file-line">  point <span class="pl-k">=</span> point.matrixTransform(container.getScreenCTM().inverse());</td>
      </tr>
      <tr>
        <td id="L3737" class="blob-num js-line-number" data-line-number="3737"></td>
        <td id="LC3737" class="blob-code js-file-line">  <span class="pl-k">return</span> [point.<span class="pl-sc">x</span>, point.<span class="pl-sc">y</span>];</td>
      </tr>
      <tr>
        <td id="L3738" class="blob-num js-line-number" data-line-number="3738"></td>
        <td id="LC3738" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3739" class="blob-num js-line-number" data-line-number="3739"></td>
        <td id="LC3739" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">touches</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">container</span>, <span class="pl-vpf">touches</span>) {</td>
      </tr>
      <tr>
        <td id="L3740" class="blob-num js-line-number" data-line-number="3740"></td>
        <td id="LC3740" class="blob-code js-file-line">  <span class="pl-k">if</span> (arguments.<span class="pl-sc">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) touches <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>.touches;</td>
      </tr>
      <tr>
        <td id="L3741" class="blob-num js-line-number" data-line-number="3741"></td>
        <td id="LC3741" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3742" class="blob-num js-line-number" data-line-number="3742"></td>
        <td id="LC3742" class="blob-code js-file-line">  <span class="pl-k">return</span> touches <span class="pl-k">?</span> d3_array(touches).map(<span class="pl-st">function</span>(<span class="pl-vpf">touch</span>) {</td>
      </tr>
      <tr>
        <td id="L3743" class="blob-num js-line-number" data-line-number="3743"></td>
        <td id="LC3743" class="blob-code js-file-line">    <span class="pl-s">var</span> point <span class="pl-k">=</span> d3_svg_mousePoint(container, touch);</td>
      </tr>
      <tr>
        <td id="L3744" class="blob-num js-line-number" data-line-number="3744"></td>
        <td id="LC3744" class="blob-code js-file-line">    point.identifier <span class="pl-k">=</span> touch.identifier;</td>
      </tr>
      <tr>
        <td id="L3745" class="blob-num js-line-number" data-line-number="3745"></td>
        <td id="LC3745" class="blob-code js-file-line">    <span class="pl-k">return</span> point;</td>
      </tr>
      <tr>
        <td id="L3746" class="blob-num js-line-number" data-line-number="3746"></td>
        <td id="LC3746" class="blob-code js-file-line">  }) <span class="pl-k">:</span> [];</td>
      </tr>
      <tr>
        <td id="L3747" class="blob-num js-line-number" data-line-number="3747"></td>
        <td id="LC3747" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3748" class="blob-num js-line-number" data-line-number="3748"></td>
        <td id="LC3748" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">symbol</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3749" class="blob-num js-line-number" data-line-number="3749"></td>
        <td id="LC3749" class="blob-code js-file-line">  <span class="pl-s">var</span> type <span class="pl-k">=</span> d3_svg_symbolType,</td>
      </tr>
      <tr>
        <td id="L3750" class="blob-num js-line-number" data-line-number="3750"></td>
        <td id="LC3750" class="blob-code js-file-line">      size <span class="pl-k">=</span> d3_svg_symbolSize;</td>
      </tr>
      <tr>
        <td id="L3751" class="blob-num js-line-number" data-line-number="3751"></td>
        <td id="LC3751" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3752" class="blob-num js-line-number" data-line-number="3752"></td>
        <td id="LC3752" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">symbol</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3753" class="blob-num js-line-number" data-line-number="3753"></td>
        <td id="LC3753" class="blob-code js-file-line">    <span class="pl-k">return</span> (d3_svg_symbols[type.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i)]</td>
      </tr>
      <tr>
        <td id="L3754" class="blob-num js-line-number" data-line-number="3754"></td>
        <td id="LC3754" class="blob-code js-file-line">        <span class="pl-k">||</span> d3_svg_symbols.circle)</td>
      </tr>
      <tr>
        <td id="L3755" class="blob-num js-line-number" data-line-number="3755"></td>
        <td id="LC3755" class="blob-code js-file-line">        (size.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, d, i));</td>
      </tr>
      <tr>
        <td id="L3756" class="blob-num js-line-number" data-line-number="3756"></td>
        <td id="LC3756" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3757" class="blob-num js-line-number" data-line-number="3757"></td>
        <td id="LC3757" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3758" class="blob-num js-line-number" data-line-number="3758"></td>
        <td id="LC3758" class="blob-code js-file-line">  <span class="pl-s3">symbol</span>.<span class="pl-en">type</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3759" class="blob-num js-line-number" data-line-number="3759"></td>
        <td id="LC3759" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> type;</td>
      </tr>
      <tr>
        <td id="L3760" class="blob-num js-line-number" data-line-number="3760"></td>
        <td id="LC3760" class="blob-code js-file-line">    type <span class="pl-k">=</span> d3.functor(x);</td>
      </tr>
      <tr>
        <td id="L3761" class="blob-num js-line-number" data-line-number="3761"></td>
        <td id="LC3761" class="blob-code js-file-line">    <span class="pl-k">return</span> symbol;</td>
      </tr>
      <tr>
        <td id="L3762" class="blob-num js-line-number" data-line-number="3762"></td>
        <td id="LC3762" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3763" class="blob-num js-line-number" data-line-number="3763"></td>
        <td id="LC3763" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3764" class="blob-num js-line-number" data-line-number="3764"></td>
        <td id="LC3764" class="blob-code js-file-line">  <span class="pl-c">// size of symbol in square pixels</span></td>
      </tr>
      <tr>
        <td id="L3765" class="blob-num js-line-number" data-line-number="3765"></td>
        <td id="LC3765" class="blob-code js-file-line">  <span class="pl-s3">symbol</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3766" class="blob-num js-line-number" data-line-number="3766"></td>
        <td id="LC3766" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L3767" class="blob-num js-line-number" data-line-number="3767"></td>
        <td id="LC3767" class="blob-code js-file-line">    size <span class="pl-k">=</span> d3.functor(x);</td>
      </tr>
      <tr>
        <td id="L3768" class="blob-num js-line-number" data-line-number="3768"></td>
        <td id="LC3768" class="blob-code js-file-line">    <span class="pl-k">return</span> symbol;</td>
      </tr>
      <tr>
        <td id="L3769" class="blob-num js-line-number" data-line-number="3769"></td>
        <td id="LC3769" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3770" class="blob-num js-line-number" data-line-number="3770"></td>
        <td id="LC3770" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3771" class="blob-num js-line-number" data-line-number="3771"></td>
        <td id="LC3771" class="blob-code js-file-line">  <span class="pl-k">return</span> symbol;</td>
      </tr>
      <tr>
        <td id="L3772" class="blob-num js-line-number" data-line-number="3772"></td>
        <td id="LC3772" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3773" class="blob-num js-line-number" data-line-number="3773"></td>
        <td id="LC3773" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3774" class="blob-num js-line-number" data-line-number="3774"></td>
        <td id="LC3774" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_symbolSize</span>() {</td>
      </tr>
      <tr>
        <td id="L3775" class="blob-num js-line-number" data-line-number="3775"></td>
        <td id="LC3775" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">64</span>;</td>
      </tr>
      <tr>
        <td id="L3776" class="blob-num js-line-number" data-line-number="3776"></td>
        <td id="LC3776" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3777" class="blob-num js-line-number" data-line-number="3777"></td>
        <td id="LC3777" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3778" class="blob-num js-line-number" data-line-number="3778"></td>
        <td id="LC3778" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_symbolType</span>() {</td>
      </tr>
      <tr>
        <td id="L3779" class="blob-num js-line-number" data-line-number="3779"></td>
        <td id="LC3779" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3780" class="blob-num js-line-number" data-line-number="3780"></td>
        <td id="LC3780" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3781" class="blob-num js-line-number" data-line-number="3781"></td>
        <td id="LC3781" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3782" class="blob-num js-line-number" data-line-number="3782"></td>
        <td id="LC3782" class="blob-code js-file-line"><span class="pl-c">// TODO cross-diagonal?</span></td>
      </tr>
      <tr>
        <td id="L3783" class="blob-num js-line-number" data-line-number="3783"></td>
        <td id="LC3783" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_symbols <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3784" class="blob-num js-line-number" data-line-number="3784"></td>
        <td id="LC3784" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">circle</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">size</span>) {</td>
      </tr>
      <tr>
        <td id="L3785" class="blob-num js-line-number" data-line-number="3785"></td>
        <td id="LC3785" class="blob-code js-file-line">    <span class="pl-s">var</span> r <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(size / <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>);</td>
      </tr>
      <tr>
        <td id="L3786" class="blob-num js-line-number" data-line-number="3786"></td>
        <td id="LC3786" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3787" class="blob-num js-line-number" data-line-number="3787"></td>
        <td id="LC3787" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (<span class="pl-k">-</span>r)</td>
      </tr>
      <tr>
        <td id="L3788" class="blob-num js-line-number" data-line-number="3788"></td>
        <td id="LC3788" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3789" class="blob-num js-line-number" data-line-number="3789"></td>
        <td id="LC3789" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3790" class="blob-num js-line-number" data-line-number="3790"></td>
        <td id="LC3790" class="blob-code js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L3791" class="blob-num js-line-number" data-line-number="3791"></td>
        <td id="LC3791" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">cross</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">size</span>) {</td>
      </tr>
      <tr>
        <td id="L3792" class="blob-num js-line-number" data-line-number="3792"></td>
        <td id="LC3792" class="blob-code js-file-line">    <span class="pl-s">var</span> r <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(size / <span class="pl-c1">5</span>) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3793" class="blob-num js-line-number" data-line-number="3793"></td>
        <td id="LC3793" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r</td>
      </tr>
      <tr>
        <td id="L3794" class="blob-num js-line-number" data-line-number="3794"></td>
        <td id="LC3794" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r</td>
      </tr>
      <tr>
        <td id="L3795" class="blob-num js-line-number" data-line-number="3795"></td>
        <td id="LC3795" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">*</span> r</td>
      </tr>
      <tr>
        <td id="L3796" class="blob-num js-line-number" data-line-number="3796"></td>
        <td id="LC3796" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3797" class="blob-num js-line-number" data-line-number="3797"></td>
        <td id="LC3797" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r</td>
      </tr>
      <tr>
        <td id="L3798" class="blob-num js-line-number" data-line-number="3798"></td>
        <td id="LC3798" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> r</td>
      </tr>
      <tr>
        <td id="L3799" class="blob-num js-line-number" data-line-number="3799"></td>
        <td id="LC3799" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3800" class="blob-num js-line-number" data-line-number="3800"></td>
        <td id="LC3800" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3801" class="blob-num js-line-number" data-line-number="3801"></td>
        <td id="LC3801" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> r</td>
      </tr>
      <tr>
        <td id="L3802" class="blob-num js-line-number" data-line-number="3802"></td>
        <td id="LC3802" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r</td>
      </tr>
      <tr>
        <td id="L3803" class="blob-num js-line-number" data-line-number="3803"></td>
        <td id="LC3803" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3804" class="blob-num js-line-number" data-line-number="3804"></td>
        <td id="LC3804" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">*</span> r</td>
      </tr>
      <tr>
        <td id="L3805" class="blob-num js-line-number" data-line-number="3805"></td>
        <td id="LC3805" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3806" class="blob-num js-line-number" data-line-number="3806"></td>
        <td id="LC3806" class="blob-code js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L3807" class="blob-num js-line-number" data-line-number="3807"></td>
        <td id="LC3807" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">diamond</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">size</span>) {</td>
      </tr>
      <tr>
        <td id="L3808" class="blob-num js-line-number" data-line-number="3808"></td>
        <td id="LC3808" class="blob-code js-file-line">    <span class="pl-s">var</span> ry <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(size / (<span class="pl-c1">2</span> <span class="pl-k">*</span> d3_svg_symbolTan30)),</td>
      </tr>
      <tr>
        <td id="L3809" class="blob-num js-line-number" data-line-number="3809"></td>
        <td id="LC3809" class="blob-code js-file-line">        rx <span class="pl-k">=</span> ry <span class="pl-k">*</span> d3_svg_symbolTan30;</td>
      </tr>
      <tr>
        <td id="L3810" class="blob-num js-line-number" data-line-number="3810"></td>
        <td id="LC3810" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry</td>
      </tr>
      <tr>
        <td id="L3811" class="blob-num js-line-number" data-line-number="3811"></td>
        <td id="LC3811" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rx <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,0<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L3812" class="blob-num js-line-number" data-line-number="3812"></td>
        <td id="LC3812" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry</td>
      </tr>
      <tr>
        <td id="L3813" class="blob-num js-line-number" data-line-number="3813"></td>
        <td id="LC3813" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>rx <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,0<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L3814" class="blob-num js-line-number" data-line-number="3814"></td>
        <td id="LC3814" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3815" class="blob-num js-line-number" data-line-number="3815"></td>
        <td id="LC3815" class="blob-code js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L3816" class="blob-num js-line-number" data-line-number="3816"></td>
        <td id="LC3816" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">square</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">size</span>) {</td>
      </tr>
      <tr>
        <td id="L3817" class="blob-num js-line-number" data-line-number="3817"></td>
        <td id="LC3817" class="blob-code js-file-line">    <span class="pl-s">var</span> r <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(size) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3818" class="blob-num js-line-number" data-line-number="3818"></td>
        <td id="LC3818" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r</td>
      </tr>
      <tr>
        <td id="L3819" class="blob-num js-line-number" data-line-number="3819"></td>
        <td id="LC3819" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r</td>
      </tr>
      <tr>
        <td id="L3820" class="blob-num js-line-number" data-line-number="3820"></td>
        <td id="LC3820" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3821" class="blob-num js-line-number" data-line-number="3821"></td>
        <td id="LC3821" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r</td>
      </tr>
      <tr>
        <td id="L3822" class="blob-num js-line-number" data-line-number="3822"></td>
        <td id="LC3822" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3823" class="blob-num js-line-number" data-line-number="3823"></td>
        <td id="LC3823" class="blob-code js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L3824" class="blob-num js-line-number" data-line-number="3824"></td>
        <td id="LC3824" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">triangle-down</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">size</span>) {</td>
      </tr>
      <tr>
        <td id="L3825" class="blob-num js-line-number" data-line-number="3825"></td>
        <td id="LC3825" class="blob-code js-file-line">    <span class="pl-s">var</span> rx <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(size / d3_svg_symbolSqrt3),</td>
      </tr>
      <tr>
        <td id="L3826" class="blob-num js-line-number" data-line-number="3826"></td>
        <td id="LC3826" class="blob-code js-file-line">        ry <span class="pl-k">=</span> rx <span class="pl-k">*</span> d3_svg_symbolSqrt3 / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3827" class="blob-num js-line-number" data-line-number="3827"></td>
        <td id="LC3827" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry</td>
      </tr>
      <tr>
        <td id="L3828" class="blob-num js-line-number" data-line-number="3828"></td>
        <td id="LC3828" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rx <span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry</td>
      </tr>
      <tr>
        <td id="L3829" class="blob-num js-line-number" data-line-number="3829"></td>
        <td id="LC3829" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>rx <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry</td>
      </tr>
      <tr>
        <td id="L3830" class="blob-num js-line-number" data-line-number="3830"></td>
        <td id="LC3830" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3831" class="blob-num js-line-number" data-line-number="3831"></td>
        <td id="LC3831" class="blob-code js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L3832" class="blob-num js-line-number" data-line-number="3832"></td>
        <td id="LC3832" class="blob-code js-file-line">  <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">triangle-up</span><span class="pl-pds">&quot;</span></span>: <span class="pl-st">function</span>(<span class="pl-vpf">size</span>) {</td>
      </tr>
      <tr>
        <td id="L3833" class="blob-num js-line-number" data-line-number="3833"></td>
        <td id="LC3833" class="blob-code js-file-line">    <span class="pl-s">var</span> rx <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(size / d3_svg_symbolSqrt3),</td>
      </tr>
      <tr>
        <td id="L3834" class="blob-num js-line-number" data-line-number="3834"></td>
        <td id="LC3834" class="blob-code js-file-line">        ry <span class="pl-k">=</span> rx <span class="pl-k">*</span> d3_svg_symbolSqrt3 / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3835" class="blob-num js-line-number" data-line-number="3835"></td>
        <td id="LC3835" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry</td>
      </tr>
      <tr>
        <td id="L3836" class="blob-num js-line-number" data-line-number="3836"></td>
        <td id="LC3836" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rx <span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry</td>
      </tr>
      <tr>
        <td id="L3837" class="blob-num js-line-number" data-line-number="3837"></td>
        <td id="LC3837" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>rx <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry</td>
      </tr>
      <tr>
        <td id="L3838" class="blob-num js-line-number" data-line-number="3838"></td>
        <td id="LC3838" class="blob-code js-file-line">        <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3839" class="blob-num js-line-number" data-line-number="3839"></td>
        <td id="LC3839" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3840" class="blob-num js-line-number" data-line-number="3840"></td>
        <td id="LC3840" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3841" class="blob-num js-line-number" data-line-number="3841"></td>
        <td id="LC3841" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3842" class="blob-num js-line-number" data-line-number="3842"></td>
        <td id="LC3842" class="blob-code js-file-line">d3.svg.symbolTypes <span class="pl-k">=</span> d3.keys(d3_svg_symbols);</td>
      </tr>
      <tr>
        <td id="L3843" class="blob-num js-line-number" data-line-number="3843"></td>
        <td id="LC3843" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3844" class="blob-num js-line-number" data-line-number="3844"></td>
        <td id="LC3844" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_symbolSqrt3 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(<span class="pl-c1">3</span>),</td>
      </tr>
      <tr>
        <td id="L3845" class="blob-num js-line-number" data-line-number="3845"></td>
        <td id="LC3845" class="blob-code js-file-line">    d3_svg_symbolTan30 <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">tan</span>(<span class="pl-c1">30</span> <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-sc">PI</span> / <span class="pl-c1">180</span>);</td>
      </tr>
      <tr>
        <td id="L3846" class="blob-num js-line-number" data-line-number="3846"></td>
        <td id="LC3846" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">axis</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3847" class="blob-num js-line-number" data-line-number="3847"></td>
        <td id="LC3847" class="blob-code js-file-line">  <span class="pl-s">var</span> scale <span class="pl-k">=</span> d3.scale.linear(),</td>
      </tr>
      <tr>
        <td id="L3848" class="blob-num js-line-number" data-line-number="3848"></td>
        <td id="LC3848" class="blob-code js-file-line">      orient <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3849" class="blob-num js-line-number" data-line-number="3849"></td>
        <td id="LC3849" class="blob-code js-file-line">      tickMajorSize <span class="pl-k">=</span> <span class="pl-c1">6</span>,</td>
      </tr>
      <tr>
        <td id="L3850" class="blob-num js-line-number" data-line-number="3850"></td>
        <td id="LC3850" class="blob-code js-file-line">      tickMinorSize <span class="pl-k">=</span> <span class="pl-c1">6</span>,</td>
      </tr>
      <tr>
        <td id="L3851" class="blob-num js-line-number" data-line-number="3851"></td>
        <td id="LC3851" class="blob-code js-file-line">      tickEndSize <span class="pl-k">=</span> <span class="pl-c1">6</span>,</td>
      </tr>
      <tr>
        <td id="L3852" class="blob-num js-line-number" data-line-number="3852"></td>
        <td id="LC3852" class="blob-code js-file-line">      tickPadding <span class="pl-k">=</span> <span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L3853" class="blob-num js-line-number" data-line-number="3853"></td>
        <td id="LC3853" class="blob-code js-file-line">      tickArguments_ <span class="pl-k">=</span> [<span class="pl-c1">10</span>],</td>
      </tr>
      <tr>
        <td id="L3854" class="blob-num js-line-number" data-line-number="3854"></td>
        <td id="LC3854" class="blob-code js-file-line">      tickFormat_,</td>
      </tr>
      <tr>
        <td id="L3855" class="blob-num js-line-number" data-line-number="3855"></td>
        <td id="LC3855" class="blob-code js-file-line">      tickSubdivide <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3856" class="blob-num js-line-number" data-line-number="3856"></td>
        <td id="LC3856" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3857" class="blob-num js-line-number" data-line-number="3857"></td>
        <td id="LC3857" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">axis</span>(<span class="pl-vpf">selection</span>) {</td>
      </tr>
      <tr>
        <td id="L3858" class="blob-num js-line-number" data-line-number="3858"></td>
        <td id="LC3858" class="blob-code js-file-line">    selection.each(<span class="pl-st">function</span>(<span class="pl-vpf">d</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">j</span>) {</td>
      </tr>
      <tr>
        <td id="L3859" class="blob-num js-line-number" data-line-number="3859"></td>
        <td id="LC3859" class="blob-code js-file-line">      <span class="pl-s">var</span> g <span class="pl-k">=</span> d3.<span class="pl-s3">select</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L3860" class="blob-num js-line-number" data-line-number="3860"></td>
        <td id="LC3860" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3861" class="blob-num js-line-number" data-line-number="3861"></td>
        <td id="LC3861" class="blob-code js-file-line">      <span class="pl-c">// If selection is a transition, create subtransitions.</span></td>
      </tr>
      <tr>
        <td id="L3862" class="blob-num js-line-number" data-line-number="3862"></td>
        <td id="LC3862" class="blob-code js-file-line">      <span class="pl-s">var</span> transition <span class="pl-k">=</span> selection.delay <span class="pl-k">?</span> <span class="pl-st">function</span>(<span class="pl-vpf">o</span>) {</td>
      </tr>
      <tr>
        <td id="L3863" class="blob-num js-line-number" data-line-number="3863"></td>
        <td id="LC3863" class="blob-code js-file-line">        <span class="pl-s">var</span> id <span class="pl-k">=</span> d3_transitionInheritId;</td>
      </tr>
      <tr>
        <td id="L3864" class="blob-num js-line-number" data-line-number="3864"></td>
        <td id="LC3864" class="blob-code js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3865" class="blob-num js-line-number" data-line-number="3865"></td>
        <td id="LC3865" class="blob-code js-file-line">          d3_transitionInheritId <span class="pl-k">=</span> selection.<span class="pl-sc">id</span>;</td>
      </tr>
      <tr>
        <td id="L3866" class="blob-num js-line-number" data-line-number="3866"></td>
        <td id="LC3866" class="blob-code js-file-line">          <span class="pl-k">return</span> o.transition()</td>
      </tr>
      <tr>
        <td id="L3867" class="blob-num js-line-number" data-line-number="3867"></td>
        <td id="LC3867" class="blob-code js-file-line">              .delay(selection[j][i].delay)</td>
      </tr>
      <tr>
        <td id="L3868" class="blob-num js-line-number" data-line-number="3868"></td>
        <td id="LC3868" class="blob-code js-file-line">              .duration(selection[j][i].duration)</td>
      </tr>
      <tr>
        <td id="L3869" class="blob-num js-line-number" data-line-number="3869"></td>
        <td id="LC3869" class="blob-code js-file-line">              .ease(selection.ease());</td>
      </tr>
      <tr>
        <td id="L3870" class="blob-num js-line-number" data-line-number="3870"></td>
        <td id="LC3870" class="blob-code js-file-line">        } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L3871" class="blob-num js-line-number" data-line-number="3871"></td>
        <td id="LC3871" class="blob-code js-file-line">          d3_transitionInheritId <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L3872" class="blob-num js-line-number" data-line-number="3872"></td>
        <td id="LC3872" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3873" class="blob-num js-line-number" data-line-number="3873"></td>
        <td id="LC3873" class="blob-code js-file-line">      } <span class="pl-k">:</span> <span class="pl-s3">Object</span>;</td>
      </tr>
      <tr>
        <td id="L3874" class="blob-num js-line-number" data-line-number="3874"></td>
        <td id="LC3874" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3875" class="blob-num js-line-number" data-line-number="3875"></td>
        <td id="LC3875" class="blob-code js-file-line">      <span class="pl-c">// Ticks, or domain values for ordinal scales.</span></td>
      </tr>
      <tr>
        <td id="L3876" class="blob-num js-line-number" data-line-number="3876"></td>
        <td id="LC3876" class="blob-code js-file-line">      <span class="pl-s">var</span> ticks <span class="pl-k">=</span> scale.ticks <span class="pl-k">?</span> scale.ticks.<span class="pl-s3">apply</span>(scale, tickArguments_) <span class="pl-k">:</span> scale.<span class="pl-sc">domain</span>(),</td>
      </tr>
      <tr>
        <td id="L3877" class="blob-num js-line-number" data-line-number="3877"></td>
        <td id="LC3877" class="blob-code js-file-line">          tickFormat <span class="pl-k">=</span> tickFormat_ <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> (scale.tickFormat <span class="pl-k">?</span> scale.tickFormat.<span class="pl-s3">apply</span>(scale, tickArguments_) <span class="pl-k">:</span> <span class="pl-s3">String</span>) <span class="pl-k">:</span> tickFormat_;</td>
      </tr>
      <tr>
        <td id="L3878" class="blob-num js-line-number" data-line-number="3878"></td>
        <td id="LC3878" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3879" class="blob-num js-line-number" data-line-number="3879"></td>
        <td id="LC3879" class="blob-code js-file-line">      <span class="pl-c">// Minor ticks.</span></td>
      </tr>
      <tr>
        <td id="L3880" class="blob-num js-line-number" data-line-number="3880"></td>
        <td id="LC3880" class="blob-code js-file-line">      <span class="pl-s">var</span> subticks <span class="pl-k">=</span> d3_svg_axisSubdivide(scale, ticks, tickSubdivide),</td>
      </tr>
      <tr>
        <td id="L3881" class="blob-num js-line-number" data-line-number="3881"></td>
        <td id="LC3881" class="blob-code js-file-line">          subtick <span class="pl-k">=</span> g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.minor<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(subticks, <span class="pl-s3">String</span>),</td>
      </tr>
      <tr>
        <td id="L3882" class="blob-num js-line-number" data-line-number="3882"></td>
        <td id="LC3882" class="blob-code js-file-line">          subtickEnter <span class="pl-k">=</span> subtick.enter().insert(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>tick minor<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1e-6</span>),</td>
      </tr>
      <tr>
        <td id="L3883" class="blob-num js-line-number" data-line-number="3883"></td>
        <td id="LC3883" class="blob-code js-file-line">          subtickExit <span class="pl-k">=</span> transition(subtick.exit()).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1e-6</span>).<span class="pl-s3">remove</span>(),</td>
      </tr>
      <tr>
        <td id="L3884" class="blob-num js-line-number" data-line-number="3884"></td>
        <td id="LC3884" class="blob-code js-file-line">          subtickUpdate <span class="pl-k">=</span> transition(subtick).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3885" class="blob-num js-line-number" data-line-number="3885"></td>
        <td id="LC3885" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3886" class="blob-num js-line-number" data-line-number="3886"></td>
        <td id="LC3886" class="blob-code js-file-line">      <span class="pl-c">// Major ticks.</span></td>
      </tr>
      <tr>
        <td id="L3887" class="blob-num js-line-number" data-line-number="3887"></td>
        <td id="LC3887" class="blob-code js-file-line">      <span class="pl-s">var</span> tick <span class="pl-k">=</span> g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(ticks, <span class="pl-s3">String</span>),</td>
      </tr>
      <tr>
        <td id="L3888" class="blob-num js-line-number" data-line-number="3888"></td>
        <td id="LC3888" class="blob-code js-file-line">          tickEnter <span class="pl-k">=</span> tick.enter().insert(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1e-6</span>),</td>
      </tr>
      <tr>
        <td id="L3889" class="blob-num js-line-number" data-line-number="3889"></td>
        <td id="LC3889" class="blob-code js-file-line">          tickExit <span class="pl-k">=</span> transition(tick.exit()).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1e-6</span>).<span class="pl-s3">remove</span>(),</td>
      </tr>
      <tr>
        <td id="L3890" class="blob-num js-line-number" data-line-number="3890"></td>
        <td id="LC3890" class="blob-code js-file-line">          tickUpdate <span class="pl-k">=</span> transition(tick).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L3891" class="blob-num js-line-number" data-line-number="3891"></td>
        <td id="LC3891" class="blob-code js-file-line">          tickTransform;</td>
      </tr>
      <tr>
        <td id="L3892" class="blob-num js-line-number" data-line-number="3892"></td>
        <td id="LC3892" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3893" class="blob-num js-line-number" data-line-number="3893"></td>
        <td id="LC3893" class="blob-code js-file-line">      <span class="pl-c">// Domain.</span></td>
      </tr>
      <tr>
        <td id="L3894" class="blob-num js-line-number" data-line-number="3894"></td>
        <td id="LC3894" class="blob-code js-file-line">      <span class="pl-s">var</span> range <span class="pl-k">=</span> d3_scaleRange(scale),</td>
      </tr>
      <tr>
        <td id="L3895" class="blob-num js-line-number" data-line-number="3895"></td>
        <td id="LC3895" class="blob-code js-file-line">          path <span class="pl-k">=</span> g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.domain<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>([<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L3896" class="blob-num js-line-number" data-line-number="3896"></td>
        <td id="LC3896" class="blob-code js-file-line">          pathEnter <span class="pl-k">=</span> path.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>domain<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3897" class="blob-num js-line-number" data-line-number="3897"></td>
        <td id="LC3897" class="blob-code js-file-line">          pathUpdate <span class="pl-k">=</span> transition(path);</td>
      </tr>
      <tr>
        <td id="L3898" class="blob-num js-line-number" data-line-number="3898"></td>
        <td id="LC3898" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3899" class="blob-num js-line-number" data-line-number="3899"></td>
        <td id="LC3899" class="blob-code js-file-line">      <span class="pl-c">// Stash a snapshot of the new scale, and retrieve the old snapshot.</span></td>
      </tr>
      <tr>
        <td id="L3900" class="blob-num js-line-number" data-line-number="3900"></td>
        <td id="LC3900" class="blob-code js-file-line">      <span class="pl-s">var</span> scale1 <span class="pl-k">=</span> scale.copy(),</td>
      </tr>
      <tr>
        <td id="L3901" class="blob-num js-line-number" data-line-number="3901"></td>
        <td id="LC3901" class="blob-code js-file-line">          scale0 <span class="pl-k">=</span> <span class="pl-v">this</span>.__chart__ <span class="pl-k">||</span> scale1;</td>
      </tr>
      <tr>
        <td id="L3902" class="blob-num js-line-number" data-line-number="3902"></td>
        <td id="LC3902" class="blob-code js-file-line">      <span class="pl-v">this</span>.__chart__ <span class="pl-k">=</span> scale1;</td>
      </tr>
      <tr>
        <td id="L3903" class="blob-num js-line-number" data-line-number="3903"></td>
        <td id="LC3903" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3904" class="blob-num js-line-number" data-line-number="3904"></td>
        <td id="LC3904" class="blob-code js-file-line">      tickEnter.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3905" class="blob-num js-line-number" data-line-number="3905"></td>
        <td id="LC3905" class="blob-code js-file-line">      tickEnter.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3906" class="blob-num js-line-number" data-line-number="3906"></td>
        <td id="LC3906" class="blob-code js-file-line">      tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">text</span>(tickFormat);</td>
      </tr>
      <tr>
        <td id="L3907" class="blob-num js-line-number" data-line-number="3907"></td>
        <td id="LC3907" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3908" class="blob-num js-line-number" data-line-number="3908"></td>
        <td id="LC3908" class="blob-code js-file-line">      <span class="pl-k">switch</span> (orient) {</td>
      </tr>
      <tr>
        <td id="L3909" class="blob-num js-line-number" data-line-number="3909"></td>
        <td id="LC3909" class="blob-code js-file-line">        <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3910" class="blob-num js-line-number" data-line-number="3910"></td>
        <td id="LC3910" class="blob-code js-file-line">          tickTransform <span class="pl-k">=</span> d3_svg_axisX;</td>
      </tr>
      <tr>
        <td id="L3911" class="blob-num js-line-number" data-line-number="3911"></td>
        <td id="LC3911" class="blob-code js-file-line">          subtickEnter.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, tickMinorSize);</td>
      </tr>
      <tr>
        <td id="L3912" class="blob-num js-line-number" data-line-number="3912"></td>
        <td id="LC3912" class="blob-code js-file-line">          subtickUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, tickMinorSize);</td>
      </tr>
      <tr>
        <td id="L3913" class="blob-num js-line-number" data-line-number="3913"></td>
        <td id="LC3913" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, tickMajorSize);</td>
      </tr>
      <tr>
        <td id="L3914" class="blob-num js-line-number" data-line-number="3914"></td>
        <td id="LC3914" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding);</td>
      </tr>
      <tr>
        <td id="L3915" class="blob-num js-line-number" data-line-number="3915"></td>
        <td id="LC3915" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, tickMajorSize);</td>
      </tr>
      <tr>
        <td id="L3916" class="blob-num js-line-number" data-line-number="3916"></td>
        <td id="LC3916" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>.71em<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3917" class="blob-num js-line-number" data-line-number="3917"></td>
        <td id="LC3917" class="blob-code js-file-line">          pathUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tickEndSize <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V0H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tickEndSize);</td>
      </tr>
      <tr>
        <td id="L3918" class="blob-num js-line-number" data-line-number="3918"></td>
        <td id="LC3918" class="blob-code js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3919" class="blob-num js-line-number" data-line-number="3919"></td>
        <td id="LC3919" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3920" class="blob-num js-line-number" data-line-number="3920"></td>
        <td id="LC3920" class="blob-code js-file-line">        <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3921" class="blob-num js-line-number" data-line-number="3921"></td>
        <td id="LC3921" class="blob-code js-file-line">          tickTransform <span class="pl-k">=</span> d3_svg_axisX;</td>
      </tr>
      <tr>
        <td id="L3922" class="blob-num js-line-number" data-line-number="3922"></td>
        <td id="LC3922" class="blob-code js-file-line">          subtickEnter.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMinorSize);</td>
      </tr>
      <tr>
        <td id="L3923" class="blob-num js-line-number" data-line-number="3923"></td>
        <td id="LC3923" class="blob-code js-file-line">          subtickUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMinorSize);</td>
      </tr>
      <tr>
        <td id="L3924" class="blob-num js-line-number" data-line-number="3924"></td>
        <td id="LC3924" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMajorSize);</td>
      </tr>
      <tr>
        <td id="L3925" class="blob-num js-line-number" data-line-number="3925"></td>
        <td id="LC3925" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding));</td>
      </tr>
      <tr>
        <td id="L3926" class="blob-num js-line-number" data-line-number="3926"></td>
        <td id="LC3926" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMajorSize);</td>
      </tr>
      <tr>
        <td id="L3927" class="blob-num js-line-number" data-line-number="3927"></td>
        <td id="LC3927" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding)).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>0em<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3928" class="blob-num js-line-number" data-line-number="3928"></td>
        <td id="LC3928" class="blob-code js-file-line">          pathUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>tickEndSize <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V0H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>tickEndSize);</td>
      </tr>
      <tr>
        <td id="L3929" class="blob-num js-line-number" data-line-number="3929"></td>
        <td id="LC3929" class="blob-code js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3930" class="blob-num js-line-number" data-line-number="3930"></td>
        <td id="LC3930" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3931" class="blob-num js-line-number" data-line-number="3931"></td>
        <td id="LC3931" class="blob-code js-file-line">        <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3932" class="blob-num js-line-number" data-line-number="3932"></td>
        <td id="LC3932" class="blob-code js-file-line">          tickTransform <span class="pl-k">=</span> d3_svg_axisY;</td>
      </tr>
      <tr>
        <td id="L3933" class="blob-num js-line-number" data-line-number="3933"></td>
        <td id="LC3933" class="blob-code js-file-line">          subtickEnter.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMinorSize);</td>
      </tr>
      <tr>
        <td id="L3934" class="blob-num js-line-number" data-line-number="3934"></td>
        <td id="LC3934" class="blob-code js-file-line">          subtickUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMinorSize).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3935" class="blob-num js-line-number" data-line-number="3935"></td>
        <td id="LC3935" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMajorSize);</td>
      </tr>
      <tr>
        <td id="L3936" class="blob-num js-line-number" data-line-number="3936"></td>
        <td id="LC3936" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding));</td>
      </tr>
      <tr>
        <td id="L3937" class="blob-num js-line-number" data-line-number="3937"></td>
        <td id="LC3937" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>tickMajorSize).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3938" class="blob-num js-line-number" data-line-number="3938"></td>
        <td id="LC3938" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-k">-</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding)).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>.32em<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3939" class="blob-num js-line-number" data-line-number="3939"></td>
        <td id="LC3939" class="blob-code js-file-line">          pathUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>tickEndSize <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H0V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>tickEndSize);</td>
      </tr>
      <tr>
        <td id="L3940" class="blob-num js-line-number" data-line-number="3940"></td>
        <td id="LC3940" class="blob-code js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3941" class="blob-num js-line-number" data-line-number="3941"></td>
        <td id="LC3941" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3942" class="blob-num js-line-number" data-line-number="3942"></td>
        <td id="LC3942" class="blob-code js-file-line">        <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3943" class="blob-num js-line-number" data-line-number="3943"></td>
        <td id="LC3943" class="blob-code js-file-line">          tickTransform <span class="pl-k">=</span> d3_svg_axisY;</td>
      </tr>
      <tr>
        <td id="L3944" class="blob-num js-line-number" data-line-number="3944"></td>
        <td id="LC3944" class="blob-code js-file-line">          subtickEnter.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, tickMinorSize);</td>
      </tr>
      <tr>
        <td id="L3945" class="blob-num js-line-number" data-line-number="3945"></td>
        <td id="LC3945" class="blob-code js-file-line">          subtickUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, tickMinorSize).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3946" class="blob-num js-line-number" data-line-number="3946"></td>
        <td id="LC3946" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, tickMajorSize);</td>
      </tr>
      <tr>
        <td id="L3947" class="blob-num js-line-number" data-line-number="3947"></td>
        <td id="LC3947" class="blob-code js-file-line">          tickEnter.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding);</td>
      </tr>
      <tr>
        <td id="L3948" class="blob-num js-line-number" data-line-number="3948"></td>
        <td id="LC3948" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, tickMajorSize).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3949" class="blob-num js-line-number" data-line-number="3949"></td>
        <td id="LC3949" class="blob-code js-file-line">          tickUpdate.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(tickMajorSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>.32em<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3950" class="blob-num js-line-number" data-line-number="3950"></td>
        <td id="LC3950" class="blob-code js-file-line">          pathUpdate.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tickEndSize <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H0V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tickEndSize);</td>
      </tr>
      <tr>
        <td id="L3951" class="blob-num js-line-number" data-line-number="3951"></td>
        <td id="LC3951" class="blob-code js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3952" class="blob-num js-line-number" data-line-number="3952"></td>
        <td id="LC3952" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3953" class="blob-num js-line-number" data-line-number="3953"></td>
        <td id="LC3953" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3954" class="blob-num js-line-number" data-line-number="3954"></td>
        <td id="LC3954" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3955" class="blob-num js-line-number" data-line-number="3955"></td>
        <td id="LC3955" class="blob-code js-file-line">      <span class="pl-c">// For quantitative scales:</span></td>
      </tr>
      <tr>
        <td id="L3956" class="blob-num js-line-number" data-line-number="3956"></td>
        <td id="LC3956" class="blob-code js-file-line">      <span class="pl-c">// - enter new ticks from the old scale</span></td>
      </tr>
      <tr>
        <td id="L3957" class="blob-num js-line-number" data-line-number="3957"></td>
        <td id="LC3957" class="blob-code js-file-line">      <span class="pl-c">// - exit old ticks to the new scale</span></td>
      </tr>
      <tr>
        <td id="L3958" class="blob-num js-line-number" data-line-number="3958"></td>
        <td id="LC3958" class="blob-code js-file-line">      <span class="pl-k">if</span> (scale.ticks) {</td>
      </tr>
      <tr>
        <td id="L3959" class="blob-num js-line-number" data-line-number="3959"></td>
        <td id="LC3959" class="blob-code js-file-line">        tickEnter.<span class="pl-s3">call</span>(tickTransform, scale0);</td>
      </tr>
      <tr>
        <td id="L3960" class="blob-num js-line-number" data-line-number="3960"></td>
        <td id="LC3960" class="blob-code js-file-line">        tickUpdate.<span class="pl-s3">call</span>(tickTransform, scale1);</td>
      </tr>
      <tr>
        <td id="L3961" class="blob-num js-line-number" data-line-number="3961"></td>
        <td id="LC3961" class="blob-code js-file-line">        tickExit.<span class="pl-s3">call</span>(tickTransform, scale1);</td>
      </tr>
      <tr>
        <td id="L3962" class="blob-num js-line-number" data-line-number="3962"></td>
        <td id="LC3962" class="blob-code js-file-line">        subtickEnter.<span class="pl-s3">call</span>(tickTransform, scale0);</td>
      </tr>
      <tr>
        <td id="L3963" class="blob-num js-line-number" data-line-number="3963"></td>
        <td id="LC3963" class="blob-code js-file-line">        subtickUpdate.<span class="pl-s3">call</span>(tickTransform, scale1);</td>
      </tr>
      <tr>
        <td id="L3964" class="blob-num js-line-number" data-line-number="3964"></td>
        <td id="LC3964" class="blob-code js-file-line">        subtickExit.<span class="pl-s3">call</span>(tickTransform, scale1);</td>
      </tr>
      <tr>
        <td id="L3965" class="blob-num js-line-number" data-line-number="3965"></td>
        <td id="LC3965" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3966" class="blob-num js-line-number" data-line-number="3966"></td>
        <td id="LC3966" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3967" class="blob-num js-line-number" data-line-number="3967"></td>
        <td id="LC3967" class="blob-code js-file-line">      <span class="pl-c">// For ordinal scales:</span></td>
      </tr>
      <tr>
        <td id="L3968" class="blob-num js-line-number" data-line-number="3968"></td>
        <td id="LC3968" class="blob-code js-file-line">      <span class="pl-c">// - any entering ticks are undefined in the old scale</span></td>
      </tr>
      <tr>
        <td id="L3969" class="blob-num js-line-number" data-line-number="3969"></td>
        <td id="LC3969" class="blob-code js-file-line">      <span class="pl-c">// - any exiting ticks are undefined in the new scale</span></td>
      </tr>
      <tr>
        <td id="L3970" class="blob-num js-line-number" data-line-number="3970"></td>
        <td id="LC3970" class="blob-code js-file-line">      <span class="pl-c">// Therefore, we only need to transition updating ticks.</span></td>
      </tr>
      <tr>
        <td id="L3971" class="blob-num js-line-number" data-line-number="3971"></td>
        <td id="LC3971" class="blob-code js-file-line">      <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3972" class="blob-num js-line-number" data-line-number="3972"></td>
        <td id="LC3972" class="blob-code js-file-line">        <span class="pl-s">var</span> dx <span class="pl-k">=</span> scale1.rangeBand() / <span class="pl-c1">2</span>, <span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) { <span class="pl-k">return</span> scale1(d) <span class="pl-k">+</span> dx; };</td>
      </tr>
      <tr>
        <td id="L3973" class="blob-num js-line-number" data-line-number="3973"></td>
        <td id="LC3973" class="blob-code js-file-line">        tickEnter.<span class="pl-s3">call</span>(tickTransform, x);</td>
      </tr>
      <tr>
        <td id="L3974" class="blob-num js-line-number" data-line-number="3974"></td>
        <td id="LC3974" class="blob-code js-file-line">        tickUpdate.<span class="pl-s3">call</span>(tickTransform, x);</td>
      </tr>
      <tr>
        <td id="L3975" class="blob-num js-line-number" data-line-number="3975"></td>
        <td id="LC3975" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3976" class="blob-num js-line-number" data-line-number="3976"></td>
        <td id="LC3976" class="blob-code js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3977" class="blob-num js-line-number" data-line-number="3977"></td>
        <td id="LC3977" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3978" class="blob-num js-line-number" data-line-number="3978"></td>
        <td id="LC3978" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3979" class="blob-num js-line-number" data-line-number="3979"></td>
        <td id="LC3979" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3980" class="blob-num js-line-number" data-line-number="3980"></td>
        <td id="LC3980" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L3981" class="blob-num js-line-number" data-line-number="3981"></td>
        <td id="LC3981" class="blob-code js-file-line">    scale <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3982" class="blob-num js-line-number" data-line-number="3982"></td>
        <td id="LC3982" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L3983" class="blob-num js-line-number" data-line-number="3983"></td>
        <td id="LC3983" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3984" class="blob-num js-line-number" data-line-number="3984"></td>
        <td id="LC3984" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3985" class="blob-num js-line-number" data-line-number="3985"></td>
        <td id="LC3985" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">orient</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3986" class="blob-num js-line-number" data-line-number="3986"></td>
        <td id="LC3986" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> orient;</td>
      </tr>
      <tr>
        <td id="L3987" class="blob-num js-line-number" data-line-number="3987"></td>
        <td id="LC3987" class="blob-code js-file-line">    orient <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3988" class="blob-num js-line-number" data-line-number="3988"></td>
        <td id="LC3988" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L3989" class="blob-num js-line-number" data-line-number="3989"></td>
        <td id="LC3989" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3990" class="blob-num js-line-number" data-line-number="3990"></td>
        <td id="LC3990" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3991" class="blob-num js-line-number" data-line-number="3991"></td>
        <td id="LC3991" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3992" class="blob-num js-line-number" data-line-number="3992"></td>
        <td id="LC3992" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tickArguments_;</td>
      </tr>
      <tr>
        <td id="L3993" class="blob-num js-line-number" data-line-number="3993"></td>
        <td id="LC3993" class="blob-code js-file-line">    tickArguments_ <span class="pl-k">=</span> arguments;</td>
      </tr>
      <tr>
        <td id="L3994" class="blob-num js-line-number" data-line-number="3994"></td>
        <td id="LC3994" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L3995" class="blob-num js-line-number" data-line-number="3995"></td>
        <td id="LC3995" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3996" class="blob-num js-line-number" data-line-number="3996"></td>
        <td id="LC3996" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3997" class="blob-num js-line-number" data-line-number="3997"></td>
        <td id="LC3997" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3998" class="blob-num js-line-number" data-line-number="3998"></td>
        <td id="LC3998" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tickFormat_;</td>
      </tr>
      <tr>
        <td id="L3999" class="blob-num js-line-number" data-line-number="3999"></td>
        <td id="LC3999" class="blob-code js-file-line">    tickFormat_ <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L4000" class="blob-num js-line-number" data-line-number="4000"></td>
        <td id="LC4000" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L4001" class="blob-num js-line-number" data-line-number="4001"></td>
        <td id="LC4001" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4002" class="blob-num js-line-number" data-line-number="4002"></td>
        <td id="LC4002" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4003" class="blob-num js-line-number" data-line-number="4003"></td>
        <td id="LC4003" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">tickSize</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">z</span>) {</td>
      </tr>
      <tr>
        <td id="L4004" class="blob-num js-line-number" data-line-number="4004"></td>
        <td id="LC4004" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tickMajorSize;</td>
      </tr>
      <tr>
        <td id="L4005" class="blob-num js-line-number" data-line-number="4005"></td>
        <td id="LC4005" class="blob-code js-file-line">    <span class="pl-s">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4006" class="blob-num js-line-number" data-line-number="4006"></td>
        <td id="LC4006" class="blob-code js-file-line">    tickMajorSize <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L4007" class="blob-num js-line-number" data-line-number="4007"></td>
        <td id="LC4007" class="blob-code js-file-line">    tickMinorSize <span class="pl-k">=</span> n <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-k">+</span>y <span class="pl-k">:</span> tickMajorSize;</td>
      </tr>
      <tr>
        <td id="L4008" class="blob-num js-line-number" data-line-number="4008"></td>
        <td id="LC4008" class="blob-code js-file-line">    tickEndSize <span class="pl-k">=</span> n <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">+</span>arguments[n] <span class="pl-k">:</span> tickMajorSize;</td>
      </tr>
      <tr>
        <td id="L4009" class="blob-num js-line-number" data-line-number="4009"></td>
        <td id="LC4009" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L4010" class="blob-num js-line-number" data-line-number="4010"></td>
        <td id="LC4010" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4011" class="blob-num js-line-number" data-line-number="4011"></td>
        <td id="LC4011" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4012" class="blob-num js-line-number" data-line-number="4012"></td>
        <td id="LC4012" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">tickPadding</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4013" class="blob-num js-line-number" data-line-number="4013"></td>
        <td id="LC4013" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tickPadding;</td>
      </tr>
      <tr>
        <td id="L4014" class="blob-num js-line-number" data-line-number="4014"></td>
        <td id="LC4014" class="blob-code js-file-line">    tickPadding <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L4015" class="blob-num js-line-number" data-line-number="4015"></td>
        <td id="LC4015" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L4016" class="blob-num js-line-number" data-line-number="4016"></td>
        <td id="LC4016" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4017" class="blob-num js-line-number" data-line-number="4017"></td>
        <td id="LC4017" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4018" class="blob-num js-line-number" data-line-number="4018"></td>
        <td id="LC4018" class="blob-code js-file-line">  <span class="pl-s3">axis</span>.<span class="pl-en">tickSubdivide</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4019" class="blob-num js-line-number" data-line-number="4019"></td>
        <td id="LC4019" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> tickSubdivide;</td>
      </tr>
      <tr>
        <td id="L4020" class="blob-num js-line-number" data-line-number="4020"></td>
        <td id="LC4020" class="blob-code js-file-line">    tickSubdivide <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L4021" class="blob-num js-line-number" data-line-number="4021"></td>
        <td id="LC4021" class="blob-code js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L4022" class="blob-num js-line-number" data-line-number="4022"></td>
        <td id="LC4022" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4023" class="blob-num js-line-number" data-line-number="4023"></td>
        <td id="LC4023" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4024" class="blob-num js-line-number" data-line-number="4024"></td>
        <td id="LC4024" class="blob-code js-file-line">  <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L4025" class="blob-num js-line-number" data-line-number="4025"></td>
        <td id="LC4025" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4026" class="blob-num js-line-number" data-line-number="4026"></td>
        <td id="LC4026" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4027" class="blob-num js-line-number" data-line-number="4027"></td>
        <td id="LC4027" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_axisX</span>(<span class="pl-vpf">selection</span>, <span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4028" class="blob-num js-line-number" data-line-number="4028"></td>
        <td id="LC4028" class="blob-code js-file-line">  selection.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) { <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> x(d) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>; });</td>
      </tr>
      <tr>
        <td id="L4029" class="blob-num js-line-number" data-line-number="4029"></td>
        <td id="LC4029" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4030" class="blob-num js-line-number" data-line-number="4030"></td>
        <td id="LC4030" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4031" class="blob-num js-line-number" data-line-number="4031"></td>
        <td id="LC4031" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_axisY</span>(<span class="pl-vpf">selection</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4032" class="blob-num js-line-number" data-line-number="4032"></td>
        <td id="LC4032" class="blob-code js-file-line">  selection.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) { <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>translate(0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> y(d) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>; });</td>
      </tr>
      <tr>
        <td id="L4033" class="blob-num js-line-number" data-line-number="4033"></td>
        <td id="LC4033" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4034" class="blob-num js-line-number" data-line-number="4034"></td>
        <td id="LC4034" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4035" class="blob-num js-line-number" data-line-number="4035"></td>
        <td id="LC4035" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_axisSubdivide</span>(<span class="pl-vpf">scale</span>, <span class="pl-vpf">ticks</span>, <span class="pl-vpf">m</span>) {</td>
      </tr>
      <tr>
        <td id="L4036" class="blob-num js-line-number" data-line-number="4036"></td>
        <td id="LC4036" class="blob-code js-file-line">  subticks <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4037" class="blob-num js-line-number" data-line-number="4037"></td>
        <td id="LC4037" class="blob-code js-file-line">  <span class="pl-k">if</span> (m <span class="pl-k">&amp;&amp;</span> ticks.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L4038" class="blob-num js-line-number" data-line-number="4038"></td>
        <td id="LC4038" class="blob-code js-file-line">    <span class="pl-s">var</span> extent <span class="pl-k">=</span> d3_scaleExtent(scale.<span class="pl-sc">domain</span>()),</td>
      </tr>
      <tr>
        <td id="L4039" class="blob-num js-line-number" data-line-number="4039"></td>
        <td id="LC4039" class="blob-code js-file-line">        subticks,</td>
      </tr>
      <tr>
        <td id="L4040" class="blob-num js-line-number" data-line-number="4040"></td>
        <td id="LC4040" class="blob-code js-file-line">        i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L4041" class="blob-num js-line-number" data-line-number="4041"></td>
        <td id="LC4041" class="blob-code js-file-line">        n <span class="pl-k">=</span> ticks.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L4042" class="blob-num js-line-number" data-line-number="4042"></td>
        <td id="LC4042" class="blob-code js-file-line">        d <span class="pl-k">=</span> (ticks[<span class="pl-c1">1</span>] <span class="pl-k">-</span> ticks[<span class="pl-c1">0</span>]) / <span class="pl-k">++</span>m,</td>
      </tr>
      <tr>
        <td id="L4043" class="blob-num js-line-number" data-line-number="4043"></td>
        <td id="LC4043" class="blob-code js-file-line">        j,</td>
      </tr>
      <tr>
        <td id="L4044" class="blob-num js-line-number" data-line-number="4044"></td>
        <td id="LC4044" class="blob-code js-file-line">        v;</td>
      </tr>
      <tr>
        <td id="L4045" class="blob-num js-line-number" data-line-number="4045"></td>
        <td id="LC4045" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L4046" class="blob-num js-line-number" data-line-number="4046"></td>
        <td id="LC4046" class="blob-code js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> m; <span class="pl-k">--</span>j <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>;) {</td>
      </tr>
      <tr>
        <td id="L4047" class="blob-num js-line-number" data-line-number="4047"></td>
        <td id="LC4047" class="blob-code js-file-line">        <span class="pl-k">if</span> ((v <span class="pl-k">=</span> <span class="pl-k">+</span>ticks[i] <span class="pl-k">-</span> j <span class="pl-k">*</span> d) <span class="pl-k">&gt;=</span> extent[<span class="pl-c1">0</span>]) {</td>
      </tr>
      <tr>
        <td id="L4048" class="blob-num js-line-number" data-line-number="4048"></td>
        <td id="LC4048" class="blob-code js-file-line">          subticks.<span class="pl-s3">push</span>(v);</td>
      </tr>
      <tr>
        <td id="L4049" class="blob-num js-line-number" data-line-number="4049"></td>
        <td id="LC4049" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4050" class="blob-num js-line-number" data-line-number="4050"></td>
        <td id="LC4050" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4051" class="blob-num js-line-number" data-line-number="4051"></td>
        <td id="LC4051" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4052" class="blob-num js-line-number" data-line-number="4052"></td>
        <td id="LC4052" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">--</span>i, j <span class="pl-k">=</span> <span class="pl-c1">0</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m <span class="pl-k">&amp;&amp;</span> (v <span class="pl-k">=</span> <span class="pl-k">+</span>ticks[i] <span class="pl-k">+</span> j <span class="pl-k">*</span> d) <span class="pl-k">&lt;</span> extent[<span class="pl-c1">1</span>];) {</td>
      </tr>
      <tr>
        <td id="L4053" class="blob-num js-line-number" data-line-number="4053"></td>
        <td id="LC4053" class="blob-code js-file-line">      subticks.<span class="pl-s3">push</span>(v);</td>
      </tr>
      <tr>
        <td id="L4054" class="blob-num js-line-number" data-line-number="4054"></td>
        <td id="LC4054" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4055" class="blob-num js-line-number" data-line-number="4055"></td>
        <td id="LC4055" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4056" class="blob-num js-line-number" data-line-number="4056"></td>
        <td id="LC4056" class="blob-code js-file-line">  <span class="pl-k">return</span> subticks;</td>
      </tr>
      <tr>
        <td id="L4057" class="blob-num js-line-number" data-line-number="4057"></td>
        <td id="LC4057" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4058" class="blob-num js-line-number" data-line-number="4058"></td>
        <td id="LC4058" class="blob-code js-file-line"><span class="pl-s3">d3.svg</span>.<span class="pl-en">brush</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4059" class="blob-num js-line-number" data-line-number="4059"></td>
        <td id="LC4059" class="blob-code js-file-line">  <span class="pl-s">var</span> <span class="pl-s3">event</span> <span class="pl-k">=</span> d3.dispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>brushstart<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>brushend<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4060" class="blob-num js-line-number" data-line-number="4060"></td>
        <td id="LC4060" class="blob-code js-file-line">      x, <span class="pl-c">// x-scale, optional</span></td>
      </tr>
      <tr>
        <td id="L4061" class="blob-num js-line-number" data-line-number="4061"></td>
        <td id="LC4061" class="blob-code js-file-line">      y, <span class="pl-c">// y-scale, optional</span></td>
      </tr>
      <tr>
        <td id="L4062" class="blob-num js-line-number" data-line-number="4062"></td>
        <td id="LC4062" class="blob-code js-file-line">      extent <span class="pl-k">=</span> [[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>]]; <span class="pl-c">// [x0, y0], [x1, y1]</span></td>
      </tr>
      <tr>
        <td id="L4063" class="blob-num js-line-number" data-line-number="4063"></td>
        <td id="LC4063" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4064" class="blob-num js-line-number" data-line-number="4064"></td>
        <td id="LC4064" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">brush</span>(<span class="pl-vpf">g</span>) {</td>
      </tr>
      <tr>
        <td id="L4065" class="blob-num js-line-number" data-line-number="4065"></td>
        <td id="LC4065" class="blob-code js-file-line">    <span class="pl-s">var</span> resizes <span class="pl-k">=</span> x <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">?</span> [<span class="pl-s1"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>nw<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>ne<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>se<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>sw<span class="pl-pds">&quot;</span></span>]</td>
      </tr>
      <tr>
        <td id="L4066" class="blob-num js-line-number" data-line-number="4066"></td>
        <td id="LC4066" class="blob-code js-file-line">        <span class="pl-k">:</span> x <span class="pl-k">?</span> [<span class="pl-s1"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>]</td>
      </tr>
      <tr>
        <td id="L4067" class="blob-num js-line-number" data-line-number="4067"></td>
        <td id="LC4067" class="blob-code js-file-line">        <span class="pl-k">:</span> y <span class="pl-k">?</span> [<span class="pl-s1"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>]</td>
      </tr>
      <tr>
        <td id="L4068" class="blob-num js-line-number" data-line-number="4068"></td>
        <td id="LC4068" class="blob-code js-file-line">        <span class="pl-k">:</span> [];</td>
      </tr>
      <tr>
        <td id="L4069" class="blob-num js-line-number" data-line-number="4069"></td>
        <td id="LC4069" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4070" class="blob-num js-line-number" data-line-number="4070"></td>
        <td id="LC4070" class="blob-code js-file-line">    g.each(<span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4071" class="blob-num js-line-number" data-line-number="4071"></td>
        <td id="LC4071" class="blob-code js-file-line">      <span class="pl-s">var</span> g <span class="pl-k">=</span> d3.<span class="pl-s3">select</span>(<span class="pl-v">this</span>).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousedown.brush<span class="pl-pds">&quot;</span></span>, down),</td>
      </tr>
      <tr>
        <td id="L4072" class="blob-num js-line-number" data-line-number="4072"></td>
        <td id="LC4072" class="blob-code js-file-line">          bg <span class="pl-k">=</span> g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.background<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>([<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L4073" class="blob-num js-line-number" data-line-number="4073"></td>
        <td id="LC4073" class="blob-code js-file-line">          fg <span class="pl-k">=</span> g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.extent<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>([<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L4074" class="blob-num js-line-number" data-line-number="4074"></td>
        <td id="LC4074" class="blob-code js-file-line">          tz <span class="pl-k">=</span> g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.resize<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(resizes, <span class="pl-s3">String</span>),</td>
      </tr>
      <tr>
        <td id="L4075" class="blob-num js-line-number" data-line-number="4075"></td>
        <td id="LC4075" class="blob-code js-file-line">          e;</td>
      </tr>
      <tr>
        <td id="L4076" class="blob-num js-line-number" data-line-number="4076"></td>
        <td id="LC4076" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4077" class="blob-num js-line-number" data-line-number="4077"></td>
        <td id="LC4077" class="blob-code js-file-line">      <span class="pl-c">// An invisible, mouseable area for starting a new brush.</span></td>
      </tr>
      <tr>
        <td id="L4078" class="blob-num js-line-number" data-line-number="4078"></td>
        <td id="LC4078" class="blob-code js-file-line">      bg.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4079" class="blob-num js-line-number" data-line-number="4079"></td>
        <td id="LC4079" class="blob-code js-file-line">          .attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>background<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4080" class="blob-num js-line-number" data-line-number="4080"></td>
        <td id="LC4080" class="blob-code js-file-line">          .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4081" class="blob-num js-line-number" data-line-number="4081"></td>
        <td id="LC4081" class="blob-code js-file-line">          .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>pointer-events<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4082" class="blob-num js-line-number" data-line-number="4082"></td>
        <td id="LC4082" class="blob-code js-file-line">          .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>crosshair<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4083" class="blob-num js-line-number" data-line-number="4083"></td>
        <td id="LC4083" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4084" class="blob-num js-line-number" data-line-number="4084"></td>
        <td id="LC4084" class="blob-code js-file-line">      <span class="pl-c">// The visible brush extent; style this as you like!</span></td>
      </tr>
      <tr>
        <td id="L4085" class="blob-num js-line-number" data-line-number="4085"></td>
        <td id="LC4085" class="blob-code js-file-line">      fg.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4086" class="blob-num js-line-number" data-line-number="4086"></td>
        <td id="LC4086" class="blob-code js-file-line">          .attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>extent<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4087" class="blob-num js-line-number" data-line-number="4087"></td>
        <td id="LC4087" class="blob-code js-file-line">          .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4088" class="blob-num js-line-number" data-line-number="4088"></td>
        <td id="LC4088" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4089" class="blob-num js-line-number" data-line-number="4089"></td>
        <td id="LC4089" class="blob-code js-file-line">      <span class="pl-c">// More invisible rects for resizing the extent.</span></td>
      </tr>
      <tr>
        <td id="L4090" class="blob-num js-line-number" data-line-number="4090"></td>
        <td id="LC4090" class="blob-code js-file-line">      tz.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4091" class="blob-num js-line-number" data-line-number="4091"></td>
        <td id="LC4091" class="blob-code js-file-line">          .attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) { <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>resize <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d; })</td>
      </tr>
      <tr>
        <td id="L4092" class="blob-num js-line-number" data-line-number="4092"></td>
        <td id="LC4092" class="blob-code js-file-line">          .attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">6</span>)</td>
      </tr>
      <tr>
        <td id="L4093" class="blob-num js-line-number" data-line-number="4093"></td>
        <td id="LC4093" class="blob-code js-file-line">          .attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">6</span>)</td>
      </tr>
      <tr>
        <td id="L4094" class="blob-num js-line-number" data-line-number="4094"></td>
        <td id="LC4094" class="blob-code js-file-line">          .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4095" class="blob-num js-line-number" data-line-number="4095"></td>
        <td id="LC4095" class="blob-code js-file-line">          .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-st">function</span>(<span class="pl-vpf">d</span>) { <span class="pl-k">return</span> d3_svg_brushCursor[d]; });</td>
      </tr>
      <tr>
        <td id="L4096" class="blob-num js-line-number" data-line-number="4096"></td>
        <td id="LC4096" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4097" class="blob-num js-line-number" data-line-number="4097"></td>
        <td id="LC4097" class="blob-code js-file-line">      <span class="pl-c">// Update the resizers.</span></td>
      </tr>
      <tr>
        <td id="L4098" class="blob-num js-line-number" data-line-number="4098"></td>
        <td id="LC4098" class="blob-code js-file-line">      tz.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>pointer-events<span class="pl-pds">&quot;</span></span>, brush.empty() <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4099" class="blob-num js-line-number" data-line-number="4099"></td>
        <td id="LC4099" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4100" class="blob-num js-line-number" data-line-number="4100"></td>
        <td id="LC4100" class="blob-code js-file-line">      <span class="pl-c">// Remove any superfluous resizers.</span></td>
      </tr>
      <tr>
        <td id="L4101" class="blob-num js-line-number" data-line-number="4101"></td>
        <td id="LC4101" class="blob-code js-file-line">      tz.exit().<span class="pl-s3">remove</span>();</td>
      </tr>
      <tr>
        <td id="L4102" class="blob-num js-line-number" data-line-number="4102"></td>
        <td id="LC4102" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4103" class="blob-num js-line-number" data-line-number="4103"></td>
        <td id="LC4103" class="blob-code js-file-line">      <span class="pl-c">// Initialize the background to fill the defined range.</span></td>
      </tr>
      <tr>
        <td id="L4104" class="blob-num js-line-number" data-line-number="4104"></td>
        <td id="LC4104" class="blob-code js-file-line">      <span class="pl-c">// If the range isn&#39;t defined, you can post-process.</span></td>
      </tr>
      <tr>
        <td id="L4105" class="blob-num js-line-number" data-line-number="4105"></td>
        <td id="LC4105" class="blob-code js-file-line">      <span class="pl-k">if</span> (x) {</td>
      </tr>
      <tr>
        <td id="L4106" class="blob-num js-line-number" data-line-number="4106"></td>
        <td id="LC4106" class="blob-code js-file-line">        e <span class="pl-k">=</span> d3_scaleRange(x);</td>
      </tr>
      <tr>
        <td id="L4107" class="blob-num js-line-number" data-line-number="4107"></td>
        <td id="LC4107" class="blob-code js-file-line">        bg.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, e[<span class="pl-c1">0</span>]).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, e[<span class="pl-c1">1</span>] <span class="pl-k">-</span> e[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4108" class="blob-num js-line-number" data-line-number="4108"></td>
        <td id="LC4108" class="blob-code js-file-line">        d3_svg_brushRedrawX(g, extent);</td>
      </tr>
      <tr>
        <td id="L4109" class="blob-num js-line-number" data-line-number="4109"></td>
        <td id="LC4109" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4110" class="blob-num js-line-number" data-line-number="4110"></td>
        <td id="LC4110" class="blob-code js-file-line">      <span class="pl-k">if</span> (y) {</td>
      </tr>
      <tr>
        <td id="L4111" class="blob-num js-line-number" data-line-number="4111"></td>
        <td id="LC4111" class="blob-code js-file-line">        e <span class="pl-k">=</span> d3_scaleRange(y);</td>
      </tr>
      <tr>
        <td id="L4112" class="blob-num js-line-number" data-line-number="4112"></td>
        <td id="LC4112" class="blob-code js-file-line">        bg.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, e[<span class="pl-c1">0</span>]).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, e[<span class="pl-c1">1</span>] <span class="pl-k">-</span> e[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4113" class="blob-num js-line-number" data-line-number="4113"></td>
        <td id="LC4113" class="blob-code js-file-line">        d3_svg_brushRedrawY(g, extent);</td>
      </tr>
      <tr>
        <td id="L4114" class="blob-num js-line-number" data-line-number="4114"></td>
        <td id="LC4114" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4115" class="blob-num js-line-number" data-line-number="4115"></td>
        <td id="LC4115" class="blob-code js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L4116" class="blob-num js-line-number" data-line-number="4116"></td>
        <td id="LC4116" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4117" class="blob-num js-line-number" data-line-number="4117"></td>
        <td id="LC4117" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4118" class="blob-num js-line-number" data-line-number="4118"></td>
        <td id="LC4118" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">down</span>() {</td>
      </tr>
      <tr>
        <td id="L4119" class="blob-num js-line-number" data-line-number="4119"></td>
        <td id="LC4119" class="blob-code js-file-line">    <span class="pl-s">var</span> target <span class="pl-k">=</span> d3.<span class="pl-s3">select</span>(d3.<span class="pl-s3">event</span>.<span class="pl-sc">target</span>);</td>
      </tr>
      <tr>
        <td id="L4120" class="blob-num js-line-number" data-line-number="4120"></td>
        <td id="LC4120" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4121" class="blob-num js-line-number" data-line-number="4121"></td>
        <td id="LC4121" class="blob-code js-file-line">    <span class="pl-c">// Store some global state for the duration of the brush gesture.</span></td>
      </tr>
      <tr>
        <td id="L4122" class="blob-num js-line-number" data-line-number="4122"></td>
        <td id="LC4122" class="blob-code js-file-line">    d3_svg_brush <span class="pl-k">=</span> brush;</td>
      </tr>
      <tr>
        <td id="L4123" class="blob-num js-line-number" data-line-number="4123"></td>
        <td id="LC4123" class="blob-code js-file-line">    d3_svg_brushTarget <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4124" class="blob-num js-line-number" data-line-number="4124"></td>
        <td id="LC4124" class="blob-code js-file-line">    d3_svg_brushExtent <span class="pl-k">=</span> extent;</td>
      </tr>
      <tr>
        <td id="L4125" class="blob-num js-line-number" data-line-number="4125"></td>
        <td id="LC4125" class="blob-code js-file-line">    d3_svg_brushOffset <span class="pl-k">=</span> d3.svg.mouse(d3_svg_brushTarget);</td>
      </tr>
      <tr>
        <td id="L4126" class="blob-num js-line-number" data-line-number="4126"></td>
        <td id="LC4126" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4127" class="blob-num js-line-number" data-line-number="4127"></td>
        <td id="LC4127" class="blob-code js-file-line">    <span class="pl-c">// If the extent was clicked on, drag rather than brush;</span></td>
      </tr>
      <tr>
        <td id="L4128" class="blob-num js-line-number" data-line-number="4128"></td>
        <td id="LC4128" class="blob-code js-file-line">    <span class="pl-c">// store the offset between the mouse and extent origin instead.</span></td>
      </tr>
      <tr>
        <td id="L4129" class="blob-num js-line-number" data-line-number="4129"></td>
        <td id="LC4129" class="blob-code js-file-line">    <span class="pl-k">if</span> (d3_svg_brushDrag <span class="pl-k">=</span> target.classed(<span class="pl-s1"><span class="pl-pds">&quot;</span>extent<span class="pl-pds">&quot;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L4130" class="blob-num js-line-number" data-line-number="4130"></td>
        <td id="LC4130" class="blob-code js-file-line">      d3_svg_brushOffset[<span class="pl-c1">0</span>] <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>] <span class="pl-k">-</span> d3_svg_brushOffset[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4131" class="blob-num js-line-number" data-line-number="4131"></td>
        <td id="LC4131" class="blob-code js-file-line">      d3_svg_brushOffset[<span class="pl-c1">1</span>] <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>] <span class="pl-k">-</span> d3_svg_brushOffset[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4132" class="blob-num js-line-number" data-line-number="4132"></td>
        <td id="LC4132" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4133" class="blob-num js-line-number" data-line-number="4133"></td>
        <td id="LC4133" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4134" class="blob-num js-line-number" data-line-number="4134"></td>
        <td id="LC4134" class="blob-code js-file-line">    <span class="pl-c">// If a resizer was clicked on, record which side is to be resized.</span></td>
      </tr>
      <tr>
        <td id="L4135" class="blob-num js-line-number" data-line-number="4135"></td>
        <td id="LC4135" class="blob-code js-file-line">    <span class="pl-c">// Also, set the offset to the opposite side.</span></td>
      </tr>
      <tr>
        <td id="L4136" class="blob-num js-line-number" data-line-number="4136"></td>
        <td id="LC4136" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (target.classed(<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L4137" class="blob-num js-line-number" data-line-number="4137"></td>
        <td id="LC4137" class="blob-code js-file-line">      d3_svg_brushResize <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>.<span class="pl-sc">target</span>.__data__;</td>
      </tr>
      <tr>
        <td id="L4138" class="blob-num js-line-number" data-line-number="4138"></td>
        <td id="LC4138" class="blob-code js-file-line">      d3_svg_brushOffset[<span class="pl-c1">0</span>] <span class="pl-k">=</span> extent[<span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span>w<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(d3_svg_brushResize)][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4139" class="blob-num js-line-number" data-line-number="4139"></td>
        <td id="LC4139" class="blob-code js-file-line">      d3_svg_brushOffset[<span class="pl-c1">1</span>] <span class="pl-k">=</span> extent[<span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>n<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(d3_svg_brushResize)][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4140" class="blob-num js-line-number" data-line-number="4140"></td>
        <td id="LC4140" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4141" class="blob-num js-line-number" data-line-number="4141"></td>
        <td id="LC4141" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4142" class="blob-num js-line-number" data-line-number="4142"></td>
        <td id="LC4142" class="blob-code js-file-line">    <span class="pl-c">// If the ALT key is down when starting a brush, the center is at the mouse.</span></td>
      </tr>
      <tr>
        <td id="L4143" class="blob-num js-line-number" data-line-number="4143"></td>
        <td id="LC4143" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (d3.<span class="pl-s3">event</span>.altKey) {</td>
      </tr>
      <tr>
        <td id="L4144" class="blob-num js-line-number" data-line-number="4144"></td>
        <td id="LC4144" class="blob-code js-file-line">      d3_svg_brushCenter <span class="pl-k">=</span> d3_svg_brushOffset.<span class="pl-s3">slice</span>();</td>
      </tr>
      <tr>
        <td id="L4145" class="blob-num js-line-number" data-line-number="4145"></td>
        <td id="LC4145" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4146" class="blob-num js-line-number" data-line-number="4146"></td>
        <td id="LC4146" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4147" class="blob-num js-line-number" data-line-number="4147"></td>
        <td id="LC4147" class="blob-code js-file-line">    <span class="pl-c">// Restrict which dimensions are resized.</span></td>
      </tr>
      <tr>
        <td id="L4148" class="blob-num js-line-number" data-line-number="4148"></td>
        <td id="LC4148" class="blob-code js-file-line">    d3_svg_brushX <span class="pl-k">=</span> <span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(n<span class="pl-k">|</span>s)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(d3_svg_brushResize) <span class="pl-k">&amp;&amp;</span> x;</td>
      </tr>
      <tr>
        <td id="L4149" class="blob-num js-line-number" data-line-number="4149"></td>
        <td id="LC4149" class="blob-code js-file-line">    d3_svg_brushY <span class="pl-k">=</span> <span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(e<span class="pl-k">|</span>w)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(d3_svg_brushResize) <span class="pl-k">&amp;&amp;</span> y;</td>
      </tr>
      <tr>
        <td id="L4150" class="blob-num js-line-number" data-line-number="4150"></td>
        <td id="LC4150" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4151" class="blob-num js-line-number" data-line-number="4151"></td>
        <td id="LC4151" class="blob-code js-file-line">    <span class="pl-c">// Notify listeners.</span></td>
      </tr>
      <tr>
        <td id="L4152" class="blob-num js-line-number" data-line-number="4152"></td>
        <td id="LC4152" class="blob-code js-file-line">    d3_svg_brushDispatch <span class="pl-k">=</span> dispatcher(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4153" class="blob-num js-line-number" data-line-number="4153"></td>
        <td id="LC4153" class="blob-code js-file-line">    d3_svg_brushDispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>brushstart<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4154" class="blob-num js-line-number" data-line-number="4154"></td>
        <td id="LC4154" class="blob-code js-file-line">    d3_svg_brushMove();</td>
      </tr>
      <tr>
        <td id="L4155" class="blob-num js-line-number" data-line-number="4155"></td>
        <td id="LC4155" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4156" class="blob-num js-line-number" data-line-number="4156"></td>
        <td id="LC4156" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4157" class="blob-num js-line-number" data-line-number="4157"></td>
        <td id="LC4157" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4158" class="blob-num js-line-number" data-line-number="4158"></td>
        <td id="LC4158" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">dispatcher</span>(<span class="pl-vpf">that</span>, <span class="pl-vpf">argumentz</span>) {</td>
      </tr>
      <tr>
        <td id="L4159" class="blob-num js-line-number" data-line-number="4159"></td>
        <td id="LC4159" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">type</span>) {</td>
      </tr>
      <tr>
        <td id="L4160" class="blob-num js-line-number" data-line-number="4160"></td>
        <td id="LC4160" class="blob-code js-file-line">      <span class="pl-s">var</span> e <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>;</td>
      </tr>
      <tr>
        <td id="L4161" class="blob-num js-line-number" data-line-number="4161"></td>
        <td id="LC4161" class="blob-code js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L4162" class="blob-num js-line-number" data-line-number="4162"></td>
        <td id="LC4162" class="blob-code js-file-line">        d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> {type<span class="pl-k">:</span> type, target<span class="pl-k">:</span> brush};</td>
      </tr>
      <tr>
        <td id="L4163" class="blob-num js-line-number" data-line-number="4163"></td>
        <td id="LC4163" class="blob-code js-file-line">        <span class="pl-s3">event</span>[type].<span class="pl-s3">apply</span>(that, argumentz);</td>
      </tr>
      <tr>
        <td id="L4164" class="blob-num js-line-number" data-line-number="4164"></td>
        <td id="LC4164" class="blob-code js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L4165" class="blob-num js-line-number" data-line-number="4165"></td>
        <td id="LC4165" class="blob-code js-file-line">        d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> e;</td>
      </tr>
      <tr>
        <td id="L4166" class="blob-num js-line-number" data-line-number="4166"></td>
        <td id="LC4166" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4167" class="blob-num js-line-number" data-line-number="4167"></td>
        <td id="LC4167" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4168" class="blob-num js-line-number" data-line-number="4168"></td>
        <td id="LC4168" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4169" class="blob-num js-line-number" data-line-number="4169"></td>
        <td id="LC4169" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4170" class="blob-num js-line-number" data-line-number="4170"></td>
        <td id="LC4170" class="blob-code js-file-line">  <span class="pl-s3">brush</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">z</span>) {</td>
      </tr>
      <tr>
        <td id="L4171" class="blob-num js-line-number" data-line-number="4171"></td>
        <td id="LC4171" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L4172" class="blob-num js-line-number" data-line-number="4172"></td>
        <td id="LC4172" class="blob-code js-file-line">    x <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L4173" class="blob-num js-line-number" data-line-number="4173"></td>
        <td id="LC4173" class="blob-code js-file-line">    <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L4174" class="blob-num js-line-number" data-line-number="4174"></td>
        <td id="LC4174" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4175" class="blob-num js-line-number" data-line-number="4175"></td>
        <td id="LC4175" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4176" class="blob-num js-line-number" data-line-number="4176"></td>
        <td id="LC4176" class="blob-code js-file-line">  <span class="pl-s3">brush</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">z</span>) {</td>
      </tr>
      <tr>
        <td id="L4177" class="blob-num js-line-number" data-line-number="4177"></td>
        <td id="LC4177" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> y;</td>
      </tr>
      <tr>
        <td id="L4178" class="blob-num js-line-number" data-line-number="4178"></td>
        <td id="LC4178" class="blob-code js-file-line">    y <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L4179" class="blob-num js-line-number" data-line-number="4179"></td>
        <td id="LC4179" class="blob-code js-file-line">    <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L4180" class="blob-num js-line-number" data-line-number="4180"></td>
        <td id="LC4180" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4181" class="blob-num js-line-number" data-line-number="4181"></td>
        <td id="LC4181" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4182" class="blob-num js-line-number" data-line-number="4182"></td>
        <td id="LC4182" class="blob-code js-file-line">  <span class="pl-s3">brush</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">z</span>) {</td>
      </tr>
      <tr>
        <td id="L4183" class="blob-num js-line-number" data-line-number="4183"></td>
        <td id="LC4183" class="blob-code js-file-line">    <span class="pl-s">var</span> x0, x1, y0, y1, t;</td>
      </tr>
      <tr>
        <td id="L4184" class="blob-num js-line-number" data-line-number="4184"></td>
        <td id="LC4184" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4185" class="blob-num js-line-number" data-line-number="4185"></td>
        <td id="LC4185" class="blob-code js-file-line">    <span class="pl-c">// Invert the pixel extent to data-space.</span></td>
      </tr>
      <tr>
        <td id="L4186" class="blob-num js-line-number" data-line-number="4186"></td>
        <td id="LC4186" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4187" class="blob-num js-line-number" data-line-number="4187"></td>
        <td id="LC4187" class="blob-code js-file-line">      <span class="pl-k">if</span> (x) {</td>
      </tr>
      <tr>
        <td id="L4188" class="blob-num js-line-number" data-line-number="4188"></td>
        <td id="LC4188" class="blob-code js-file-line">        x0 <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4189" class="blob-num js-line-number" data-line-number="4189"></td>
        <td id="LC4189" class="blob-code js-file-line">        <span class="pl-k">if</span> (x.invert) x0 <span class="pl-k">=</span> x.invert(x0), x1 <span class="pl-k">=</span> x.invert(x1);</td>
      </tr>
      <tr>
        <td id="L4190" class="blob-num js-line-number" data-line-number="4190"></td>
        <td id="LC4190" class="blob-code js-file-line">        <span class="pl-k">if</span> (x1 <span class="pl-k">&lt;</span> x0) t <span class="pl-k">=</span> x0, x0 <span class="pl-k">=</span> x1, x1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L4191" class="blob-num js-line-number" data-line-number="4191"></td>
        <td id="LC4191" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4192" class="blob-num js-line-number" data-line-number="4192"></td>
        <td id="LC4192" class="blob-code js-file-line">      <span class="pl-k">if</span> (y) {</td>
      </tr>
      <tr>
        <td id="L4193" class="blob-num js-line-number" data-line-number="4193"></td>
        <td id="LC4193" class="blob-code js-file-line">        y0 <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], y1 <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4194" class="blob-num js-line-number" data-line-number="4194"></td>
        <td id="LC4194" class="blob-code js-file-line">        <span class="pl-k">if</span> (y.invert) y0 <span class="pl-k">=</span> y.invert(y0), y1 <span class="pl-k">=</span> y.invert(y1);</td>
      </tr>
      <tr>
        <td id="L4195" class="blob-num js-line-number" data-line-number="4195"></td>
        <td id="LC4195" class="blob-code js-file-line">        <span class="pl-k">if</span> (y1 <span class="pl-k">&lt;</span> y0) t <span class="pl-k">=</span> y0, y0 <span class="pl-k">=</span> y1, y1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L4196" class="blob-num js-line-number" data-line-number="4196"></td>
        <td id="LC4196" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4197" class="blob-num js-line-number" data-line-number="4197"></td>
        <td id="LC4197" class="blob-code js-file-line">      <span class="pl-k">return</span> x <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">?</span> [[x0, y0], [x1, y1]] <span class="pl-k">:</span> x <span class="pl-k">?</span> [x0, x1] <span class="pl-k">:</span> y <span class="pl-k">&amp;&amp;</span> [y0, y1];</td>
      </tr>
      <tr>
        <td id="L4198" class="blob-num js-line-number" data-line-number="4198"></td>
        <td id="LC4198" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4199" class="blob-num js-line-number" data-line-number="4199"></td>
        <td id="LC4199" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4200" class="blob-num js-line-number" data-line-number="4200"></td>
        <td id="LC4200" class="blob-code js-file-line">    <span class="pl-c">// Scale the data-space extent to pixels.</span></td>
      </tr>
      <tr>
        <td id="L4201" class="blob-num js-line-number" data-line-number="4201"></td>
        <td id="LC4201" class="blob-code js-file-line">    <span class="pl-k">if</span> (x) {</td>
      </tr>
      <tr>
        <td id="L4202" class="blob-num js-line-number" data-line-number="4202"></td>
        <td id="LC4202" class="blob-code js-file-line">      x0 <span class="pl-k">=</span> z[<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> z[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4203" class="blob-num js-line-number" data-line-number="4203"></td>
        <td id="LC4203" class="blob-code js-file-line">      <span class="pl-k">if</span> (y) x0 <span class="pl-k">=</span> x0[<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> x1[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4204" class="blob-num js-line-number" data-line-number="4204"></td>
        <td id="LC4204" class="blob-code js-file-line">      <span class="pl-k">if</span> (x.invert) x0 <span class="pl-k">=</span> x(x0), x1 <span class="pl-k">=</span> x(x1);</td>
      </tr>
      <tr>
        <td id="L4205" class="blob-num js-line-number" data-line-number="4205"></td>
        <td id="LC4205" class="blob-code js-file-line">      <span class="pl-k">if</span> (x1 <span class="pl-k">&lt;</span> x0) t <span class="pl-k">=</span> x0, x0 <span class="pl-k">=</span> x1, x1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L4206" class="blob-num js-line-number" data-line-number="4206"></td>
        <td id="LC4206" class="blob-code js-file-line">      extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>] <span class="pl-k">=</span> x0, extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>] <span class="pl-k">=</span> x1;</td>
      </tr>
      <tr>
        <td id="L4207" class="blob-num js-line-number" data-line-number="4207"></td>
        <td id="LC4207" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4208" class="blob-num js-line-number" data-line-number="4208"></td>
        <td id="LC4208" class="blob-code js-file-line">    <span class="pl-k">if</span> (y) {</td>
      </tr>
      <tr>
        <td id="L4209" class="blob-num js-line-number" data-line-number="4209"></td>
        <td id="LC4209" class="blob-code js-file-line">      y0 <span class="pl-k">=</span> z[<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> z[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4210" class="blob-num js-line-number" data-line-number="4210"></td>
        <td id="LC4210" class="blob-code js-file-line">      <span class="pl-k">if</span> (x) y0 <span class="pl-k">=</span> y0[<span class="pl-c1">1</span>], y1 <span class="pl-k">=</span> y1[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4211" class="blob-num js-line-number" data-line-number="4211"></td>
        <td id="LC4211" class="blob-code js-file-line">      <span class="pl-k">if</span> (y.invert) y0 <span class="pl-k">=</span> y(y0), y1 <span class="pl-k">=</span> y(y1);</td>
      </tr>
      <tr>
        <td id="L4212" class="blob-num js-line-number" data-line-number="4212"></td>
        <td id="LC4212" class="blob-code js-file-line">      <span class="pl-k">if</span> (y1 <span class="pl-k">&lt;</span> y0) t <span class="pl-k">=</span> y0, y0 <span class="pl-k">=</span> y1, y1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L4213" class="blob-num js-line-number" data-line-number="4213"></td>
        <td id="LC4213" class="blob-code js-file-line">      extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>] <span class="pl-k">=</span> y0, extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>] <span class="pl-k">=</span> y1;</td>
      </tr>
      <tr>
        <td id="L4214" class="blob-num js-line-number" data-line-number="4214"></td>
        <td id="LC4214" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4215" class="blob-num js-line-number" data-line-number="4215"></td>
        <td id="LC4215" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4216" class="blob-num js-line-number" data-line-number="4216"></td>
        <td id="LC4216" class="blob-code js-file-line">    <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L4217" class="blob-num js-line-number" data-line-number="4217"></td>
        <td id="LC4217" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4218" class="blob-num js-line-number" data-line-number="4218"></td>
        <td id="LC4218" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4219" class="blob-num js-line-number" data-line-number="4219"></td>
        <td id="LC4219" class="blob-code js-file-line">  <span class="pl-s3">brush</span>.<span class="pl-en">clear</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4220" class="blob-num js-line-number" data-line-number="4220"></td>
        <td id="LC4220" class="blob-code js-file-line">    extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>] <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4221" class="blob-num js-line-number" data-line-number="4221"></td>
        <td id="LC4221" class="blob-code js-file-line">    extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>] <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4222" class="blob-num js-line-number" data-line-number="4222"></td>
        <td id="LC4222" class="blob-code js-file-line">    extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>] <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4223" class="blob-num js-line-number" data-line-number="4223"></td>
        <td id="LC4223" class="blob-code js-file-line">    extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4224" class="blob-num js-line-number" data-line-number="4224"></td>
        <td id="LC4224" class="blob-code js-file-line">    <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L4225" class="blob-num js-line-number" data-line-number="4225"></td>
        <td id="LC4225" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4226" class="blob-num js-line-number" data-line-number="4226"></td>
        <td id="LC4226" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4227" class="blob-num js-line-number" data-line-number="4227"></td>
        <td id="LC4227" class="blob-code js-file-line">  <span class="pl-s3">brush</span>.<span class="pl-en">empty</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4228" class="blob-num js-line-number" data-line-number="4228"></td>
        <td id="LC4228" class="blob-code js-file-line">    <span class="pl-k">return</span> (x <span class="pl-k">&amp;&amp;</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>] <span class="pl-k">===</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L4229" class="blob-num js-line-number" data-line-number="4229"></td>
        <td id="LC4229" class="blob-code js-file-line">        <span class="pl-k">||</span> (y <span class="pl-k">&amp;&amp;</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>] <span class="pl-k">===</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4230" class="blob-num js-line-number" data-line-number="4230"></td>
        <td id="LC4230" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4231" class="blob-num js-line-number" data-line-number="4231"></td>
        <td id="LC4231" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4232" class="blob-num js-line-number" data-line-number="4232"></td>
        <td id="LC4232" class="blob-code js-file-line">  d3.<span class="pl-s3">select</span>(<span class="pl-s3">window</span>)</td>
      </tr>
      <tr>
        <td id="L4233" class="blob-num js-line-number" data-line-number="4233"></td>
        <td id="LC4233" class="blob-code js-file-line">      .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousemove.brush<span class="pl-pds">&quot;</span></span>, d3_svg_brushMove)</td>
      </tr>
      <tr>
        <td id="L4234" class="blob-num js-line-number" data-line-number="4234"></td>
        <td id="LC4234" class="blob-code js-file-line">      .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseup.brush<span class="pl-pds">&quot;</span></span>, d3_svg_brushUp)</td>
      </tr>
      <tr>
        <td id="L4235" class="blob-num js-line-number" data-line-number="4235"></td>
        <td id="LC4235" class="blob-code js-file-line">      .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>keydown.brush<span class="pl-pds">&quot;</span></span>, d3_svg_brushKeydown)</td>
      </tr>
      <tr>
        <td id="L4236" class="blob-num js-line-number" data-line-number="4236"></td>
        <td id="LC4236" class="blob-code js-file-line">      .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>keyup.brush<span class="pl-pds">&quot;</span></span>, d3_svg_brushKeyup);</td>
      </tr>
      <tr>
        <td id="L4237" class="blob-num js-line-number" data-line-number="4237"></td>
        <td id="LC4237" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4238" class="blob-num js-line-number" data-line-number="4238"></td>
        <td id="LC4238" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.rebind(brush, <span class="pl-s3">event</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4239" class="blob-num js-line-number" data-line-number="4239"></td>
        <td id="LC4239" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4240" class="blob-num js-line-number" data-line-number="4240"></td>
        <td id="LC4240" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4241" class="blob-num js-line-number" data-line-number="4241"></td>
        <td id="LC4241" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_brush,</td>
      </tr>
      <tr>
        <td id="L4242" class="blob-num js-line-number" data-line-number="4242"></td>
        <td id="LC4242" class="blob-code js-file-line">    d3_svg_brushDispatch,</td>
      </tr>
      <tr>
        <td id="L4243" class="blob-num js-line-number" data-line-number="4243"></td>
        <td id="LC4243" class="blob-code js-file-line">    d3_svg_brushTarget,</td>
      </tr>
      <tr>
        <td id="L4244" class="blob-num js-line-number" data-line-number="4244"></td>
        <td id="LC4244" class="blob-code js-file-line">    d3_svg_brushX,</td>
      </tr>
      <tr>
        <td id="L4245" class="blob-num js-line-number" data-line-number="4245"></td>
        <td id="LC4245" class="blob-code js-file-line">    d3_svg_brushY,</td>
      </tr>
      <tr>
        <td id="L4246" class="blob-num js-line-number" data-line-number="4246"></td>
        <td id="LC4246" class="blob-code js-file-line">    d3_svg_brushExtent,</td>
      </tr>
      <tr>
        <td id="L4247" class="blob-num js-line-number" data-line-number="4247"></td>
        <td id="LC4247" class="blob-code js-file-line">    d3_svg_brushDrag,</td>
      </tr>
      <tr>
        <td id="L4248" class="blob-num js-line-number" data-line-number="4248"></td>
        <td id="LC4248" class="blob-code js-file-line">    d3_svg_brushResize,</td>
      </tr>
      <tr>
        <td id="L4249" class="blob-num js-line-number" data-line-number="4249"></td>
        <td id="LC4249" class="blob-code js-file-line">    d3_svg_brushCenter,</td>
      </tr>
      <tr>
        <td id="L4250" class="blob-num js-line-number" data-line-number="4250"></td>
        <td id="LC4250" class="blob-code js-file-line">    d3_svg_brushOffset;</td>
      </tr>
      <tr>
        <td id="L4251" class="blob-num js-line-number" data-line-number="4251"></td>
        <td id="LC4251" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4252" class="blob-num js-line-number" data-line-number="4252"></td>
        <td id="LC4252" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushRedrawX</span>(<span class="pl-vpf">g</span>, <span class="pl-vpf">extent</span>) {</td>
      </tr>
      <tr>
        <td id="L4253" class="blob-num js-line-number" data-line-number="4253"></td>
        <td id="LC4253" class="blob-code js-file-line">  g.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.extent<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4254" class="blob-num js-line-number" data-line-number="4254"></td>
        <td id="LC4254" class="blob-code js-file-line">  g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.n,.s,.w,.nw,.sw<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>] <span class="pl-k">-</span> <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L4255" class="blob-num js-line-number" data-line-number="4255"></td>
        <td id="LC4255" class="blob-code js-file-line">  g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.e,.ne,.se<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>] <span class="pl-k">-</span> <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L4256" class="blob-num js-line-number" data-line-number="4256"></td>
        <td id="LC4256" class="blob-code js-file-line">  g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.extent,.n,.s<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>] <span class="pl-k">-</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4257" class="blob-num js-line-number" data-line-number="4257"></td>
        <td id="LC4257" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4258" class="blob-num js-line-number" data-line-number="4258"></td>
        <td id="LC4258" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4259" class="blob-num js-line-number" data-line-number="4259"></td>
        <td id="LC4259" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushRedrawY</span>(<span class="pl-vpf">g</span>, <span class="pl-vpf">extent</span>) {</td>
      </tr>
      <tr>
        <td id="L4260" class="blob-num js-line-number" data-line-number="4260"></td>
        <td id="LC4260" class="blob-code js-file-line">  g.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.extent<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4261" class="blob-num js-line-number" data-line-number="4261"></td>
        <td id="LC4261" class="blob-code js-file-line">  g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.n,.e,.w,.nw,.ne<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L4262" class="blob-num js-line-number" data-line-number="4262"></td>
        <td id="LC4262" class="blob-code js-file-line">  g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.s,.se,.sw<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L4263" class="blob-num js-line-number" data-line-number="4263"></td>
        <td id="LC4263" class="blob-code js-file-line">  g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.extent,.e,.w<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>] <span class="pl-k">-</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4264" class="blob-num js-line-number" data-line-number="4264"></td>
        <td id="LC4264" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4265" class="blob-num js-line-number" data-line-number="4265"></td>
        <td id="LC4265" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4266" class="blob-num js-line-number" data-line-number="4266"></td>
        <td id="LC4266" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushKeydown</span>() {</td>
      </tr>
      <tr>
        <td id="L4267" class="blob-num js-line-number" data-line-number="4267"></td>
        <td id="LC4267" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3.<span class="pl-s3">event</span>.keyCode <span class="pl-k">==</span> <span class="pl-c1">32</span> <span class="pl-k">&amp;&amp;</span> d3_svg_brushTarget <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>d3_svg_brushDrag) {</td>
      </tr>
      <tr>
        <td id="L4268" class="blob-num js-line-number" data-line-number="4268"></td>
        <td id="LC4268" class="blob-code js-file-line">    d3_svg_brushCenter <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4269" class="blob-num js-line-number" data-line-number="4269"></td>
        <td id="LC4269" class="blob-code js-file-line">    d3_svg_brushOffset[<span class="pl-c1">0</span>] <span class="pl-k">-=</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4270" class="blob-num js-line-number" data-line-number="4270"></td>
        <td id="LC4270" class="blob-code js-file-line">    d3_svg_brushOffset[<span class="pl-c1">1</span>] <span class="pl-k">-=</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4271" class="blob-num js-line-number" data-line-number="4271"></td>
        <td id="LC4271" class="blob-code js-file-line">    d3_svg_brushDrag <span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4272" class="blob-num js-line-number" data-line-number="4272"></td>
        <td id="LC4272" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4273" class="blob-num js-line-number" data-line-number="4273"></td>
        <td id="LC4273" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4274" class="blob-num js-line-number" data-line-number="4274"></td>
        <td id="LC4274" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4275" class="blob-num js-line-number" data-line-number="4275"></td>
        <td id="LC4275" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4276" class="blob-num js-line-number" data-line-number="4276"></td>
        <td id="LC4276" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushKeyup</span>() {</td>
      </tr>
      <tr>
        <td id="L4277" class="blob-num js-line-number" data-line-number="4277"></td>
        <td id="LC4277" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3.<span class="pl-s3">event</span>.keyCode <span class="pl-k">==</span> <span class="pl-c1">32</span> <span class="pl-k">&amp;&amp;</span> d3_svg_brushDrag <span class="pl-k">==</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L4278" class="blob-num js-line-number" data-line-number="4278"></td>
        <td id="LC4278" class="blob-code js-file-line">    d3_svg_brushOffset[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4279" class="blob-num js-line-number" data-line-number="4279"></td>
        <td id="LC4279" class="blob-code js-file-line">    d3_svg_brushOffset[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4280" class="blob-num js-line-number" data-line-number="4280"></td>
        <td id="LC4280" class="blob-code js-file-line">    d3_svg_brushDrag <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4281" class="blob-num js-line-number" data-line-number="4281"></td>
        <td id="LC4281" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4282" class="blob-num js-line-number" data-line-number="4282"></td>
        <td id="LC4282" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4283" class="blob-num js-line-number" data-line-number="4283"></td>
        <td id="LC4283" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4284" class="blob-num js-line-number" data-line-number="4284"></td>
        <td id="LC4284" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4285" class="blob-num js-line-number" data-line-number="4285"></td>
        <td id="LC4285" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushMove</span>() {</td>
      </tr>
      <tr>
        <td id="L4286" class="blob-num js-line-number" data-line-number="4286"></td>
        <td id="LC4286" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_svg_brushOffset) {</td>
      </tr>
      <tr>
        <td id="L4287" class="blob-num js-line-number" data-line-number="4287"></td>
        <td id="LC4287" class="blob-code js-file-line">    <span class="pl-s">var</span> mouse <span class="pl-k">=</span> d3.svg.mouse(d3_svg_brushTarget),</td>
      </tr>
      <tr>
        <td id="L4288" class="blob-num js-line-number" data-line-number="4288"></td>
        <td id="LC4288" class="blob-code js-file-line">        g <span class="pl-k">=</span> d3.<span class="pl-s3">select</span>(d3_svg_brushTarget);</td>
      </tr>
      <tr>
        <td id="L4289" class="blob-num js-line-number" data-line-number="4289"></td>
        <td id="LC4289" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4290" class="blob-num js-line-number" data-line-number="4290"></td>
        <td id="LC4290" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_svg_brushDrag) {</td>
      </tr>
      <tr>
        <td id="L4291" class="blob-num js-line-number" data-line-number="4291"></td>
        <td id="LC4291" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4292" class="blob-num js-line-number" data-line-number="4292"></td>
        <td id="LC4292" class="blob-code js-file-line">      <span class="pl-c">// If needed, determine the center from the current extent.</span></td>
      </tr>
      <tr>
        <td id="L4293" class="blob-num js-line-number" data-line-number="4293"></td>
        <td id="LC4293" class="blob-code js-file-line">      <span class="pl-k">if</span> (d3.<span class="pl-s3">event</span>.altKey) {</td>
      </tr>
      <tr>
        <td id="L4294" class="blob-num js-line-number" data-line-number="4294"></td>
        <td id="LC4294" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_svg_brushCenter) {</td>
      </tr>
      <tr>
        <td id="L4295" class="blob-num js-line-number" data-line-number="4295"></td>
        <td id="LC4295" class="blob-code js-file-line">          d3_svg_brushCenter <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4296" class="blob-num js-line-number" data-line-number="4296"></td>
        <td id="LC4296" class="blob-code js-file-line">            (d3_svg_brushExtent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]) / <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L4297" class="blob-num js-line-number" data-line-number="4297"></td>
        <td id="LC4297" class="blob-code js-file-line">            (d3_svg_brushExtent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>] <span class="pl-k">+</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L4298" class="blob-num js-line-number" data-line-number="4298"></td>
        <td id="LC4298" class="blob-code js-file-line">          ];</td>
      </tr>
      <tr>
        <td id="L4299" class="blob-num js-line-number" data-line-number="4299"></td>
        <td id="LC4299" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4300" class="blob-num js-line-number" data-line-number="4300"></td>
        <td id="LC4300" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4301" class="blob-num js-line-number" data-line-number="4301"></td>
        <td id="LC4301" class="blob-code js-file-line">        <span class="pl-c">// Update the offset, for when the ALT key is released.</span></td>
      </tr>
      <tr>
        <td id="L4302" class="blob-num js-line-number" data-line-number="4302"></td>
        <td id="LC4302" class="blob-code js-file-line">        d3_svg_brushOffset[<span class="pl-c1">0</span>] <span class="pl-k">=</span> d3_svg_brushExtent[<span class="pl-k">+</span>(mouse[<span class="pl-c1">0</span>] <span class="pl-k">&lt;</span> d3_svg_brushCenter[<span class="pl-c1">0</span>])][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4303" class="blob-num js-line-number" data-line-number="4303"></td>
        <td id="LC4303" class="blob-code js-file-line">        d3_svg_brushOffset[<span class="pl-c1">1</span>] <span class="pl-k">=</span> d3_svg_brushExtent[<span class="pl-k">+</span>(mouse[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> d3_svg_brushCenter[<span class="pl-c1">1</span>])][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4304" class="blob-num js-line-number" data-line-number="4304"></td>
        <td id="LC4304" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4305" class="blob-num js-line-number" data-line-number="4305"></td>
        <td id="LC4305" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4306" class="blob-num js-line-number" data-line-number="4306"></td>
        <td id="LC4306" class="blob-code js-file-line">      <span class="pl-c">// When the ALT key is released, we clear the center.</span></td>
      </tr>
      <tr>
        <td id="L4307" class="blob-num js-line-number" data-line-number="4307"></td>
        <td id="LC4307" class="blob-code js-file-line">      <span class="pl-k">else</span> d3_svg_brushCenter <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4308" class="blob-num js-line-number" data-line-number="4308"></td>
        <td id="LC4308" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4309" class="blob-num js-line-number" data-line-number="4309"></td>
        <td id="LC4309" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4310" class="blob-num js-line-number" data-line-number="4310"></td>
        <td id="LC4310" class="blob-code js-file-line">    <span class="pl-c">// Update the brush extent for each dimension.</span></td>
      </tr>
      <tr>
        <td id="L4311" class="blob-num js-line-number" data-line-number="4311"></td>
        <td id="LC4311" class="blob-code js-file-line">    <span class="pl-k">if</span> (d3_svg_brushX) {</td>
      </tr>
      <tr>
        <td id="L4312" class="blob-num js-line-number" data-line-number="4312"></td>
        <td id="LC4312" class="blob-code js-file-line">      d3_svg_brushMove1(mouse, d3_svg_brushX, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4313" class="blob-num js-line-number" data-line-number="4313"></td>
        <td id="LC4313" class="blob-code js-file-line">      d3_svg_brushRedrawX(g, d3_svg_brushExtent);</td>
      </tr>
      <tr>
        <td id="L4314" class="blob-num js-line-number" data-line-number="4314"></td>
        <td id="LC4314" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4315" class="blob-num js-line-number" data-line-number="4315"></td>
        <td id="LC4315" class="blob-code js-file-line">    <span class="pl-k">if</span> (d3_svg_brushY) {</td>
      </tr>
      <tr>
        <td id="L4316" class="blob-num js-line-number" data-line-number="4316"></td>
        <td id="LC4316" class="blob-code js-file-line">      d3_svg_brushMove1(mouse, d3_svg_brushY, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4317" class="blob-num js-line-number" data-line-number="4317"></td>
        <td id="LC4317" class="blob-code js-file-line">      d3_svg_brushRedrawY(g, d3_svg_brushExtent);</td>
      </tr>
      <tr>
        <td id="L4318" class="blob-num js-line-number" data-line-number="4318"></td>
        <td id="LC4318" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4319" class="blob-num js-line-number" data-line-number="4319"></td>
        <td id="LC4319" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4320" class="blob-num js-line-number" data-line-number="4320"></td>
        <td id="LC4320" class="blob-code js-file-line">    <span class="pl-c">// Notify listeners.</span></td>
      </tr>
      <tr>
        <td id="L4321" class="blob-num js-line-number" data-line-number="4321"></td>
        <td id="LC4321" class="blob-code js-file-line">    d3_svg_brushDispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4322" class="blob-num js-line-number" data-line-number="4322"></td>
        <td id="LC4322" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4323" class="blob-num js-line-number" data-line-number="4323"></td>
        <td id="LC4323" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4324" class="blob-num js-line-number" data-line-number="4324"></td>
        <td id="LC4324" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4325" class="blob-num js-line-number" data-line-number="4325"></td>
        <td id="LC4325" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushMove1</span>(<span class="pl-vpf">mouse</span>, <span class="pl-vpf">scale</span>, <span class="pl-vpf">i</span>) {</td>
      </tr>
      <tr>
        <td id="L4326" class="blob-num js-line-number" data-line-number="4326"></td>
        <td id="LC4326" class="blob-code js-file-line">  <span class="pl-s">var</span> range <span class="pl-k">=</span> d3_scaleRange(scale),</td>
      </tr>
      <tr>
        <td id="L4327" class="blob-num js-line-number" data-line-number="4327"></td>
        <td id="LC4327" class="blob-code js-file-line">      r0 <span class="pl-k">=</span> range[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4328" class="blob-num js-line-number" data-line-number="4328"></td>
        <td id="LC4328" class="blob-code js-file-line">      r1 <span class="pl-k">=</span> range[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L4329" class="blob-num js-line-number" data-line-number="4329"></td>
        <td id="LC4329" class="blob-code js-file-line">      offset <span class="pl-k">=</span> d3_svg_brushOffset[i],</td>
      </tr>
      <tr>
        <td id="L4330" class="blob-num js-line-number" data-line-number="4330"></td>
        <td id="LC4330" class="blob-code js-file-line">      size <span class="pl-k">=</span> d3_svg_brushExtent[<span class="pl-c1">1</span>][i] <span class="pl-k">-</span> d3_svg_brushExtent[<span class="pl-c1">0</span>][i],</td>
      </tr>
      <tr>
        <td id="L4331" class="blob-num js-line-number" data-line-number="4331"></td>
        <td id="LC4331" class="blob-code js-file-line">      min,</td>
      </tr>
      <tr>
        <td id="L4332" class="blob-num js-line-number" data-line-number="4332"></td>
        <td id="LC4332" class="blob-code js-file-line">      max;</td>
      </tr>
      <tr>
        <td id="L4333" class="blob-num js-line-number" data-line-number="4333"></td>
        <td id="LC4333" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4334" class="blob-num js-line-number" data-line-number="4334"></td>
        <td id="LC4334" class="blob-code js-file-line">  <span class="pl-c">// When dragging, reduce the range by the extent size and offset.</span></td>
      </tr>
      <tr>
        <td id="L4335" class="blob-num js-line-number" data-line-number="4335"></td>
        <td id="LC4335" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_svg_brushDrag) {</td>
      </tr>
      <tr>
        <td id="L4336" class="blob-num js-line-number" data-line-number="4336"></td>
        <td id="LC4336" class="blob-code js-file-line">    r0 <span class="pl-k">-=</span> offset;</td>
      </tr>
      <tr>
        <td id="L4337" class="blob-num js-line-number" data-line-number="4337"></td>
        <td id="LC4337" class="blob-code js-file-line">    r1 <span class="pl-k">-=</span> size <span class="pl-k">+</span> offset;</td>
      </tr>
      <tr>
        <td id="L4338" class="blob-num js-line-number" data-line-number="4338"></td>
        <td id="LC4338" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4339" class="blob-num js-line-number" data-line-number="4339"></td>
        <td id="LC4339" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4340" class="blob-num js-line-number" data-line-number="4340"></td>
        <td id="LC4340" class="blob-code js-file-line">  <span class="pl-c">// Clamp the mouse so that the extent fits within the range extent.</span></td>
      </tr>
      <tr>
        <td id="L4341" class="blob-num js-line-number" data-line-number="4341"></td>
        <td id="LC4341" class="blob-code js-file-line">  min <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(r0, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(r1, mouse[i]));</td>
      </tr>
      <tr>
        <td id="L4342" class="blob-num js-line-number" data-line-number="4342"></td>
        <td id="LC4342" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4343" class="blob-num js-line-number" data-line-number="4343"></td>
        <td id="LC4343" class="blob-code js-file-line">  <span class="pl-c">// Compute the new extent bounds.</span></td>
      </tr>
      <tr>
        <td id="L4344" class="blob-num js-line-number" data-line-number="4344"></td>
        <td id="LC4344" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_svg_brushDrag) {</td>
      </tr>
      <tr>
        <td id="L4345" class="blob-num js-line-number" data-line-number="4345"></td>
        <td id="LC4345" class="blob-code js-file-line">    max <span class="pl-k">=</span> (min <span class="pl-k">+=</span> offset) <span class="pl-k">+</span> size;</td>
      </tr>
      <tr>
        <td id="L4346" class="blob-num js-line-number" data-line-number="4346"></td>
        <td id="LC4346" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4347" class="blob-num js-line-number" data-line-number="4347"></td>
        <td id="LC4347" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4348" class="blob-num js-line-number" data-line-number="4348"></td>
        <td id="LC4348" class="blob-code js-file-line">    <span class="pl-c">// If the ALT key is pressed, then preserve the center of the extent.</span></td>
      </tr>
      <tr>
        <td id="L4349" class="blob-num js-line-number" data-line-number="4349"></td>
        <td id="LC4349" class="blob-code js-file-line">    <span class="pl-k">if</span> (d3_svg_brushCenter) offset <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(r0, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(r1, <span class="pl-c1">2</span> <span class="pl-k">*</span> d3_svg_brushCenter[i] <span class="pl-k">-</span> min));</td>
      </tr>
      <tr>
        <td id="L4350" class="blob-num js-line-number" data-line-number="4350"></td>
        <td id="LC4350" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4351" class="blob-num js-line-number" data-line-number="4351"></td>
        <td id="LC4351" class="blob-code js-file-line">    <span class="pl-c">// Compute the min and max of the offset and mouse.</span></td>
      </tr>
      <tr>
        <td id="L4352" class="blob-num js-line-number" data-line-number="4352"></td>
        <td id="LC4352" class="blob-code js-file-line">    <span class="pl-k">if</span> (offset <span class="pl-k">&lt;</span> min) {</td>
      </tr>
      <tr>
        <td id="L4353" class="blob-num js-line-number" data-line-number="4353"></td>
        <td id="LC4353" class="blob-code js-file-line">      max <span class="pl-k">=</span> min;</td>
      </tr>
      <tr>
        <td id="L4354" class="blob-num js-line-number" data-line-number="4354"></td>
        <td id="LC4354" class="blob-code js-file-line">      min <span class="pl-k">=</span> offset;</td>
      </tr>
      <tr>
        <td id="L4355" class="blob-num js-line-number" data-line-number="4355"></td>
        <td id="LC4355" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4356" class="blob-num js-line-number" data-line-number="4356"></td>
        <td id="LC4356" class="blob-code js-file-line">      max <span class="pl-k">=</span> offset;</td>
      </tr>
      <tr>
        <td id="L4357" class="blob-num js-line-number" data-line-number="4357"></td>
        <td id="LC4357" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4358" class="blob-num js-line-number" data-line-number="4358"></td>
        <td id="LC4358" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4359" class="blob-num js-line-number" data-line-number="4359"></td>
        <td id="LC4359" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4360" class="blob-num js-line-number" data-line-number="4360"></td>
        <td id="LC4360" class="blob-code js-file-line">  <span class="pl-c">// Update the stored bounds.</span></td>
      </tr>
      <tr>
        <td id="L4361" class="blob-num js-line-number" data-line-number="4361"></td>
        <td id="LC4361" class="blob-code js-file-line">  d3_svg_brushExtent[<span class="pl-c1">0</span>][i] <span class="pl-k">=</span> min;</td>
      </tr>
      <tr>
        <td id="L4362" class="blob-num js-line-number" data-line-number="4362"></td>
        <td id="LC4362" class="blob-code js-file-line">  d3_svg_brushExtent[<span class="pl-c1">1</span>][i] <span class="pl-k">=</span> max;</td>
      </tr>
      <tr>
        <td id="L4363" class="blob-num js-line-number" data-line-number="4363"></td>
        <td id="LC4363" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4364" class="blob-num js-line-number" data-line-number="4364"></td>
        <td id="LC4364" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4365" class="blob-num js-line-number" data-line-number="4365"></td>
        <td id="LC4365" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_svg_brushUp</span>() {</td>
      </tr>
      <tr>
        <td id="L4366" class="blob-num js-line-number" data-line-number="4366"></td>
        <td id="LC4366" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_svg_brushOffset) {</td>
      </tr>
      <tr>
        <td id="L4367" class="blob-num js-line-number" data-line-number="4367"></td>
        <td id="LC4367" class="blob-code js-file-line">    d3_svg_brushMove();</td>
      </tr>
      <tr>
        <td id="L4368" class="blob-num js-line-number" data-line-number="4368"></td>
        <td id="LC4368" class="blob-code js-file-line">    d3.<span class="pl-s3">select</span>(d3_svg_brushTarget).selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.resize<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>pointer-events<span class="pl-pds">&quot;</span></span>, d3_svg_brush.empty() <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4369" class="blob-num js-line-number" data-line-number="4369"></td>
        <td id="LC4369" class="blob-code js-file-line">    d3_svg_brushDispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>brushend<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4370" class="blob-num js-line-number" data-line-number="4370"></td>
        <td id="LC4370" class="blob-code js-file-line">    d3_svg_brush <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4371" class="blob-num js-line-number" data-line-number="4371"></td>
        <td id="LC4371" class="blob-code js-file-line">    d3_svg_brushDispatch <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4372" class="blob-num js-line-number" data-line-number="4372"></td>
        <td id="LC4372" class="blob-code js-file-line">    d3_svg_brushTarget <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4373" class="blob-num js-line-number" data-line-number="4373"></td>
        <td id="LC4373" class="blob-code js-file-line">    d3_svg_brushX <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4374" class="blob-num js-line-number" data-line-number="4374"></td>
        <td id="LC4374" class="blob-code js-file-line">    d3_svg_brushY <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4375" class="blob-num js-line-number" data-line-number="4375"></td>
        <td id="LC4375" class="blob-code js-file-line">    d3_svg_brushExtent <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4376" class="blob-num js-line-number" data-line-number="4376"></td>
        <td id="LC4376" class="blob-code js-file-line">    d3_svg_brushDrag <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4377" class="blob-num js-line-number" data-line-number="4377"></td>
        <td id="LC4377" class="blob-code js-file-line">    d3_svg_brushResize <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4378" class="blob-num js-line-number" data-line-number="4378"></td>
        <td id="LC4378" class="blob-code js-file-line">    d3_svg_brushCenter <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4379" class="blob-num js-line-number" data-line-number="4379"></td>
        <td id="LC4379" class="blob-code js-file-line">    d3_svg_brushOffset <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4380" class="blob-num js-line-number" data-line-number="4380"></td>
        <td id="LC4380" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4381" class="blob-num js-line-number" data-line-number="4381"></td>
        <td id="LC4381" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4382" class="blob-num js-line-number" data-line-number="4382"></td>
        <td id="LC4382" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4383" class="blob-num js-line-number" data-line-number="4383"></td>
        <td id="LC4383" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4384" class="blob-num js-line-number" data-line-number="4384"></td>
        <td id="LC4384" class="blob-code js-file-line"><span class="pl-s">var</span> d3_svg_brushCursor <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4385" class="blob-num js-line-number" data-line-number="4385"></td>
        <td id="LC4385" class="blob-code js-file-line">  n<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>ns-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4386" class="blob-num js-line-number" data-line-number="4386"></td>
        <td id="LC4386" class="blob-code js-file-line">  e<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>ew-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4387" class="blob-num js-line-number" data-line-number="4387"></td>
        <td id="LC4387" class="blob-code js-file-line">  s<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>ns-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4388" class="blob-num js-line-number" data-line-number="4388"></td>
        <td id="LC4388" class="blob-code js-file-line">  w<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>ew-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4389" class="blob-num js-line-number" data-line-number="4389"></td>
        <td id="LC4389" class="blob-code js-file-line">  nw<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>nwse-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4390" class="blob-num js-line-number" data-line-number="4390"></td>
        <td id="LC4390" class="blob-code js-file-line">  ne<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>nesw-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4391" class="blob-num js-line-number" data-line-number="4391"></td>
        <td id="LC4391" class="blob-code js-file-line">  se<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>nwse-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4392" class="blob-num js-line-number" data-line-number="4392"></td>
        <td id="LC4392" class="blob-code js-file-line">  sw<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&quot;</span>nesw-resize<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L4393" class="blob-num js-line-number" data-line-number="4393"></td>
        <td id="LC4393" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4394" class="blob-num js-line-number" data-line-number="4394"></td>
        <td id="LC4394" class="blob-code js-file-line">d3.behavior <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4395" class="blob-num js-line-number" data-line-number="4395"></td>
        <td id="LC4395" class="blob-code js-file-line"><span class="pl-c">// TODO Track touch points by identifier.</span></td>
      </tr>
      <tr>
        <td id="L4396" class="blob-num js-line-number" data-line-number="4396"></td>
        <td id="LC4396" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4397" class="blob-num js-line-number" data-line-number="4397"></td>
        <td id="LC4397" class="blob-code js-file-line"><span class="pl-s3">d3.behavior</span>.<span class="pl-en">drag</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4398" class="blob-num js-line-number" data-line-number="4398"></td>
        <td id="LC4398" class="blob-code js-file-line">  <span class="pl-s">var</span> <span class="pl-s3">event</span> <span class="pl-k">=</span> d3.dispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>drag<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>dragstart<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>dragend<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4399" class="blob-num js-line-number" data-line-number="4399"></td>
        <td id="LC4399" class="blob-code js-file-line">      origin <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4400" class="blob-num js-line-number" data-line-number="4400"></td>
        <td id="LC4400" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4401" class="blob-num js-line-number" data-line-number="4401"></td>
        <td id="LC4401" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">drag</span>() {</td>
      </tr>
      <tr>
        <td id="L4402" class="blob-num js-line-number" data-line-number="4402"></td>
        <td id="LC4402" class="blob-code js-file-line">    <span class="pl-v">this</span></td>
      </tr>
      <tr>
        <td id="L4403" class="blob-num js-line-number" data-line-number="4403"></td>
        <td id="LC4403" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousedown.drag<span class="pl-pds">&quot;</span></span>, mousedown)</td>
      </tr>
      <tr>
        <td id="L4404" class="blob-num js-line-number" data-line-number="4404"></td>
        <td id="LC4404" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchstart.drag<span class="pl-pds">&quot;</span></span>, mousedown);</td>
      </tr>
      <tr>
        <td id="L4405" class="blob-num js-line-number" data-line-number="4405"></td>
        <td id="LC4405" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4406" class="blob-num js-line-number" data-line-number="4406"></td>
        <td id="LC4406" class="blob-code js-file-line">    d3.<span class="pl-s3">select</span>(<span class="pl-s3">window</span>)</td>
      </tr>
      <tr>
        <td id="L4407" class="blob-num js-line-number" data-line-number="4407"></td>
        <td id="LC4407" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousemove.drag<span class="pl-pds">&quot;</span></span>, d3_behavior_dragMove)</td>
      </tr>
      <tr>
        <td id="L4408" class="blob-num js-line-number" data-line-number="4408"></td>
        <td id="LC4408" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchmove.drag<span class="pl-pds">&quot;</span></span>, d3_behavior_dragMove)</td>
      </tr>
      <tr>
        <td id="L4409" class="blob-num js-line-number" data-line-number="4409"></td>
        <td id="LC4409" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseup.drag<span class="pl-pds">&quot;</span></span>, d3_behavior_dragUp, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L4410" class="blob-num js-line-number" data-line-number="4410"></td>
        <td id="LC4410" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchend.drag<span class="pl-pds">&quot;</span></span>, d3_behavior_dragUp, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L4411" class="blob-num js-line-number" data-line-number="4411"></td>
        <td id="LC4411" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click.drag<span class="pl-pds">&quot;</span></span>, d3_behavior_dragClick, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4412" class="blob-num js-line-number" data-line-number="4412"></td>
        <td id="LC4412" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4413" class="blob-num js-line-number" data-line-number="4413"></td>
        <td id="LC4413" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4414" class="blob-num js-line-number" data-line-number="4414"></td>
        <td id="LC4414" class="blob-code js-file-line">  <span class="pl-c">// snapshot the local context for subsequent dispatch</span></td>
      </tr>
      <tr>
        <td id="L4415" class="blob-num js-line-number" data-line-number="4415"></td>
        <td id="LC4415" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">start</span>() {</td>
      </tr>
      <tr>
        <td id="L4416" class="blob-num js-line-number" data-line-number="4416"></td>
        <td id="LC4416" class="blob-code js-file-line">    d3_behavior_dragEvent <span class="pl-k">=</span> <span class="pl-s3">event</span>;</td>
      </tr>
      <tr>
        <td id="L4417" class="blob-num js-line-number" data-line-number="4417"></td>
        <td id="LC4417" class="blob-code js-file-line">    d3_behavior_dragEventTarget <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>.<span class="pl-sc">target</span>;</td>
      </tr>
      <tr>
        <td id="L4418" class="blob-num js-line-number" data-line-number="4418"></td>
        <td id="LC4418" class="blob-code js-file-line">    d3_behavior_dragTarget <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4419" class="blob-num js-line-number" data-line-number="4419"></td>
        <td id="LC4419" class="blob-code js-file-line">    d3_behavior_dragArguments <span class="pl-k">=</span> arguments;</td>
      </tr>
      <tr>
        <td id="L4420" class="blob-num js-line-number" data-line-number="4420"></td>
        <td id="LC4420" class="blob-code js-file-line">    d3_behavior_dragOrigin <span class="pl-k">=</span> d3_behavior_dragPoint();</td>
      </tr>
      <tr>
        <td id="L4421" class="blob-num js-line-number" data-line-number="4421"></td>
        <td id="LC4421" class="blob-code js-file-line">    <span class="pl-k">if</span> (origin) {</td>
      </tr>
      <tr>
        <td id="L4422" class="blob-num js-line-number" data-line-number="4422"></td>
        <td id="LC4422" class="blob-code js-file-line">      d3_behavior_dragOffset <span class="pl-k">=</span> origin.<span class="pl-s3">apply</span>(d3_behavior_dragTarget, d3_behavior_dragArguments);</td>
      </tr>
      <tr>
        <td id="L4423" class="blob-num js-line-number" data-line-number="4423"></td>
        <td id="LC4423" class="blob-code js-file-line">      d3_behavior_dragOffset <span class="pl-k">=</span> [d3_behavior_dragOffset.<span class="pl-sc">x</span> <span class="pl-k">-</span> d3_behavior_dragOrigin[<span class="pl-c1">0</span>], d3_behavior_dragOffset.<span class="pl-sc">y</span> <span class="pl-k">-</span> d3_behavior_dragOrigin[<span class="pl-c1">1</span>]];</td>
      </tr>
      <tr>
        <td id="L4424" class="blob-num js-line-number" data-line-number="4424"></td>
        <td id="LC4424" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4425" class="blob-num js-line-number" data-line-number="4425"></td>
        <td id="LC4425" class="blob-code js-file-line">      d3_behavior_dragOffset <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4426" class="blob-num js-line-number" data-line-number="4426"></td>
        <td id="LC4426" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4427" class="blob-num js-line-number" data-line-number="4427"></td>
        <td id="LC4427" class="blob-code js-file-line">    d3_behavior_dragMoved <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4428" class="blob-num js-line-number" data-line-number="4428"></td>
        <td id="LC4428" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4429" class="blob-num js-line-number" data-line-number="4429"></td>
        <td id="LC4429" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4430" class="blob-num js-line-number" data-line-number="4430"></td>
        <td id="LC4430" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">mousedown</span>() {</td>
      </tr>
      <tr>
        <td id="L4431" class="blob-num js-line-number" data-line-number="4431"></td>
        <td id="LC4431" class="blob-code js-file-line">    start.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4432" class="blob-num js-line-number" data-line-number="4432"></td>
        <td id="LC4432" class="blob-code js-file-line">    d3_behavior_dragDispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>dragstart<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4433" class="blob-num js-line-number" data-line-number="4433"></td>
        <td id="LC4433" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4434" class="blob-num js-line-number" data-line-number="4434"></td>
        <td id="LC4434" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4435" class="blob-num js-line-number" data-line-number="4435"></td>
        <td id="LC4435" class="blob-code js-file-line">  <span class="pl-s3">drag</span>.<span class="pl-en">origin</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4436" class="blob-num js-line-number" data-line-number="4436"></td>
        <td id="LC4436" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> origin;</td>
      </tr>
      <tr>
        <td id="L4437" class="blob-num js-line-number" data-line-number="4437"></td>
        <td id="LC4437" class="blob-code js-file-line">    origin <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L4438" class="blob-num js-line-number" data-line-number="4438"></td>
        <td id="LC4438" class="blob-code js-file-line">    <span class="pl-k">return</span> drag;</td>
      </tr>
      <tr>
        <td id="L4439" class="blob-num js-line-number" data-line-number="4439"></td>
        <td id="LC4439" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4440" class="blob-num js-line-number" data-line-number="4440"></td>
        <td id="LC4440" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4441" class="blob-num js-line-number" data-line-number="4441"></td>
        <td id="LC4441" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.rebind(drag, <span class="pl-s3">event</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4442" class="blob-num js-line-number" data-line-number="4442"></td>
        <td id="LC4442" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4443" class="blob-num js-line-number" data-line-number="4443"></td>
        <td id="LC4443" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4444" class="blob-num js-line-number" data-line-number="4444"></td>
        <td id="LC4444" class="blob-code js-file-line"><span class="pl-s">var</span> d3_behavior_dragEvent,</td>
      </tr>
      <tr>
        <td id="L4445" class="blob-num js-line-number" data-line-number="4445"></td>
        <td id="LC4445" class="blob-code js-file-line">    d3_behavior_dragEventTarget,</td>
      </tr>
      <tr>
        <td id="L4446" class="blob-num js-line-number" data-line-number="4446"></td>
        <td id="LC4446" class="blob-code js-file-line">    d3_behavior_dragTarget,</td>
      </tr>
      <tr>
        <td id="L4447" class="blob-num js-line-number" data-line-number="4447"></td>
        <td id="LC4447" class="blob-code js-file-line">    d3_behavior_dragArguments,</td>
      </tr>
      <tr>
        <td id="L4448" class="blob-num js-line-number" data-line-number="4448"></td>
        <td id="LC4448" class="blob-code js-file-line">    d3_behavior_dragOffset,</td>
      </tr>
      <tr>
        <td id="L4449" class="blob-num js-line-number" data-line-number="4449"></td>
        <td id="LC4449" class="blob-code js-file-line">    d3_behavior_dragOrigin,</td>
      </tr>
      <tr>
        <td id="L4450" class="blob-num js-line-number" data-line-number="4450"></td>
        <td id="LC4450" class="blob-code js-file-line">    d3_behavior_dragMoved;</td>
      </tr>
      <tr>
        <td id="L4451" class="blob-num js-line-number" data-line-number="4451"></td>
        <td id="LC4451" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4452" class="blob-num js-line-number" data-line-number="4452"></td>
        <td id="LC4452" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_dragDispatch</span>(<span class="pl-vpf">type</span>) {</td>
      </tr>
      <tr>
        <td id="L4453" class="blob-num js-line-number" data-line-number="4453"></td>
        <td id="LC4453" class="blob-code js-file-line">  <span class="pl-s">var</span> p <span class="pl-k">=</span> d3_behavior_dragPoint(),</td>
      </tr>
      <tr>
        <td id="L4454" class="blob-num js-line-number" data-line-number="4454"></td>
        <td id="LC4454" class="blob-code js-file-line">      o <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>,</td>
      </tr>
      <tr>
        <td id="L4455" class="blob-num js-line-number" data-line-number="4455"></td>
        <td id="LC4455" class="blob-code js-file-line">      e <span class="pl-k">=</span> d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> {type<span class="pl-k">:</span> type};</td>
      </tr>
      <tr>
        <td id="L4456" class="blob-num js-line-number" data-line-number="4456"></td>
        <td id="LC4456" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4457" class="blob-num js-line-number" data-line-number="4457"></td>
        <td id="LC4457" class="blob-code js-file-line">  <span class="pl-k">if</span> (p) {</td>
      </tr>
      <tr>
        <td id="L4458" class="blob-num js-line-number" data-line-number="4458"></td>
        <td id="LC4458" class="blob-code js-file-line">    e.<span class="pl-sc">x</span> <span class="pl-k">=</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_behavior_dragOffset[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4459" class="blob-num js-line-number" data-line-number="4459"></td>
        <td id="LC4459" class="blob-code js-file-line">    e.<span class="pl-sc">y</span> <span class="pl-k">=</span> p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> d3_behavior_dragOffset[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4460" class="blob-num js-line-number" data-line-number="4460"></td>
        <td id="LC4460" class="blob-code js-file-line">    e.dx <span class="pl-k">=</span> p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> d3_behavior_dragOrigin[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4461" class="blob-num js-line-number" data-line-number="4461"></td>
        <td id="LC4461" class="blob-code js-file-line">    e.dy <span class="pl-k">=</span> p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> d3_behavior_dragOrigin[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4462" class="blob-num js-line-number" data-line-number="4462"></td>
        <td id="LC4462" class="blob-code js-file-line">    d3_behavior_dragMoved |<span class="pl-k">=</span> e.dx | e.dy;</td>
      </tr>
      <tr>
        <td id="L4463" class="blob-num js-line-number" data-line-number="4463"></td>
        <td id="LC4463" class="blob-code js-file-line">    d3_behavior_dragOrigin <span class="pl-k">=</span> p;</td>
      </tr>
      <tr>
        <td id="L4464" class="blob-num js-line-number" data-line-number="4464"></td>
        <td id="LC4464" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4465" class="blob-num js-line-number" data-line-number="4465"></td>
        <td id="LC4465" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4466" class="blob-num js-line-number" data-line-number="4466"></td>
        <td id="LC4466" class="blob-code js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L4467" class="blob-num js-line-number" data-line-number="4467"></td>
        <td id="LC4467" class="blob-code js-file-line">    d3_behavior_dragEvent[type].<span class="pl-s3">apply</span>(d3_behavior_dragTarget, d3_behavior_dragArguments);</td>
      </tr>
      <tr>
        <td id="L4468" class="blob-num js-line-number" data-line-number="4468"></td>
        <td id="LC4468" class="blob-code js-file-line">  } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L4469" class="blob-num js-line-number" data-line-number="4469"></td>
        <td id="LC4469" class="blob-code js-file-line">    d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L4470" class="blob-num js-line-number" data-line-number="4470"></td>
        <td id="LC4470" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4471" class="blob-num js-line-number" data-line-number="4471"></td>
        <td id="LC4471" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4472" class="blob-num js-line-number" data-line-number="4472"></td>
        <td id="LC4472" class="blob-code js-file-line">  o.stopPropagation();</td>
      </tr>
      <tr>
        <td id="L4473" class="blob-num js-line-number" data-line-number="4473"></td>
        <td id="LC4473" class="blob-code js-file-line">  o.preventDefault();</td>
      </tr>
      <tr>
        <td id="L4474" class="blob-num js-line-number" data-line-number="4474"></td>
        <td id="LC4474" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4475" class="blob-num js-line-number" data-line-number="4475"></td>
        <td id="LC4475" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4476" class="blob-num js-line-number" data-line-number="4476"></td>
        <td id="LC4476" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_dragPoint</span>() {</td>
      </tr>
      <tr>
        <td id="L4477" class="blob-num js-line-number" data-line-number="4477"></td>
        <td id="LC4477" class="blob-code js-file-line">  <span class="pl-s">var</span> p <span class="pl-k">=</span> d3_behavior_dragTarget.<span class="pl-sc">parentNode</span>,</td>
      </tr>
      <tr>
        <td id="L4478" class="blob-num js-line-number" data-line-number="4478"></td>
        <td id="LC4478" class="blob-code js-file-line">      t <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>.changedTouches;</td>
      </tr>
      <tr>
        <td id="L4479" class="blob-num js-line-number" data-line-number="4479"></td>
        <td id="LC4479" class="blob-code js-file-line">  <span class="pl-k">return</span> p <span class="pl-k">&amp;&amp;</span> (t</td>
      </tr>
      <tr>
        <td id="L4480" class="blob-num js-line-number" data-line-number="4480"></td>
        <td id="LC4480" class="blob-code js-file-line">      <span class="pl-k">?</span> d3.svg.touches(p, t)[<span class="pl-c1">0</span>]</td>
      </tr>
      <tr>
        <td id="L4481" class="blob-num js-line-number" data-line-number="4481"></td>
        <td id="LC4481" class="blob-code js-file-line">      <span class="pl-k">:</span> d3.svg.mouse(p));</td>
      </tr>
      <tr>
        <td id="L4482" class="blob-num js-line-number" data-line-number="4482"></td>
        <td id="LC4482" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4483" class="blob-num js-line-number" data-line-number="4483"></td>
        <td id="LC4483" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4484" class="blob-num js-line-number" data-line-number="4484"></td>
        <td id="LC4484" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_dragMove</span>() {</td>
      </tr>
      <tr>
        <td id="L4485" class="blob-num js-line-number" data-line-number="4485"></td>
        <td id="LC4485" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_behavior_dragTarget) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4486" class="blob-num js-line-number" data-line-number="4486"></td>
        <td id="LC4486" class="blob-code js-file-line">  <span class="pl-s">var</span> parent <span class="pl-k">=</span> d3_behavior_dragTarget.<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L4487" class="blob-num js-line-number" data-line-number="4487"></td>
        <td id="LC4487" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4488" class="blob-num js-line-number" data-line-number="4488"></td>
        <td id="LC4488" class="blob-code js-file-line">  <span class="pl-c">// O NOES! The drag element was removed from the DOM.</span></td>
      </tr>
      <tr>
        <td id="L4489" class="blob-num js-line-number" data-line-number="4489"></td>
        <td id="LC4489" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>parent) <span class="pl-k">return</span> d3_behavior_dragUp();</td>
      </tr>
      <tr>
        <td id="L4490" class="blob-num js-line-number" data-line-number="4490"></td>
        <td id="LC4490" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4491" class="blob-num js-line-number" data-line-number="4491"></td>
        <td id="LC4491" class="blob-code js-file-line">  d3_behavior_dragDispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>drag<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4492" class="blob-num js-line-number" data-line-number="4492"></td>
        <td id="LC4492" class="blob-code js-file-line">  d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4493" class="blob-num js-line-number" data-line-number="4493"></td>
        <td id="LC4493" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4494" class="blob-num js-line-number" data-line-number="4494"></td>
        <td id="LC4494" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4495" class="blob-num js-line-number" data-line-number="4495"></td>
        <td id="LC4495" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_dragUp</span>() {</td>
      </tr>
      <tr>
        <td id="L4496" class="blob-num js-line-number" data-line-number="4496"></td>
        <td id="LC4496" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_behavior_dragTarget) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4497" class="blob-num js-line-number" data-line-number="4497"></td>
        <td id="LC4497" class="blob-code js-file-line">  d3_behavior_dragDispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>dragend<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4498" class="blob-num js-line-number" data-line-number="4498"></td>
        <td id="LC4498" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4499" class="blob-num js-line-number" data-line-number="4499"></td>
        <td id="LC4499" class="blob-code js-file-line">  <span class="pl-c">// If the node was moved, prevent the mouseup from propagating.</span></td>
      </tr>
      <tr>
        <td id="L4500" class="blob-num js-line-number" data-line-number="4500"></td>
        <td id="LC4500" class="blob-code js-file-line">  <span class="pl-c">// Also prevent the subsequent click from propagating (e.g., for anchors).</span></td>
      </tr>
      <tr>
        <td id="L4501" class="blob-num js-line-number" data-line-number="4501"></td>
        <td id="LC4501" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_behavior_dragMoved) {</td>
      </tr>
      <tr>
        <td id="L4502" class="blob-num js-line-number" data-line-number="4502"></td>
        <td id="LC4502" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4503" class="blob-num js-line-number" data-line-number="4503"></td>
        <td id="LC4503" class="blob-code js-file-line">    d3_behavior_dragMoved <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>.<span class="pl-sc">target</span> <span class="pl-k">===</span> d3_behavior_dragEventTarget;</td>
      </tr>
      <tr>
        <td id="L4504" class="blob-num js-line-number" data-line-number="4504"></td>
        <td id="LC4504" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4505" class="blob-num js-line-number" data-line-number="4505"></td>
        <td id="LC4505" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4506" class="blob-num js-line-number" data-line-number="4506"></td>
        <td id="LC4506" class="blob-code js-file-line">  d3_behavior_dragEvent <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4507" class="blob-num js-line-number" data-line-number="4507"></td>
        <td id="LC4507" class="blob-code js-file-line">  d3_behavior_dragEventTarget <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4508" class="blob-num js-line-number" data-line-number="4508"></td>
        <td id="LC4508" class="blob-code js-file-line">  d3_behavior_dragTarget <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4509" class="blob-num js-line-number" data-line-number="4509"></td>
        <td id="LC4509" class="blob-code js-file-line">  d3_behavior_dragArguments <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4510" class="blob-num js-line-number" data-line-number="4510"></td>
        <td id="LC4510" class="blob-code js-file-line">  d3_behavior_dragOffset <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4511" class="blob-num js-line-number" data-line-number="4511"></td>
        <td id="LC4511" class="blob-code js-file-line">  d3_behavior_dragOrigin <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4512" class="blob-num js-line-number" data-line-number="4512"></td>
        <td id="LC4512" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4513" class="blob-num js-line-number" data-line-number="4513"></td>
        <td id="LC4513" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4514" class="blob-num js-line-number" data-line-number="4514"></td>
        <td id="LC4514" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_dragClick</span>() {</td>
      </tr>
      <tr>
        <td id="L4515" class="blob-num js-line-number" data-line-number="4515"></td>
        <td id="LC4515" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_behavior_dragMoved) {</td>
      </tr>
      <tr>
        <td id="L4516" class="blob-num js-line-number" data-line-number="4516"></td>
        <td id="LC4516" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4517" class="blob-num js-line-number" data-line-number="4517"></td>
        <td id="LC4517" class="blob-code js-file-line">    d3_behavior_dragMoved <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4518" class="blob-num js-line-number" data-line-number="4518"></td>
        <td id="LC4518" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4519" class="blob-num js-line-number" data-line-number="4519"></td>
        <td id="LC4519" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4520" class="blob-num js-line-number" data-line-number="4520"></td>
        <td id="LC4520" class="blob-code js-file-line"><span class="pl-c">// TODO unbind zoom behavior?</span></td>
      </tr>
      <tr>
        <td id="L4521" class="blob-num js-line-number" data-line-number="4521"></td>
        <td id="LC4521" class="blob-code js-file-line"><span class="pl-s3">d3.behavior</span>.<span class="pl-en">zoom</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4522" class="blob-num js-line-number" data-line-number="4522"></td>
        <td id="LC4522" class="blob-code js-file-line">  <span class="pl-s">var</span> xyz <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4523" class="blob-num js-line-number" data-line-number="4523"></td>
        <td id="LC4523" class="blob-code js-file-line">      <span class="pl-s3">event</span> <span class="pl-k">=</span> d3.dispatch(<span class="pl-s1"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4524" class="blob-num js-line-number" data-line-number="4524"></td>
        <td id="LC4524" class="blob-code js-file-line">      extent <span class="pl-k">=</span> d3_behavior_zoomInfiniteExtent;</td>
      </tr>
      <tr>
        <td id="L4525" class="blob-num js-line-number" data-line-number="4525"></td>
        <td id="LC4525" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4526" class="blob-num js-line-number" data-line-number="4526"></td>
        <td id="LC4526" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">zoom</span>() {</td>
      </tr>
      <tr>
        <td id="L4527" class="blob-num js-line-number" data-line-number="4527"></td>
        <td id="LC4527" class="blob-code js-file-line">    <span class="pl-v">this</span></td>
      </tr>
      <tr>
        <td id="L4528" class="blob-num js-line-number" data-line-number="4528"></td>
        <td id="LC4528" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousedown.zoom<span class="pl-pds">&quot;</span></span>, mousedown)</td>
      </tr>
      <tr>
        <td id="L4529" class="blob-num js-line-number" data-line-number="4529"></td>
        <td id="LC4529" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousewheel.zoom<span class="pl-pds">&quot;</span></span>, mousewheel)</td>
      </tr>
      <tr>
        <td id="L4530" class="blob-num js-line-number" data-line-number="4530"></td>
        <td id="LC4530" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>DOMMouseScroll.zoom<span class="pl-pds">&quot;</span></span>, mousewheel)</td>
      </tr>
      <tr>
        <td id="L4531" class="blob-num js-line-number" data-line-number="4531"></td>
        <td id="LC4531" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>dblclick.zoom<span class="pl-pds">&quot;</span></span>, dblclick)</td>
      </tr>
      <tr>
        <td id="L4532" class="blob-num js-line-number" data-line-number="4532"></td>
        <td id="LC4532" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchstart.zoom<span class="pl-pds">&quot;</span></span>, touchstart);</td>
      </tr>
      <tr>
        <td id="L4533" class="blob-num js-line-number" data-line-number="4533"></td>
        <td id="LC4533" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4534" class="blob-num js-line-number" data-line-number="4534"></td>
        <td id="LC4534" class="blob-code js-file-line">    d3.<span class="pl-s3">select</span>(<span class="pl-s3">window</span>)</td>
      </tr>
      <tr>
        <td id="L4535" class="blob-num js-line-number" data-line-number="4535"></td>
        <td id="LC4535" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mousemove.zoom<span class="pl-pds">&quot;</span></span>, d3_behavior_zoomMousemove)</td>
      </tr>
      <tr>
        <td id="L4536" class="blob-num js-line-number" data-line-number="4536"></td>
        <td id="LC4536" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseup.zoom<span class="pl-pds">&quot;</span></span>, d3_behavior_zoomMouseup)</td>
      </tr>
      <tr>
        <td id="L4537" class="blob-num js-line-number" data-line-number="4537"></td>
        <td id="LC4537" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchmove.zoom<span class="pl-pds">&quot;</span></span>, d3_behavior_zoomTouchmove)</td>
      </tr>
      <tr>
        <td id="L4538" class="blob-num js-line-number" data-line-number="4538"></td>
        <td id="LC4538" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchend.zoom<span class="pl-pds">&quot;</span></span>, d3_behavior_zoomTouchup)</td>
      </tr>
      <tr>
        <td id="L4539" class="blob-num js-line-number" data-line-number="4539"></td>
        <td id="LC4539" class="blob-code js-file-line">        .on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click.zoom<span class="pl-pds">&quot;</span></span>, d3_behavior_zoomClick, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4540" class="blob-num js-line-number" data-line-number="4540"></td>
        <td id="LC4540" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4541" class="blob-num js-line-number" data-line-number="4541"></td>
        <td id="LC4541" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4542" class="blob-num js-line-number" data-line-number="4542"></td>
        <td id="LC4542" class="blob-code js-file-line">  <span class="pl-c">// snapshot the local context for subsequent dispatch</span></td>
      </tr>
      <tr>
        <td id="L4543" class="blob-num js-line-number" data-line-number="4543"></td>
        <td id="LC4543" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">start</span>() {</td>
      </tr>
      <tr>
        <td id="L4544" class="blob-num js-line-number" data-line-number="4544"></td>
        <td id="LC4544" class="blob-code js-file-line">    d3_behavior_zoomXyz <span class="pl-k">=</span> xyz;</td>
      </tr>
      <tr>
        <td id="L4545" class="blob-num js-line-number" data-line-number="4545"></td>
        <td id="LC4545" class="blob-code js-file-line">    d3_behavior_zoomExtent <span class="pl-k">=</span> extent;</td>
      </tr>
      <tr>
        <td id="L4546" class="blob-num js-line-number" data-line-number="4546"></td>
        <td id="LC4546" class="blob-code js-file-line">    d3_behavior_zoomDispatch <span class="pl-k">=</span> <span class="pl-s3">event</span>.zoom;</td>
      </tr>
      <tr>
        <td id="L4547" class="blob-num js-line-number" data-line-number="4547"></td>
        <td id="LC4547" class="blob-code js-file-line">    d3_behavior_zoomEventTarget <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>.<span class="pl-sc">target</span>;</td>
      </tr>
      <tr>
        <td id="L4548" class="blob-num js-line-number" data-line-number="4548"></td>
        <td id="LC4548" class="blob-code js-file-line">    d3_behavior_zoomTarget <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4549" class="blob-num js-line-number" data-line-number="4549"></td>
        <td id="LC4549" class="blob-code js-file-line">    d3_behavior_zoomArguments <span class="pl-k">=</span> arguments;</td>
      </tr>
      <tr>
        <td id="L4550" class="blob-num js-line-number" data-line-number="4550"></td>
        <td id="LC4550" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4551" class="blob-num js-line-number" data-line-number="4551"></td>
        <td id="LC4551" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4552" class="blob-num js-line-number" data-line-number="4552"></td>
        <td id="LC4552" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">mousedown</span>() {</td>
      </tr>
      <tr>
        <td id="L4553" class="blob-num js-line-number" data-line-number="4553"></td>
        <td id="LC4553" class="blob-code js-file-line">    start.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4554" class="blob-num js-line-number" data-line-number="4554"></td>
        <td id="LC4554" class="blob-code js-file-line">    d3_behavior_zoomPanning <span class="pl-k">=</span> d3_behavior_zoomLocation(d3.svg.mouse(d3_behavior_zoomTarget));</td>
      </tr>
      <tr>
        <td id="L4555" class="blob-num js-line-number" data-line-number="4555"></td>
        <td id="LC4555" class="blob-code js-file-line">    d3_behavior_zoomMoved <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4556" class="blob-num js-line-number" data-line-number="4556"></td>
        <td id="LC4556" class="blob-code js-file-line">    d3.<span class="pl-s3">event</span>.preventDefault();</td>
      </tr>
      <tr>
        <td id="L4557" class="blob-num js-line-number" data-line-number="4557"></td>
        <td id="LC4557" class="blob-code js-file-line">    <span class="pl-s3">window</span>.<span class="pl-s3">focus</span>();</td>
      </tr>
      <tr>
        <td id="L4558" class="blob-num js-line-number" data-line-number="4558"></td>
        <td id="LC4558" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4559" class="blob-num js-line-number" data-line-number="4559"></td>
        <td id="LC4559" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4560" class="blob-num js-line-number" data-line-number="4560"></td>
        <td id="LC4560" class="blob-code js-file-line">  <span class="pl-c">// store starting mouse location</span></td>
      </tr>
      <tr>
        <td id="L4561" class="blob-num js-line-number" data-line-number="4561"></td>
        <td id="LC4561" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">mousewheel</span>() {</td>
      </tr>
      <tr>
        <td id="L4562" class="blob-num js-line-number" data-line-number="4562"></td>
        <td id="LC4562" class="blob-code js-file-line">    start.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4563" class="blob-num js-line-number" data-line-number="4563"></td>
        <td id="LC4563" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_behavior_zoomZooming) d3_behavior_zoomZooming <span class="pl-k">=</span> d3_behavior_zoomLocation(d3.svg.mouse(d3_behavior_zoomTarget));</td>
      </tr>
      <tr>
        <td id="L4564" class="blob-num js-line-number" data-line-number="4564"></td>
        <td id="LC4564" class="blob-code js-file-line">    d3_behavior_zoomTo(d3_behavior_zoomDelta() <span class="pl-k">+</span> xyz[<span class="pl-c1">2</span>], d3.svg.mouse(d3_behavior_zoomTarget), d3_behavior_zoomZooming);</td>
      </tr>
      <tr>
        <td id="L4565" class="blob-num js-line-number" data-line-number="4565"></td>
        <td id="LC4565" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4566" class="blob-num js-line-number" data-line-number="4566"></td>
        <td id="LC4566" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4567" class="blob-num js-line-number" data-line-number="4567"></td>
        <td id="LC4567" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">dblclick</span>() {</td>
      </tr>
      <tr>
        <td id="L4568" class="blob-num js-line-number" data-line-number="4568"></td>
        <td id="LC4568" class="blob-code js-file-line">    start.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4569" class="blob-num js-line-number" data-line-number="4569"></td>
        <td id="LC4569" class="blob-code js-file-line">    <span class="pl-s">var</span> mouse <span class="pl-k">=</span> d3.svg.mouse(d3_behavior_zoomTarget);</td>
      </tr>
      <tr>
        <td id="L4570" class="blob-num js-line-number" data-line-number="4570"></td>
        <td id="LC4570" class="blob-code js-file-line">    d3_behavior_zoomTo(d3.<span class="pl-s3">event</span>.shiftKey <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">ceil</span>(xyz[<span class="pl-c1">2</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(xyz[<span class="pl-c1">2</span>] <span class="pl-k">+</span> <span class="pl-c1">1</span>), mouse, d3_behavior_zoomLocation(mouse));</td>
      </tr>
      <tr>
        <td id="L4571" class="blob-num js-line-number" data-line-number="4571"></td>
        <td id="LC4571" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4572" class="blob-num js-line-number" data-line-number="4572"></td>
        <td id="LC4572" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4573" class="blob-num js-line-number" data-line-number="4573"></td>
        <td id="LC4573" class="blob-code js-file-line">  <span class="pl-c">// doubletap detection</span></td>
      </tr>
      <tr>
        <td id="L4574" class="blob-num js-line-number" data-line-number="4574"></td>
        <td id="LC4574" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">touchstart</span>() {</td>
      </tr>
      <tr>
        <td id="L4575" class="blob-num js-line-number" data-line-number="4575"></td>
        <td id="LC4575" class="blob-code js-file-line">    start.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4576" class="blob-num js-line-number" data-line-number="4576"></td>
        <td id="LC4576" class="blob-code js-file-line">    <span class="pl-s">var</span> touches <span class="pl-k">=</span> d3_behavior_zoomTouchup(),</td>
      </tr>
      <tr>
        <td id="L4577" class="blob-num js-line-number" data-line-number="4577"></td>
        <td id="LC4577" class="blob-code js-file-line">        touch,</td>
      </tr>
      <tr>
        <td id="L4578" class="blob-num js-line-number" data-line-number="4578"></td>
        <td id="LC4578" class="blob-code js-file-line">        now <span class="pl-k">=</span> <span class="pl-s3">Date</span>.now();</td>
      </tr>
      <tr>
        <td id="L4579" class="blob-num js-line-number" data-line-number="4579"></td>
        <td id="LC4579" class="blob-code js-file-line">    <span class="pl-k">if</span> ((touches.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) <span class="pl-k">&amp;&amp;</span> (now <span class="pl-k">-</span> d3_behavior_zoomLast <span class="pl-k">&lt;</span> <span class="pl-c1">300</span>)) {</td>
      </tr>
      <tr>
        <td id="L4580" class="blob-num js-line-number" data-line-number="4580"></td>
        <td id="LC4580" class="blob-code js-file-line">      d3_behavior_zoomTo(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(xyz[<span class="pl-c1">2</span>]), touch <span class="pl-k">=</span> touches[<span class="pl-c1">0</span>], d3_behavior_zoomLocations[touch.identifier]);</td>
      </tr>
      <tr>
        <td id="L4581" class="blob-num js-line-number" data-line-number="4581"></td>
        <td id="LC4581" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4582" class="blob-num js-line-number" data-line-number="4582"></td>
        <td id="LC4582" class="blob-code js-file-line">    d3_behavior_zoomLast <span class="pl-k">=</span> now;</td>
      </tr>
      <tr>
        <td id="L4583" class="blob-num js-line-number" data-line-number="4583"></td>
        <td id="LC4583" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4584" class="blob-num js-line-number" data-line-number="4584"></td>
        <td id="LC4584" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4585" class="blob-num js-line-number" data-line-number="4585"></td>
        <td id="LC4585" class="blob-code js-file-line">  <span class="pl-s3">zoom</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4586" class="blob-num js-line-number" data-line-number="4586"></td>
        <td id="LC4586" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-sc">length</span>) <span class="pl-k">return</span> extent;</td>
      </tr>
      <tr>
        <td id="L4587" class="blob-num js-line-number" data-line-number="4587"></td>
        <td id="LC4587" class="blob-code js-file-line">    extent <span class="pl-k">=</span> x <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_behavior_zoomInfiniteExtent <span class="pl-k">:</span> x;</td>
      </tr>
      <tr>
        <td id="L4588" class="blob-num js-line-number" data-line-number="4588"></td>
        <td id="LC4588" class="blob-code js-file-line">    <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L4589" class="blob-num js-line-number" data-line-number="4589"></td>
        <td id="LC4589" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4590" class="blob-num js-line-number" data-line-number="4590"></td>
        <td id="LC4590" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4591" class="blob-num js-line-number" data-line-number="4591"></td>
        <td id="LC4591" class="blob-code js-file-line">  <span class="pl-k">return</span> d3.rebind(zoom, <span class="pl-s3">event</span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4592" class="blob-num js-line-number" data-line-number="4592"></td>
        <td id="LC4592" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4593" class="blob-num js-line-number" data-line-number="4593"></td>
        <td id="LC4593" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4594" class="blob-num js-line-number" data-line-number="4594"></td>
        <td id="LC4594" class="blob-code js-file-line"><span class="pl-s">var</span> d3_behavior_zoomDiv,</td>
      </tr>
      <tr>
        <td id="L4595" class="blob-num js-line-number" data-line-number="4595"></td>
        <td id="LC4595" class="blob-code js-file-line">    d3_behavior_zoomPanning,</td>
      </tr>
      <tr>
        <td id="L4596" class="blob-num js-line-number" data-line-number="4596"></td>
        <td id="LC4596" class="blob-code js-file-line">    d3_behavior_zoomZooming,</td>
      </tr>
      <tr>
        <td id="L4597" class="blob-num js-line-number" data-line-number="4597"></td>
        <td id="LC4597" class="blob-code js-file-line">    d3_behavior_zoomLocations <span class="pl-k">=</span> {}, <span class="pl-c">// identifier -&gt; location</span></td>
      </tr>
      <tr>
        <td id="L4598" class="blob-num js-line-number" data-line-number="4598"></td>
        <td id="LC4598" class="blob-code js-file-line">    d3_behavior_zoomLast <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4599" class="blob-num js-line-number" data-line-number="4599"></td>
        <td id="LC4599" class="blob-code js-file-line">    d3_behavior_zoomXyz,</td>
      </tr>
      <tr>
        <td id="L4600" class="blob-num js-line-number" data-line-number="4600"></td>
        <td id="LC4600" class="blob-code js-file-line">    d3_behavior_zoomExtent,</td>
      </tr>
      <tr>
        <td id="L4601" class="blob-num js-line-number" data-line-number="4601"></td>
        <td id="LC4601" class="blob-code js-file-line">    d3_behavior_zoomDispatch,</td>
      </tr>
      <tr>
        <td id="L4602" class="blob-num js-line-number" data-line-number="4602"></td>
        <td id="LC4602" class="blob-code js-file-line">    d3_behavior_zoomEventTarget,</td>
      </tr>
      <tr>
        <td id="L4603" class="blob-num js-line-number" data-line-number="4603"></td>
        <td id="LC4603" class="blob-code js-file-line">    d3_behavior_zoomTarget,</td>
      </tr>
      <tr>
        <td id="L4604" class="blob-num js-line-number" data-line-number="4604"></td>
        <td id="LC4604" class="blob-code js-file-line">    d3_behavior_zoomArguments,</td>
      </tr>
      <tr>
        <td id="L4605" class="blob-num js-line-number" data-line-number="4605"></td>
        <td id="LC4605" class="blob-code js-file-line">    d3_behavior_zoomMoved;</td>
      </tr>
      <tr>
        <td id="L4606" class="blob-num js-line-number" data-line-number="4606"></td>
        <td id="LC4606" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4607" class="blob-num js-line-number" data-line-number="4607"></td>
        <td id="LC4607" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomLocation</span>(<span class="pl-vpf">point</span>) {</td>
      </tr>
      <tr>
        <td id="L4608" class="blob-num js-line-number" data-line-number="4608"></td>
        <td id="LC4608" class="blob-code js-file-line">  <span class="pl-k">return</span> [</td>
      </tr>
      <tr>
        <td id="L4609" class="blob-num js-line-number" data-line-number="4609"></td>
        <td id="LC4609" class="blob-code js-file-line">    point[<span class="pl-c1">0</span>] <span class="pl-k">-</span> d3_behavior_zoomXyz[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4610" class="blob-num js-line-number" data-line-number="4610"></td>
        <td id="LC4610" class="blob-code js-file-line">    point[<span class="pl-c1">1</span>] <span class="pl-k">-</span> d3_behavior_zoomXyz[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L4611" class="blob-num js-line-number" data-line-number="4611"></td>
        <td id="LC4611" class="blob-code js-file-line">    d3_behavior_zoomXyz[<span class="pl-c1">2</span>]</td>
      </tr>
      <tr>
        <td id="L4612" class="blob-num js-line-number" data-line-number="4612"></td>
        <td id="LC4612" class="blob-code js-file-line">  ];</td>
      </tr>
      <tr>
        <td id="L4613" class="blob-num js-line-number" data-line-number="4613"></td>
        <td id="LC4613" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4614" class="blob-num js-line-number" data-line-number="4614"></td>
        <td id="LC4614" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4615" class="blob-num js-line-number" data-line-number="4615"></td>
        <td id="LC4615" class="blob-code js-file-line"><span class="pl-c">// detect the pixels that would be scrolled by this wheel event</span></td>
      </tr>
      <tr>
        <td id="L4616" class="blob-num js-line-number" data-line-number="4616"></td>
        <td id="LC4616" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomDelta</span>() {</td>
      </tr>
      <tr>
        <td id="L4617" class="blob-num js-line-number" data-line-number="4617"></td>
        <td id="LC4617" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4618" class="blob-num js-line-number" data-line-number="4618"></td>
        <td id="LC4618" class="blob-code js-file-line">  <span class="pl-c">// mousewheel events are totally broken!</span></td>
      </tr>
      <tr>
        <td id="L4619" class="blob-num js-line-number" data-line-number="4619"></td>
        <td id="LC4619" class="blob-code js-file-line">  <span class="pl-c">// https://bugs.webkit.org/show_bug.cgi?id=40441</span></td>
      </tr>
      <tr>
        <td id="L4620" class="blob-num js-line-number" data-line-number="4620"></td>
        <td id="LC4620" class="blob-code js-file-line">  <span class="pl-c">// not only that, but Chrome and Safari differ in re. to acceleration!</span></td>
      </tr>
      <tr>
        <td id="L4621" class="blob-num js-line-number" data-line-number="4621"></td>
        <td id="LC4621" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_behavior_zoomDiv) {</td>
      </tr>
      <tr>
        <td id="L4622" class="blob-num js-line-number" data-line-number="4622"></td>
        <td id="LC4622" class="blob-code js-file-line">    d3_behavior_zoomDiv <span class="pl-k">=</span> d3.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>).append(<span class="pl-s1"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4623" class="blob-num js-line-number" data-line-number="4623"></td>
        <td id="LC4623" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4624" class="blob-num js-line-number" data-line-number="4624"></td>
        <td id="LC4624" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L4625" class="blob-num js-line-number" data-line-number="4625"></td>
        <td id="LC4625" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L4626" class="blob-num js-line-number" data-line-number="4626"></td>
        <td id="LC4626" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L4627" class="blob-num js-line-number" data-line-number="4627"></td>
        <td id="LC4627" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>overflow-y<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4628" class="blob-num js-line-number" data-line-number="4628"></td>
        <td id="LC4628" class="blob-code js-file-line">      .append(<span class="pl-s1"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4629" class="blob-num js-line-number" data-line-number="4629"></td>
        <td id="LC4629" class="blob-code js-file-line">        .<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-s1"><span class="pl-pds">&quot;</span>2000px<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L4630" class="blob-num js-line-number" data-line-number="4630"></td>
        <td id="LC4630" class="blob-code js-file-line">      .node().<span class="pl-sc">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L4631" class="blob-num js-line-number" data-line-number="4631"></td>
        <td id="LC4631" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4632" class="blob-num js-line-number" data-line-number="4632"></td>
        <td id="LC4632" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4633" class="blob-num js-line-number" data-line-number="4633"></td>
        <td id="LC4633" class="blob-code js-file-line">  <span class="pl-s">var</span> e <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>, delta;</td>
      </tr>
      <tr>
        <td id="L4634" class="blob-num js-line-number" data-line-number="4634"></td>
        <td id="LC4634" class="blob-code js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L4635" class="blob-num js-line-number" data-line-number="4635"></td>
        <td id="LC4635" class="blob-code js-file-line">    d3_behavior_zoomDiv.scrollTop <span class="pl-k">=</span> <span class="pl-c1">1000</span>;</td>
      </tr>
      <tr>
        <td id="L4636" class="blob-num js-line-number" data-line-number="4636"></td>
        <td id="LC4636" class="blob-code js-file-line">    d3_behavior_zoomDiv.dispatchEvent(e);</td>
      </tr>
      <tr>
        <td id="L4637" class="blob-num js-line-number" data-line-number="4637"></td>
        <td id="LC4637" class="blob-code js-file-line">    delta <span class="pl-k">=</span> <span class="pl-c1">1000</span> <span class="pl-k">-</span> d3_behavior_zoomDiv.scrollTop;</td>
      </tr>
      <tr>
        <td id="L4638" class="blob-num js-line-number" data-line-number="4638"></td>
        <td id="LC4638" class="blob-code js-file-line">  } <span class="pl-k">catch</span> (error) {</td>
      </tr>
      <tr>
        <td id="L4639" class="blob-num js-line-number" data-line-number="4639"></td>
        <td id="LC4639" class="blob-code js-file-line">    delta <span class="pl-k">=</span> e.wheelDelta <span class="pl-k">||</span> (<span class="pl-k">-</span>e.detail <span class="pl-k">*</span> <span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="L4640" class="blob-num js-line-number" data-line-number="4640"></td>
        <td id="LC4640" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4641" class="blob-num js-line-number" data-line-number="4641"></td>
        <td id="LC4641" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4642" class="blob-num js-line-number" data-line-number="4642"></td>
        <td id="LC4642" class="blob-code js-file-line">  <span class="pl-k">return</span> delta <span class="pl-k">*</span> .<span class="pl-c1">005</span>;</td>
      </tr>
      <tr>
        <td id="L4643" class="blob-num js-line-number" data-line-number="4643"></td>
        <td id="LC4643" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4644" class="blob-num js-line-number" data-line-number="4644"></td>
        <td id="LC4644" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4645" class="blob-num js-line-number" data-line-number="4645"></td>
        <td id="LC4645" class="blob-code js-file-line"><span class="pl-c">// Note: Since we don&#39;t rotate, it&#39;s possible for the touches to become</span></td>
      </tr>
      <tr>
        <td id="L4646" class="blob-num js-line-number" data-line-number="4646"></td>
        <td id="LC4646" class="blob-code js-file-line"><span class="pl-c">// slightly detached from their original positions. Thus, we recompute the</span></td>
      </tr>
      <tr>
        <td id="L4647" class="blob-num js-line-number" data-line-number="4647"></td>
        <td id="LC4647" class="blob-code js-file-line"><span class="pl-c">// touch points on touchend as well as touchstart!</span></td>
      </tr>
      <tr>
        <td id="L4648" class="blob-num js-line-number" data-line-number="4648"></td>
        <td id="LC4648" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomTouchup</span>() {</td>
      </tr>
      <tr>
        <td id="L4649" class="blob-num js-line-number" data-line-number="4649"></td>
        <td id="LC4649" class="blob-code js-file-line">  <span class="pl-s">var</span> touches <span class="pl-k">=</span> d3.svg.touches(d3_behavior_zoomTarget),</td>
      </tr>
      <tr>
        <td id="L4650" class="blob-num js-line-number" data-line-number="4650"></td>
        <td id="LC4650" class="blob-code js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L4651" class="blob-num js-line-number" data-line-number="4651"></td>
        <td id="LC4651" class="blob-code js-file-line">      n <span class="pl-k">=</span> touches.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L4652" class="blob-num js-line-number" data-line-number="4652"></td>
        <td id="LC4652" class="blob-code js-file-line">      touch;</td>
      </tr>
      <tr>
        <td id="L4653" class="blob-num js-line-number" data-line-number="4653"></td>
        <td id="LC4653" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_behavior_zoomLocations[(touch <span class="pl-k">=</span> touches[i]).identifier] <span class="pl-k">=</span> d3_behavior_zoomLocation(touch);</td>
      </tr>
      <tr>
        <td id="L4654" class="blob-num js-line-number" data-line-number="4654"></td>
        <td id="LC4654" class="blob-code js-file-line">  <span class="pl-k">return</span> touches;</td>
      </tr>
      <tr>
        <td id="L4655" class="blob-num js-line-number" data-line-number="4655"></td>
        <td id="LC4655" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4656" class="blob-num js-line-number" data-line-number="4656"></td>
        <td id="LC4656" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4657" class="blob-num js-line-number" data-line-number="4657"></td>
        <td id="LC4657" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomTouchmove</span>() {</td>
      </tr>
      <tr>
        <td id="L4658" class="blob-num js-line-number" data-line-number="4658"></td>
        <td id="LC4658" class="blob-code js-file-line">  <span class="pl-s">var</span> touches <span class="pl-k">=</span> d3.svg.touches(d3_behavior_zoomTarget);</td>
      </tr>
      <tr>
        <td id="L4659" class="blob-num js-line-number" data-line-number="4659"></td>
        <td id="LC4659" class="blob-code js-file-line">  <span class="pl-k">switch</span> (touches.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4660" class="blob-num js-line-number" data-line-number="4660"></td>
        <td id="LC4660" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4661" class="blob-num js-line-number" data-line-number="4661"></td>
        <td id="LC4661" class="blob-code js-file-line">    <span class="pl-c">// single-touch pan</span></td>
      </tr>
      <tr>
        <td id="L4662" class="blob-num js-line-number" data-line-number="4662"></td>
        <td id="LC4662" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L4663" class="blob-num js-line-number" data-line-number="4663"></td>
        <td id="LC4663" class="blob-code js-file-line">      <span class="pl-s">var</span> touch <span class="pl-k">=</span> touches[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4664" class="blob-num js-line-number" data-line-number="4664"></td>
        <td id="LC4664" class="blob-code js-file-line">      d3_behavior_zoomTo(d3_behavior_zoomXyz[<span class="pl-c1">2</span>], touch, d3_behavior_zoomLocations[touch.identifier]);</td>
      </tr>
      <tr>
        <td id="L4665" class="blob-num js-line-number" data-line-number="4665"></td>
        <td id="LC4665" class="blob-code js-file-line">      <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4666" class="blob-num js-line-number" data-line-number="4666"></td>
        <td id="LC4666" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4667" class="blob-num js-line-number" data-line-number="4667"></td>
        <td id="LC4667" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4668" class="blob-num js-line-number" data-line-number="4668"></td>
        <td id="LC4668" class="blob-code js-file-line">    <span class="pl-c">// double-touch pan + zoom</span></td>
      </tr>
      <tr>
        <td id="L4669" class="blob-num js-line-number" data-line-number="4669"></td>
        <td id="LC4669" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L4670" class="blob-num js-line-number" data-line-number="4670"></td>
        <td id="LC4670" class="blob-code js-file-line">      <span class="pl-s">var</span> p0 <span class="pl-k">=</span> touches[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4671" class="blob-num js-line-number" data-line-number="4671"></td>
        <td id="LC4671" class="blob-code js-file-line">          p1 <span class="pl-k">=</span> touches[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L4672" class="blob-num js-line-number" data-line-number="4672"></td>
        <td id="LC4672" class="blob-code js-file-line">          p2 <span class="pl-k">=</span> [(p0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> p1[<span class="pl-c1">0</span>]) / <span class="pl-c1">2</span>, (p0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> p1[<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span>],</td>
      </tr>
      <tr>
        <td id="L4673" class="blob-num js-line-number" data-line-number="4673"></td>
        <td id="LC4673" class="blob-code js-file-line">          l0 <span class="pl-k">=</span> d3_behavior_zoomLocations[p0.identifier],</td>
      </tr>
      <tr>
        <td id="L4674" class="blob-num js-line-number" data-line-number="4674"></td>
        <td id="LC4674" class="blob-code js-file-line">          l1 <span class="pl-k">=</span> d3_behavior_zoomLocations[p1.identifier],</td>
      </tr>
      <tr>
        <td id="L4675" class="blob-num js-line-number" data-line-number="4675"></td>
        <td id="LC4675" class="blob-code js-file-line">          l2 <span class="pl-k">=</span> [(l0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> l1[<span class="pl-c1">0</span>]) / <span class="pl-c1">2</span>, (l0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> l1[<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span>, l0[<span class="pl-c1">2</span>]];</td>
      </tr>
      <tr>
        <td id="L4676" class="blob-num js-line-number" data-line-number="4676"></td>
        <td id="LC4676" class="blob-code js-file-line">      d3_behavior_zoomTo(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(d3.<span class="pl-s3">event</span>.scale) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN2</span> <span class="pl-k">+</span> l0[<span class="pl-c1">2</span>], p2, l2);</td>
      </tr>
      <tr>
        <td id="L4677" class="blob-num js-line-number" data-line-number="4677"></td>
        <td id="LC4677" class="blob-code js-file-line">      <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4678" class="blob-num js-line-number" data-line-number="4678"></td>
        <td id="LC4678" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4679" class="blob-num js-line-number" data-line-number="4679"></td>
        <td id="LC4679" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4680" class="blob-num js-line-number" data-line-number="4680"></td>
        <td id="LC4680" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4681" class="blob-num js-line-number" data-line-number="4681"></td>
        <td id="LC4681" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4682" class="blob-num js-line-number" data-line-number="4682"></td>
        <td id="LC4682" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomMousemove</span>() {</td>
      </tr>
      <tr>
        <td id="L4683" class="blob-num js-line-number" data-line-number="4683"></td>
        <td id="LC4683" class="blob-code js-file-line">  d3_behavior_zoomZooming <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4684" class="blob-num js-line-number" data-line-number="4684"></td>
        <td id="LC4684" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_behavior_zoomPanning) {</td>
      </tr>
      <tr>
        <td id="L4685" class="blob-num js-line-number" data-line-number="4685"></td>
        <td id="LC4685" class="blob-code js-file-line">    d3_behavior_zoomMoved <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4686" class="blob-num js-line-number" data-line-number="4686"></td>
        <td id="LC4686" class="blob-code js-file-line">    d3_behavior_zoomTo(d3_behavior_zoomXyz[<span class="pl-c1">2</span>], d3.svg.mouse(d3_behavior_zoomTarget), d3_behavior_zoomPanning);</td>
      </tr>
      <tr>
        <td id="L4687" class="blob-num js-line-number" data-line-number="4687"></td>
        <td id="LC4687" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4688" class="blob-num js-line-number" data-line-number="4688"></td>
        <td id="LC4688" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4689" class="blob-num js-line-number" data-line-number="4689"></td>
        <td id="LC4689" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4690" class="blob-num js-line-number" data-line-number="4690"></td>
        <td id="LC4690" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomMouseup</span>() {</td>
      </tr>
      <tr>
        <td id="L4691" class="blob-num js-line-number" data-line-number="4691"></td>
        <td id="LC4691" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_behavior_zoomPanning) {</td>
      </tr>
      <tr>
        <td id="L4692" class="blob-num js-line-number" data-line-number="4692"></td>
        <td id="LC4692" class="blob-code js-file-line">    <span class="pl-k">if</span> (d3_behavior_zoomMoved) {</td>
      </tr>
      <tr>
        <td id="L4693" class="blob-num js-line-number" data-line-number="4693"></td>
        <td id="LC4693" class="blob-code js-file-line">      d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4694" class="blob-num js-line-number" data-line-number="4694"></td>
        <td id="LC4694" class="blob-code js-file-line">      d3_behavior_zoomMoved <span class="pl-k">=</span> d3_behavior_zoomEventTarget <span class="pl-k">===</span> d3.<span class="pl-s3">event</span>.<span class="pl-sc">target</span>;</td>
      </tr>
      <tr>
        <td id="L4695" class="blob-num js-line-number" data-line-number="4695"></td>
        <td id="LC4695" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4696" class="blob-num js-line-number" data-line-number="4696"></td>
        <td id="LC4696" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4697" class="blob-num js-line-number" data-line-number="4697"></td>
        <td id="LC4697" class="blob-code js-file-line">    d3_behavior_zoomXyz <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4698" class="blob-num js-line-number" data-line-number="4698"></td>
        <td id="LC4698" class="blob-code js-file-line">    d3_behavior_zoomExtent <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4699" class="blob-num js-line-number" data-line-number="4699"></td>
        <td id="LC4699" class="blob-code js-file-line">    d3_behavior_zoomDispatch <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4700" class="blob-num js-line-number" data-line-number="4700"></td>
        <td id="LC4700" class="blob-code js-file-line">    d3_behavior_zoomEventTarget <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4701" class="blob-num js-line-number" data-line-number="4701"></td>
        <td id="LC4701" class="blob-code js-file-line">    d3_behavior_zoomTarget <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4702" class="blob-num js-line-number" data-line-number="4702"></td>
        <td id="LC4702" class="blob-code js-file-line">    d3_behavior_zoomArguments <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L4703" class="blob-num js-line-number" data-line-number="4703"></td>
        <td id="LC4703" class="blob-code js-file-line">    d3_behavior_zoomPanning <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4704" class="blob-num js-line-number" data-line-number="4704"></td>
        <td id="LC4704" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4705" class="blob-num js-line-number" data-line-number="4705"></td>
        <td id="LC4705" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4706" class="blob-num js-line-number" data-line-number="4706"></td>
        <td id="LC4706" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4707" class="blob-num js-line-number" data-line-number="4707"></td>
        <td id="LC4707" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomClick</span>() {</td>
      </tr>
      <tr>
        <td id="L4708" class="blob-num js-line-number" data-line-number="4708"></td>
        <td id="LC4708" class="blob-code js-file-line">  <span class="pl-k">if</span> (d3_behavior_zoomMoved) {</td>
      </tr>
      <tr>
        <td id="L4709" class="blob-num js-line-number" data-line-number="4709"></td>
        <td id="LC4709" class="blob-code js-file-line">    d3_eventCancel();</td>
      </tr>
      <tr>
        <td id="L4710" class="blob-num js-line-number" data-line-number="4710"></td>
        <td id="LC4710" class="blob-code js-file-line">    d3_behavior_zoomMoved <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4711" class="blob-num js-line-number" data-line-number="4711"></td>
        <td id="LC4711" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4712" class="blob-num js-line-number" data-line-number="4712"></td>
        <td id="LC4712" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4713" class="blob-num js-line-number" data-line-number="4713"></td>
        <td id="LC4713" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4714" class="blob-num js-line-number" data-line-number="4714"></td>
        <td id="LC4714" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomTo</span>(<span class="pl-vpf">z</span>, <span class="pl-vpf">x0</span>, <span class="pl-vpf">x1</span>) {</td>
      </tr>
      <tr>
        <td id="L4715" class="blob-num js-line-number" data-line-number="4715"></td>
        <td id="LC4715" class="blob-code js-file-line">  z <span class="pl-k">=</span> d3_behavior_zoomExtentClamp(z, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L4716" class="blob-num js-line-number" data-line-number="4716"></td>
        <td id="LC4716" class="blob-code js-file-line">  <span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, d3_behavior_zoomXyz[<span class="pl-c1">2</span>]),</td>
      </tr>
      <tr>
        <td id="L4717" class="blob-num js-line-number" data-line-number="4717"></td>
        <td id="LC4717" class="blob-code js-file-line">      k <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, z),</td>
      </tr>
      <tr>
        <td id="L4718" class="blob-num js-line-number" data-line-number="4718"></td>
        <td id="LC4718" class="blob-code js-file-line">      K <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, (d3_behavior_zoomXyz[<span class="pl-c1">2</span>] <span class="pl-k">=</span> z) <span class="pl-k">-</span> x1[<span class="pl-c1">2</span>]),</td>
      </tr>
      <tr>
        <td id="L4719" class="blob-num js-line-number" data-line-number="4719"></td>
        <td id="LC4719" class="blob-code js-file-line">      x_ <span class="pl-k">=</span> d3_behavior_zoomXyz[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4720" class="blob-num js-line-number" data-line-number="4720"></td>
        <td id="LC4720" class="blob-code js-file-line">      y_ <span class="pl-k">=</span> d3_behavior_zoomXyz[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L4721" class="blob-num js-line-number" data-line-number="4721"></td>
        <td id="LC4721" class="blob-code js-file-line">      x <span class="pl-k">=</span> d3_behavior_zoomXyz[<span class="pl-c1">0</span>] <span class="pl-k">=</span> d3_behavior_zoomExtentClamp((x0[<span class="pl-c1">0</span>] <span class="pl-k">-</span> x1[<span class="pl-c1">0</span>] <span class="pl-k">*</span> K), <span class="pl-c1">0</span>, k),</td>
      </tr>
      <tr>
        <td id="L4722" class="blob-num js-line-number" data-line-number="4722"></td>
        <td id="LC4722" class="blob-code js-file-line">      y <span class="pl-k">=</span> d3_behavior_zoomXyz[<span class="pl-c1">1</span>] <span class="pl-k">=</span> d3_behavior_zoomExtentClamp((x0[<span class="pl-c1">1</span>] <span class="pl-k">-</span> x1[<span class="pl-c1">1</span>] <span class="pl-k">*</span> K), <span class="pl-c1">1</span>, k),</td>
      </tr>
      <tr>
        <td id="L4723" class="blob-num js-line-number" data-line-number="4723"></td>
        <td id="LC4723" class="blob-code js-file-line">      o <span class="pl-k">=</span> d3.<span class="pl-s3">event</span>; <span class="pl-c">// Events can be reentrant (e.g., focus).</span></td>
      </tr>
      <tr>
        <td id="L4724" class="blob-num js-line-number" data-line-number="4724"></td>
        <td id="LC4724" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4725" class="blob-num js-line-number" data-line-number="4725"></td>
        <td id="LC4725" class="blob-code js-file-line">  d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4726" class="blob-num js-line-number" data-line-number="4726"></td>
        <td id="LC4726" class="blob-code js-file-line">    scale<span class="pl-k">:</span> k,</td>
      </tr>
      <tr>
        <td id="L4727" class="blob-num js-line-number" data-line-number="4727"></td>
        <td id="LC4727" class="blob-code js-file-line">    translate<span class="pl-k">:</span> [x, y],</td>
      </tr>
      <tr>
        <td id="L4728" class="blob-num js-line-number" data-line-number="4728"></td>
        <td id="LC4728" class="blob-code js-file-line">    <span class="pl-en">transform</span>: <span class="pl-st">function</span>(<span class="pl-vpf">sx</span>, <span class="pl-vpf">sy</span>) {</td>
      </tr>
      <tr>
        <td id="L4729" class="blob-num js-line-number" data-line-number="4729"></td>
        <td id="LC4729" class="blob-code js-file-line">      <span class="pl-k">if</span> (sx) transform(sx, x_, x);</td>
      </tr>
      <tr>
        <td id="L4730" class="blob-num js-line-number" data-line-number="4730"></td>
        <td id="LC4730" class="blob-code js-file-line">      <span class="pl-k">if</span> (sy) transform(sy, y_, y);</td>
      </tr>
      <tr>
        <td id="L4731" class="blob-num js-line-number" data-line-number="4731"></td>
        <td id="LC4731" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4732" class="blob-num js-line-number" data-line-number="4732"></td>
        <td id="LC4732" class="blob-code js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4733" class="blob-num js-line-number" data-line-number="4733"></td>
        <td id="LC4733" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4734" class="blob-num js-line-number" data-line-number="4734"></td>
        <td id="LC4734" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">transform</span>(<span class="pl-vpf">scale</span>, <span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L4735" class="blob-num js-line-number" data-line-number="4735"></td>
        <td id="LC4735" class="blob-code js-file-line">    scale.<span class="pl-sc">domain</span>(scale.range().map(<span class="pl-st">function</span>(<span class="pl-vpf">v</span>) { <span class="pl-k">return</span> scale.invert(((v <span class="pl-k">-</span> b) <span class="pl-k">*</span> j) / k <span class="pl-k">+</span> a); }));</td>
      </tr>
      <tr>
        <td id="L4736" class="blob-num js-line-number" data-line-number="4736"></td>
        <td id="LC4736" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4737" class="blob-num js-line-number" data-line-number="4737"></td>
        <td id="LC4737" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4738" class="blob-num js-line-number" data-line-number="4738"></td>
        <td id="LC4738" class="blob-code js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L4739" class="blob-num js-line-number" data-line-number="4739"></td>
        <td id="LC4739" class="blob-code js-file-line">    d3_behavior_zoomDispatch.<span class="pl-s3">apply</span>(d3_behavior_zoomTarget, d3_behavior_zoomArguments);</td>
      </tr>
      <tr>
        <td id="L4740" class="blob-num js-line-number" data-line-number="4740"></td>
        <td id="LC4740" class="blob-code js-file-line">  } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L4741" class="blob-num js-line-number" data-line-number="4741"></td>
        <td id="LC4741" class="blob-code js-file-line">    d3.<span class="pl-s3">event</span> <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L4742" class="blob-num js-line-number" data-line-number="4742"></td>
        <td id="LC4742" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4743" class="blob-num js-line-number" data-line-number="4743"></td>
        <td id="LC4743" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4744" class="blob-num js-line-number" data-line-number="4744"></td>
        <td id="LC4744" class="blob-code js-file-line">  o.preventDefault();</td>
      </tr>
      <tr>
        <td id="L4745" class="blob-num js-line-number" data-line-number="4745"></td>
        <td id="LC4745" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4746" class="blob-num js-line-number" data-line-number="4746"></td>
        <td id="LC4746" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4747" class="blob-num js-line-number" data-line-number="4747"></td>
        <td id="LC4747" class="blob-code js-file-line"><span class="pl-s">var</span> d3_behavior_zoomInfiniteExtent <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4748" class="blob-num js-line-number" data-line-number="4748"></td>
        <td id="LC4748" class="blob-code js-file-line">  [<span class="pl-k">-</span><span class="pl-c1">Infinity</span>, <span class="pl-c1">Infinity</span>],</td>
      </tr>
      <tr>
        <td id="L4749" class="blob-num js-line-number" data-line-number="4749"></td>
        <td id="LC4749" class="blob-code js-file-line">  [<span class="pl-k">-</span><span class="pl-c1">Infinity</span>, <span class="pl-c1">Infinity</span>],</td>
      </tr>
      <tr>
        <td id="L4750" class="blob-num js-line-number" data-line-number="4750"></td>
        <td id="LC4750" class="blob-code js-file-line">  [<span class="pl-k">-</span><span class="pl-c1">Infinity</span>, <span class="pl-c1">Infinity</span>]</td>
      </tr>
      <tr>
        <td id="L4751" class="blob-num js-line-number" data-line-number="4751"></td>
        <td id="LC4751" class="blob-code js-file-line">];</td>
      </tr>
      <tr>
        <td id="L4752" class="blob-num js-line-number" data-line-number="4752"></td>
        <td id="LC4752" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4753" class="blob-num js-line-number" data-line-number="4753"></td>
        <td id="LC4753" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">d3_behavior_zoomExtentClamp</span>(<span class="pl-vpf">x</span>, <span class="pl-vpf">i</span>, <span class="pl-vpf">k</span>) {</td>
      </tr>
      <tr>
        <td id="L4754" class="blob-num js-line-number" data-line-number="4754"></td>
        <td id="LC4754" class="blob-code js-file-line">  <span class="pl-s">var</span> range <span class="pl-k">=</span> d3_behavior_zoomExtent[i],</td>
      </tr>
      <tr>
        <td id="L4755" class="blob-num js-line-number" data-line-number="4755"></td>
        <td id="LC4755" class="blob-code js-file-line">      r0 <span class="pl-k">=</span> range[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4756" class="blob-num js-line-number" data-line-number="4756"></td>
        <td id="LC4756" class="blob-code js-file-line">      r1 <span class="pl-k">=</span> range[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4757" class="blob-num js-line-number" data-line-number="4757"></td>
        <td id="LC4757" class="blob-code js-file-line">  <span class="pl-k">return</span> arguments.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L4758" class="blob-num js-line-number" data-line-number="4758"></td>
        <td id="LC4758" class="blob-code js-file-line">      <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(r1 <span class="pl-k">*</span> (r1 <span class="pl-k">===</span> <span class="pl-c1">Infinity</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span> <span class="pl-k">:</span> <span class="pl-c1">1</span> / k <span class="pl-k">-</span> <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L4759" class="blob-num js-line-number" data-line-number="4759"></td>
        <td id="LC4759" class="blob-code js-file-line">        <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(r0 <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span> <span class="pl-k">?</span> <span class="pl-c1">Infinity</span> <span class="pl-k">:</span> r0, x / k)) <span class="pl-k">*</span> k</td>
      </tr>
      <tr>
        <td id="L4760" class="blob-num js-line-number" data-line-number="4760"></td>
        <td id="LC4760" class="blob-code js-file-line">      <span class="pl-k">:</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(r0, <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(r1, x));</td>
      </tr>
      <tr>
        <td id="L4761" class="blob-num js-line-number" data-line-number="4761"></td>
        <td id="LC4761" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4762" class="blob-num js-line-number" data-line-number="4762"></td>
        <td id="LC4762" class="blob-code js-file-line">})();</td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="https://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.12631s from github-fe142-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-9c11f4775e29ca98dfb04318e2516918a2638b3950b33a4d31c4ca3eaff21ba7.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-7d7db0fa0812858bcfb8940e3c6babccd2e6f6321279090f48129acd6c2aaa3d.js" type="text/javascript"></script>
      
      
  </body>
</html>

